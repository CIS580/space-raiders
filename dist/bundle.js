/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./dist/resources/planet_player/PlanetPlayer.json":
/*!********************************************************!*\
  !*** ./dist/resources/planet_player/PlanetPlayer.json ***!
  \********************************************************/
/*! exports provided: columns, image, imageheight, imagewidth, margin, name, spacing, tilecount, tiledversion, tileheight, tilewidth, type, version, default */
/***/ (function(module) {

eval("module.exports = {\"columns\":3,\"image\":\"astrogun.png\",\"imageheight\":128,\"imagewidth\":96,\"margin\":0,\"name\":\"AstroGun\",\"spacing\":0,\"tilecount\":12,\"tiledversion\":\"1.2.1\",\"tileheight\":32,\"tilewidth\":32,\"type\":\"tileset\",\"version\":1.2};\n\n//# sourceURL=webpack:///./dist/resources/planet_player/PlanetPlayer.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/DesertMazeLevel/mazemap.json":
/*!*********************************************************************!*\
  !*** ./dist/resources/planet_tilesets/DesertMazeLevel/mazemap.json ***!
  \*********************************************************************/
/*! exports provided: height, infinite, layers, nextlayerid, nextobjectid, orientation, renderorder, tiledversion, tileheight, tilesets, tilewidth, type, version, width, default */
/***/ (function(module) {

eval("module.exports = {\"height\":96,\"infinite\":false,\"layers\":[{\"data\":[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,2,2,2,10,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,7,7,7,9,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,2,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,14,7,7,7,7,7,14,7,7,7,7,2,2,2,2,10,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,14,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,9,7,7,7,7,7,7,11,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,4,2,2,2,2,2,2,2,10,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,11,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,7,14,7,7,7,7,7,14,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,14,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,4,2,2,2,2,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,1,2,2,2,10,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,2,2,2,2,2,2,2,2,10,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,2,2,2,2,2,10,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,4,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,2,2,2,2,2,2,2,2,2,2,2,2,2,10,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,4,2,2,2,2,7,7,7,9,7,7,7,9,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,2,2,2,2,2,10,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,4,2,2,2,2,10,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,9,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,4,2,2,2,2,10,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,5,2,7,2,10,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,4,2,2,2,9,7,7,7,9,7,7,9,7,7,9,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,7,7,7,7,7,7,7,7,9,14,7,14,9,7,7,7,7,7,7,7,7,7,7,9,7,7,7,2,2,2,2,2,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,9,14,7,14,9,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,4,2,2,2,10,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,7,7,7,7,9,7,7,7,9,7,7,7,7,9,14,7,14,9,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,14,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,4,2,2,2,10,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,7,9,14,7,14,4,2,2,2,10,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,7,7,7,9,7,7,7,4,2,2,2,10,7,7,7,9,7,7,7,9,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,7,4,2,2,2,10,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,14,7,9,7,7,7,9,7,7,7,7,9,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,10,7,7,7,2,2,2,2,2,2,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,15,15,15,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,2,2,2,2,10,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,15,13,15,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,2,2,2,2,2,2,2,2,2,2,2,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,15,15,15,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,7,7,7,4,2,2,2,2,2,2,5,2,2,2,2,2,2,2,10,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,2,2,2,2,10,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,4,2,2,2,10,7,7,7,4,2,2,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,7,7,7,4,2,2,2,2,2,2,2,3,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,14,7,7,7,2,2,2,2,10,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,10,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,11,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,2,2,2,2,10,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,4,2,2,2,2,5,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,4,2,2,2,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,4,2,2,2,2,2,2,2,2,10,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,4,2,2,2,2,2,2,2,7,7,7,9,7,7,7,9,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,2,2,2,2,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,4,2,2,2,2,2,2,2,7,7,7,9,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,2,2,2,2,2,2,2,2,2,10,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,2,2,2,2,2,2,2,2,2,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,4,2,2,2,10,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,10,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,7,7,7,4,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,9,7,7,7,4,2,2,2,2,2,2,2,5,2,2,2,2,2,2,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,4,2,2,2,5,2,2,2,2,2,2,2,5,2,2,2,2,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,4,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,11,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,4,2,2,2,7,7,7,4,2,2,2,2,2,2,2,10,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,4,2,2,2,2,10,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,8,7,7,7,7,7,7,1,2,2,2,10,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,4,2,2,2,7,7,7,4,2,2,2,2,7,7,7,9,7,7,7,2,2,2,2,2,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,4,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,9,7,7,7,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,10,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,4,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,9,7,7,7,9,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,9,7,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,9,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,6,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,7,7,7,9,7,7,7,8,7,7,7,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,2,2,2,2,2,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7],\"height\":96,\"id\":1,\"name\":\"Tile Layer 1\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":128,\"x\":0,\"y\":0}],\"nextlayerid\":2,\"nextobjectid\":1,\"orientation\":\"orthogonal\",\"renderorder\":\"right-down\",\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tilesets\":[{\"firstgid\":1,\"source\":\"sand.tsx\"}],\"tilewidth\":32,\"type\":\"map\",\"version\":1.2,\"width\":128};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/DesertMazeLevel/mazemap.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/DesertMazeLevel/sandy.json":
/*!*******************************************************************!*\
  !*** ./dist/resources/planet_tilesets/DesertMazeLevel/sandy.json ***!
  \*******************************************************************/
/*! exports provided: columns, image, imageheight, imagewidth, margin, name, spacing, tilecount, tiledversion, tileheight, tiles, tilewidth, type, version, default */
/***/ (function(module) {

eval("module.exports = {\"columns\":5,\"image\":\"dss.png\",\"imageheight\":96,\"imagewidth\":160,\"margin\":0,\"name\":\"sand\",\"spacing\":0,\"tilecount\":15,\"tiledversion\":\"1.2.1\",\"tileheight\":32,\"tiles\":[{\"id\":0,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":1,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":2,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":3,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":4,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":5,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":6,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":7,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":8,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":9,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":10,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":11,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":12,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":13,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":14,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]}],\"tilewidth\":32,\"type\":\"tileset\",\"version\":1.2};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/DesertMazeLevel/sandy.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/DesertShackLevel/tilemap.json":
/*!**********************************************************************!*\
  !*** ./dist/resources/planet_tilesets/DesertShackLevel/tilemap.json ***!
  \**********************************************************************/
/*! exports provided: height, infinite, layers, nextlayerid, nextobjectid, orientation, renderorder, tiledversion, tileheight, tilesets, tilewidth, type, version, width, default */
/***/ (function(module) {

eval("module.exports = {\"height\":60,\"infinite\":false,\"layers\":[{\"data\":[1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,2,2,2,3,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,6,7,7,7,8,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,14,14,14,7,7,7,7,7,7,6,7,11,7,8,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,6,7,7,7,8,7,7,7,7,7,7,7,7,7,8,6,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,7,7,7,8,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,7,7,7,8,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,14,7,14,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,14,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,14,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8],\"height\":60,\"id\":3,\"name\":\"Tile Layer 1\",\"offsetx\":1,\"offsety\":0,\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":60,\"x\":0,\"y\":0}],\"nextlayerid\":4,\"nextobjectid\":1,\"orientation\":\"orthogonal\",\"renderorder\":\"right-down\",\"tiledversion\":\"2018.09.12\",\"tileheight\":32,\"tilesets\":[{\"firstgid\":1,\"source\":\"tileset.json\"}],\"tilewidth\":32,\"type\":\"map\",\"version\":1.2,\"width\":60};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/DesertShackLevel/tilemap.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/DesertShackLevel/tileset.json":
/*!**********************************************************************!*\
  !*** ./dist/resources/planet_tilesets/DesertShackLevel/tileset.json ***!
  \**********************************************************************/
/*! exports provided: columns, image, imageheight, imagewidth, margin, name, spacing, tilecount, tiledversion, tileheight, tiles, tilewidth, type, version, default */
/***/ (function(module) {

eval("module.exports = {\"columns\":5,\"image\":\"Desert.png\",\"imageheight\":96,\"imagewidth\":160,\"margin\":0,\"name\":\"tilset\",\"spacing\":0,\"tilecount\":15,\"tiledversion\":\"2018.09.12\",\"tileheight\":32,\"tiles\":[{\"id\":0,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":1,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":2,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":3,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":4,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":5,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":6,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":7,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":8,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":9,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":10,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":11,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":12,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":13,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":14,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]}],\"tilewidth\":32,\"type\":\"tileset\",\"version\":1.2};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/DesertShackLevel/tileset.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/IceRockLevel/myTileset.json":
/*!********************************************************************!*\
  !*** ./dist/resources/planet_tilesets/IceRockLevel/myTileset.json ***!
  \********************************************************************/
/*! exports provided: columns, image, imageheight, imagewidth, margin, name, spacing, tilecount, tiledversion, tileheight, tiles, tilewidth, type, version, default */
/***/ (function(module) {

eval("module.exports = {\"columns\":74,\"image\":\"../../../../../../space-raiders-master (1)/space-raiders-master/dist/resources/planet_tilesets/sample_planet_level/tiles.png\",\"imageheight\":32,\"imagewidth\":2368,\"margin\":0,\"name\":\"IceV2TS\",\"spacing\":0,\"tilecount\":74,\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tiles\":[{\"id\":0,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":1,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":2,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":3,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":4,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":5,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":6,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":7,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":8,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":9,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":10,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":11,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":12,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":13,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":14,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":15,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":true}]},{\"id\":16,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":true}]},{\"id\":17,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":18,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":19,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":20,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":21,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":22,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":23,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":24,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":25,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":26,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":27,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":28,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":29,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":30,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":31,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":32,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":33,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":34,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":35,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":36,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":37,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":38,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":39,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":40,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":41,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":42,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":43,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":44,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":45,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":46,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":47,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":48,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":49,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":50,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":51,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":52,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":53,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":54,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":55,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":56,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":57,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":58,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":59,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":60,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":61,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":62,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":63,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]},{\"id\":64,\"properties\":[{\"name\":\"slippery\",\"type\":\"bool\",\"value\":false}]}],\"tilewidth\":32,\"type\":\"tileset\",\"version\":1.2};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/IceRockLevel/myTileset.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/IceRockLevel/puzzleRoomR.json":
/*!**********************************************************************!*\
  !*** ./dist/resources/planet_tilesets/IceRockLevel/puzzleRoomR.json ***!
  \**********************************************************************/
/*! exports provided: height, infinite, layers, nextlayerid, nextobjectid, orientation, renderorder, tiledversion, tileheight, tilesets, tilewidth, type, version, width, default */
/***/ (function(module) {

eval("module.exports = {\"height\":32,\"infinite\":false,\"layers\":[{\"data\":[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,1,2,3,1,6,35,4,15,8,8,8,8,8,8,12,36,36,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,1,2,3,1,14,10,13,6,3,1,2,3,1,2,5,36,36,35,36,35,35,35,35,35,16,16,16,16,16,16,16,35,1,2,3,1,16,16,16,14,10,10,45,3,1,2,4,36,36,35,36,16,16,36,16,16,16,16,16,35,16,16,16,35,35,35,35,35,35,35,35,35,35,35,7,1,1,2,4,36,36,35,36,16,16,35,16,16,16,16,16,16,17,16,16,7,1,3,3,1,2,3,1,2,3,35,7,1,1,2,5,36,36,35,36,16,16,16,16,17,16,16,16,16,16,16,35,35,35,35,35,35,2,3,3,3,3,35,6,1,2,3,5,36,36,35,36,16,16,16,16,16,17,16,17,16,17,16,16,6,1,2,34,35,3,3,1,2,3,35,6,1,2,3,5,36,36,35,36,16,16,16,16,35,17,16,35,17,17,16,16,35,35,35,35,35,2,3,3,3,3,35,7,1,2,3,4,36,36,35,36,16,16,16,16,16,16,17,17,17,17,16,16,35,2,2,3,35,3,3,3,3,3,35,6,2,48,10,13,36,36,35,36,35,16,16,16,35,17,17,17,16,16,16,16,35,1,34,3,35,35,2,3,3,35,35,6,2,5,35,35,36,36,35,36,35,16,16,17,17,17,16,17,16,17,16,16,36,1,2,3,1,2,3,2,35,36,1,14,10,13,17,17,36,36,35,36,16,17,16,16,16,16,16,17,16,16,16,16,36,36,36,3,35,36,36,36,36,36,35,35,35,35,17,17,36,36,35,36,16,35,16,16,16,17,17,17,35,16,16,16,7,1,36,3,3,3,3,3,35,16,16,16,16,35,17,17,36,36,35,36,16,17,16,16,16,17,16,17,17,16,16,16,36,1,36,3,3,2,3,2,35,16,16,16,16,16,17,17,36,36,35,36,16,16,16,16,17,17,16,17,17,16,35,16,6,3,36,3,3,3,1,3,35,35,16,35,16,35,17,17,36,36,35,36,16,16,16,16,17,35,16,17,17,17,35,35,36,36,36,3,3,1,3,1,35,35,16,16,35,35,17,17,36,36,35,36,16,16,35,16,17,17,17,17,16,17,35,35,35,2,1,3,3,3,2,3,35,16,16,16,35,35,17,17,36,36,35,36,16,16,16,16,16,17,35,35,16,16,16,16,35,3,1,2,3,3,2,3,1,16,35,16,16,35,17,17,36,36,35,36,35,17,16,17,17,16,16,17,17,35,16,16,35,3,1,2,3,1,2,3,1,16,16,16,16,35,17,17,36,36,35,36,16,16,16,35,16,16,16,16,16,16,16,16,35,35,35,35,35,35,35,35,35,16,35,16,16,35,17,17,36,36,35,36,16,16,16,16,16,16,16,35,16,16,16,16,35,36,34,16,16,16,16,16,16,16,16,16,35,35,17,17,36,36,35,36,16,35,16,35,35,35,16,35,35,35,16,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,17,17,36,36,35,36,8,35,9,8,8,9,8,8,8,8,8,9,35,35,16,16,16,16,16,35,16,16,3,1,34,35,17,17,36,36,35,35,3,35,1,1,2,3,1,2,1,2,3,3,35,16,16,16,16,16,16,16,16,16,36,1,3,35,17,17,36,36,35,35,3,35,35,35,35,35,35,35,35,35,35,35,35,16,16,16,16,35,16,16,16,16,36,1,2,35,17,17,36,36,34,11,11,11,35,35,11,11,45,2,35,34,35,34,35,16,35,16,16,16,16,16,16,16,35,35,10,35,35,35,36,36,35,17,17,17,17,17,17,35,7,1,35,3,35,3,35,16,16,16,35,16,16,16,16,16,35,17,17,17,17,17,36,36,35,17,17,17,17,17,17,17,7,1,3,3,3,3,4,16,16,16,16,16,16,16,35,16,35,17,17,17,17,17,36,36,35,17,17,35,17,17,17,16,7,2,35,1,35,3,35,16,16,35,16,16,16,16,16,16,35,17,17,17,17,35,36,36,34,8,8,9,8,8,35,8,46,2,35,34,35,3,35,16,16,35,16,16,16,16,16,16,35,9,8,9,8,35,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,2,2,2,3,3,36],\"height\":32,\"id\":4,\"name\":\"Tile Layer 1\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0},{\"data\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,35,0,4,0,3,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,0,0,0,65,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,0,0,0,65,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,0,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,33,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,33,0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,33,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,33,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,0,0,0,0,0,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,33,0,0,0,0,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,33,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,33,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,39,0],\"height\":32,\"id\":6,\"name\":\"RocksnStuff\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0}],\"nextlayerid\":7,\"nextobjectid\":1,\"orientation\":\"orthogonal\",\"renderorder\":\"right-down\",\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tilesets\":[{\"firstgid\":1,\"source\":\"../../../../../../space-raiders-master (1)/space-raiders-master/dist/resources/planet_tilesets/sample_planet_level/tileset.json\"}],\"tilewidth\":32,\"type\":\"map\",\"version\":1.2,\"width\":32};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/IceRockLevel/puzzleRoomR.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/IceWireLevel/tilemap.json":
/*!******************************************************************!*\
  !*** ./dist/resources/planet_tilesets/IceWireLevel/tilemap.json ***!
  \******************************************************************/
/*! exports provided: height, infinite, layers, nextlayerid, nextobjectid, orientation, renderorder, tiledversion, tileheight, tilesets, tilewidth, type, version, width, default */
/***/ (function(module) {

eval("module.exports = {\"height\":24,\"infinite\":false,\"layers\":[{\"data\":[16,16,16,16,16,15,8,8,8,12,16,16,16,16,16,16,16,16,15,9,8,9,9,8,12,16,16,16,16,16,16,16,16,16,16,16,16,6,1,1,1,4,16,16,16,16,16,16,16,15,46,1,1,1,1,1,47,12,16,16,16,16,16,16,16,16,16,16,16,6,1,44,1,4,16,16,16,16,16,16,15,46,1,1,1,62,62,62,1,47,12,16,16,16,16,16,16,16,16,16,16,6,1,1,1,4,16,16,16,16,16,15,46,1,1,1,1,62,1,62,1,1,47,12,16,16,16,16,1,1,1,1,1,22,64,64,64,23,9,9,9,9,9,46,1,1,1,1,62,62,62,62,1,1,1,47,12,16,16,16,1,1,1,1,1,21,64,64,64,23,2,2,3,3,3,3,3,2,2,2,2,62,1,1,2,2,1,1,5,16,16,16,1,1,1,1,1,21,64,64,64,24,3,3,3,1,1,3,3,48,45,3,3,62,62,62,2,2,2,2,4,16,16,16,1,1,1,1,1,21,64,64,64,24,11,11,11,11,11,11,11,13,14,10,10,10,10,10,10,10,10,10,13,16,16,16,36,36,36,36,36,36,64,64,64,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,16,16,16,16,16,16,16,16,16,16,16,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,16,16,16,16,16,16,16,16,16,16,7,1,49,1,1,1,1,1,49,1,1,1,49,1,1,1,1,1,1,1,1,16,16,16,16,16,16,16,16,16,16,16,7,1,70,1,1,1,1,1,70,1,1,1,70,1,1,1,1,1,1,1,1,16,16,16,16,16,16,16,16,16,16,15,46,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,16,16,15,8,8,8,8,8,8,46,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,58,54,53,54,60,16,16,16,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,56,1,1,1,1,16,16,16,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,57,1,1,1,1,16,16,16,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,56,1,1,1,55,16,16,16,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,57,1,1,1,1,16,16,16,6,1,1,1,1,1,1,1,71,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,56,1,1,1,1,16,16,16,6,1,1,1,1,1,1,1,66,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,61,54,53,54,59,16,16,16,6,1,1,1,1,1,1,74,72,1,1,1,69,1,1,1,69,1,1,1,1,1,69,1,1,1,1,1,1,16,16,16,6,1,1,1,1,1,1,1,34,1,1,1,49,1,1,1,49,1,1,1,1,1,49,1,1,1,1,1,1,16,16,16,14,11,11,11,11,11,11,45,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,16,16,16,16,16,16,16,16,16,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],\"height\":24,\"id\":1,\"name\":\"Tile Layer 1\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0}],\"nextlayerid\":2,\"nextobjectid\":1,\"orientation\":\"orthogonal\",\"renderorder\":\"right-down\",\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tilesets\":[{\"firstgid\":1,\"source\":\"tileset.tsx\"}],\"tilewidth\":32,\"type\":\"map\",\"version\":1.2,\"width\":32};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/IceWireLevel/tilemap.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/IceWireLevel/tileset.json":
/*!******************************************************************!*\
  !*** ./dist/resources/planet_tilesets/IceWireLevel/tileset.json ***!
  \******************************************************************/
/*! exports provided: columns, image, imageheight, imagewidth, margin, name, spacing, tilecount, tiledversion, tileheight, tiles, tilewidth, type, version, default */
/***/ (function(module) {

eval("module.exports = {\"columns\":76,\"image\":\"tiles.png\",\"imageheight\":32,\"imagewidth\":2272,\"margin\":0,\"name\":\"tileset\",\"spacing\":0,\"tilecount\":77,\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tiles\":[{\"id\":0,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":1,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true,\"idval\":\"snow\"},{\"name\":\"water\",\"type\":\"bool\",\"value\":false,\"idval\":\"snow\"}]},{\"id\":2,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":3,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":4,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":5,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":6,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":7,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":8,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":9,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":10,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":11,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":12,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":13,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":14,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":15,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":16,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":17,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":18,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":19,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":20,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":21,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":22,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":23,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":24,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":25,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":26,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":27,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":28,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":29,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":30,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":31,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":32,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":33,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":34,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":35,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":36,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":37,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":38,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":39,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":40,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":41,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":42,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":43,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":44,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":45,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":46,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":47,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":48,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":49,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":50,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":51,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":52,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":53,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":54,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":55,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":56,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":57,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":58,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":59,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":60,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":61,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":62,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":63,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":63,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":64,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":65,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":66,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":67,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":68,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":69,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":70,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":71,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":72,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":73,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":74,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":75,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":76,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]}],\"tilewidth\":32,\"type\":\"tileset\",\"version\":1.2};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/IceWireLevel/tileset.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/LizardJungleLevel/jungle_tileset.json":
/*!******************************************************************************!*\
  !*** ./dist/resources/planet_tilesets/LizardJungleLevel/jungle_tileset.json ***!
  \******************************************************************************/
/*! exports provided: columns, image, imageheight, imagewidth, margin, name, spacing, tilecount, tiledversion, tileheight, tiles, tilewidth, type, version, default */
/***/ (function(module) {

eval("module.exports = {\"columns\":10,\"image\":\"jungle tileset.png\",\"imageheight\":320,\"imagewidth\":320,\"margin\":0,\"name\":\"jungle_tileset\",\"spacing\":0,\"tilecount\":100,\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tiles\":[{\"id\":14,\"properties\":[{\"name\":\"passable\",\"type\":\"string\",\"value\":\"false\"}]},{\"id\":15,\"properties\":[{\"name\":\"passable\",\"type\":\"string\",\"value\":\"false\"}]},{\"id\":16,\"properties\":[{\"name\":\"passable\",\"type\":\"string\",\"value\":\"false\"}]},{\"id\":17,\"properties\":[{\"name\":\"passable\",\"type\":\"string\",\"value\":\"false\"}]},{\"id\":18,\"properties\":[{\"name\":\"passable\",\"type\":\"string\",\"value\":\"false\"}]}],\"tilewidth\":32,\"type\":\"tileset\",\"version\":1.2};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/LizardJungleLevel/jungle_tileset.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/LizardJungleLevel/lizard_jungle_planet_tilemap.json":
/*!********************************************************************************************!*\
  !*** ./dist/resources/planet_tilesets/LizardJungleLevel/lizard_jungle_planet_tilemap.json ***!
  \********************************************************************************************/
/*! exports provided: height, infinite, layers, nextlayerid, nextobjectid, orientation, renderorder, tiledversion, tileheight, tilesets, tilewidth, type, version, width, default */
/***/ (function(module) {

eval("module.exports = {\"height\":24,\"infinite\":false,\"layers\":[{\"dataheight\":24,\"id\":1,\"name\":\"Tile Layer 1\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0}],\"nextlayerid\":2,\"nextobjectid\":1,\"orientation\":\"orthogonal\",\"renderorder\":\"right-down\",\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tilesets\":[{\"firstgid\":1,\"source\":\"jungle_tileset.json\"}],\"tilewidth\":32,\"type\":\"map\",\"version\":1.2,\"width\":32};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/LizardJungleLevel/lizard_jungle_planet_tilemap.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/ice_walker_level/room_1.json":
/*!*********************************************************************!*\
  !*** ./dist/resources/planet_tilesets/ice_walker_level/room_1.json ***!
  \*********************************************************************/
/*! exports provided: height, infinite, layers, nextlayerid, nextobjectid, orientation, renderorder, tiledversion, tileheight, tilesets, tilewidth, type, version, width, default */
/***/ (function(module) {

eval("module.exports = {\"height\":18,\"infinite\":false,\"layers\":[{\"data\":[64,23,36,3,3,36,36,36,3,3,3,3,3,3,36,36,36,3,3,3,36,22,64,64,64,64,64,64,64,64,64,64,64,23,36,3,3,3,36,36,36,36,36,36,36,36,36,36,3,3,3,3,36,22,32,25,25,25,25,25,25,25,29,64,64,23,36,3,3,3,3,36,36,36,36,36,36,36,36,3,3,3,3,36,36,22,23,3,3,3,3,3,3,3,22,64,64,23,36,36,3,3,3,3,3,3,3,3,3,3,3,3,3,3,36,36,36,22,23,3,3,3,62,3,3,3,22,64,64,23,36,36,36,3,3,3,3,3,3,3,3,3,3,3,3,36,36,36,3,22,24,3,48,10,10,10,10,45,22,64,64,23,3,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,3,3,22,24,48,13,34,16,16,16,7,22,64,64,23,3,3,36,36,36,36,36,36,36,37,36,36,36,36,36,36,3,3,3,22,24,4,16,16,16,16,16,7,22,64,64,23,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,22,24,5,16,16,16,16,15,46,22,64,64,31,27,27,28,27,27,28,27,27,27,28,50,27,27,27,27,28,27,28,27,30,24,5,16,16,16,16,7,3,22,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,24,5,16,16,16,16,7,3,22,64,64,64,64,64,64,64,64,64,64,36,36,36,36,36,36,50,36,36,64,64,64,64,24,5,16,16,15,8,46,3,22,64,64,64,64,64,64,64,64,64,36,17,17,17,17,17,17,17,17,36,36,36,64,64,24,5,16,17,6,3,3,3,22,64,64,64,64,64,64,64,64,36,17,17,17,17,17,17,17,17,17,17,34,50,64,64,24,47,8,8,46,3,3,3,22,64,64,64,64,64,64,64,32,36,17,17,17,17,17,17,17,17,17,17,36,36,29,64,24,3,3,3,3,3,3,3,22,64,64,64,64,64,64,64,24,36,36,17,17,17,17,17,17,17,17,36,36,36,22,64,24,3,3,3,3,3,3,3,22,64,64,64,64,64,64,64,24,36,36,36,36,36,36,36,36,36,36,36,36,36,22,64,24,3,3,3,3,3,62,3,22,64,64,64,64,64,64,64,24,3,36,36,36,36,36,36,36,36,36,36,3,1,22,64,50,3,3,3,3,3,3,3,22,64,64,64,64,64,64,64,31,27,27,27,27,27,27,27,27,27,27,27,27,27,30,64,31,27,27,27,27,27,27,27,30,64],\"height\":18,\"id\":5,\"name\":\"Tile Layer 1\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0},{\"data\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"height\":18,\"id\":6,\"name\":\"Tile Layer 2\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0}],\"nextlayerid\":7,\"nextobjectid\":1,\"orientation\":\"orthogonal\",\"renderorder\":\"right-down\",\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tilesets\":[{\"firstgid\":1,\"source\":\"icetiles.json\"}],\"tilewidth\":32,\"type\":\"map\",\"version\":1.2,\"width\":32};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/ice_walker_level/room_1.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/ice_walker_level/room_2.json":
/*!*********************************************************************!*\
  !*** ./dist/resources/planet_tilesets/ice_walker_level/room_2.json ***!
  \*********************************************************************/
/*! exports provided: height, infinite, layers, nextlayerid, nextobjectid, orientation, renderorder, tiledversion, tileheight, tilesets, tilewidth, type, version, width, default */
/***/ (function(module) {

eval("module.exports = {\"height\":18,\"infinite\":false,\"layers\":[{\"data\":[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,36,36,36,37,36,36,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,36,36,3,3,3,3,36,36,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,36,36,36,36,36,36,61,53,53,53,53,59,36,36,36,36,36,36,64,64,64,64,64,64,64,64,64,64,64,64,36,36,36,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,36,36,36,64,64,64,64,64,64,64,64,64,36,36,52,52,52,52,52,52,52,52,52,52,1,52,52,52,52,3,52,52,52,52,36,36,64,64,64,64,64,64,64,64,36,1,52,17,17,17,52,52,17,17,17,52,52,52,16,16,52,52,52,17,17,52,1,36,64,64,64,64,64,64,64,64,36,1,52,17,17,17,52,52,17,17,17,52,52,16,16,16,52,52,17,17,17,52,1,36,64,64,64,64,64,64,64,64,36,1,52,17,17,17,52,52,52,17,17,52,52,16,16,16,52,52,17,17,17,52,1,36,64,64,64,64,64,64,64,64,36,1,52,52,52,52,52,3,52,52,52,52,52,52,52,52,52,52,52,52,52,52,1,36,64,64,64,64,64,64,64,64,36,1,1,2,2,2,2,52,52,52,52,52,52,52,52,3,3,3,3,3,3,3,1,36,64,64,64,64,64,64,64,64,36,1,2,2,2,2,3,52,16,17,17,17,17,17,52,3,52,52,52,3,3,3,1,36,64,64,64,64,64,64,64,64,36,36,1,1,3,3,3,52,52,17,17,17,17,17,52,3,52,34,52,3,1,1,36,36,64,64,64,64,64,64,64,64,64,36,36,36,1,3,3,3,52,52,52,52,52,52,52,3,52,52,52,3,36,36,36,64,64,64,64,64,64,64,64,64,64,64,64,36,36,1,1,1,1,1,1,1,1,1,1,1,1,1,1,36,36,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64],\"height\":18,\"id\":1,\"name\":\"Tile Layer 1\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0},{\"data\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"height\":18,\"id\":2,\"name\":\"Tile Layer 2\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0}],\"nextlayerid\":3,\"nextobjectid\":1,\"orientation\":\"orthogonal\",\"renderorder\":\"right-down\",\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tilesets\":[{\"firstgid\":1,\"source\":\"icetiles.json\"}],\"tilewidth\":32,\"type\":\"map\",\"version\":1.2,\"width\":32};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/ice_walker_level/room_2.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/ice_walker_level/room_3.json":
/*!*********************************************************************!*\
  !*** ./dist/resources/planet_tilesets/ice_walker_level/room_3.json ***!
  \*********************************************************************/
/*! exports provided: height, infinite, layers, nextlayerid, nextobjectid, orientation, renderorder, tiledversion, tileheight, tilesets, tilewidth, type, version, width, default */
/***/ (function(module) {

eval("module.exports = {\"height\":18,\"infinite\":false,\"layers\":[{\"dataheight\":18,\"id\":1,\"name\":\"Tile Layer 1\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0},{\"data\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"height\":18,\"id\":2,\"name\":\"Tile Layer 2\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0}],\"nextlayerid\":3,\"nextobjectid\":1,\"orientation\":\"orthogonal\",\"renderorder\":\"right-down\",\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tilesets\":[{\"firstgid\":1,\"source\":\"icetiles.json\"}],\"tilewidth\":32,\"type\":\"map\",\"version\":1.2,\"width\":32};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/ice_walker_level/room_3.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/ice_walker_level/tiles.json":
/*!********************************************************************!*\
  !*** ./dist/resources/planet_tilesets/ice_walker_level/tiles.json ***!
  \********************************************************************/
/*! exports provided: columns, image, imageheight, imagewidth, margin, name, spacing, tilecount, tiledversion, tileheight, tiles, tilewidth, type, version, default */
/***/ (function(module) {

eval("module.exports = {\"columns\":65,\"image\":\"iceworld.png\",\"imageheight\":32,\"imagewidth\":2048,\"margin\":0,\"name\":\"icetiles\",\"spacing\":0,\"tilecount\":65,\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tiles\":[{\"id\":0,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":1,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":2,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":3,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":4,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":5,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":6,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":7,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":8,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":9,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":10,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":11,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":12,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":13,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":14,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":15,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":true},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":true},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":16,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":true},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":true},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":17,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":true},{\"name\":\"ice\",\"type\":\"bool\",\"value\":true},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":18,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":true},{\"name\":\"ice\",\"type\":\"bool\",\"value\":true},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":19,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":true},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":20,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":21,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":22,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":23,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":24,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":25,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":26,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":27,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":28,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":29,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":30,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":31,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":32,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":33,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":34,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":35,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":36,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":37,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":38,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":39,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":true},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":true},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":40,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":true},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":true},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":41,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":42,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":43,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":44,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":45,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":46,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":47,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":48,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":49,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":50,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":51,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":52,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":53,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":54,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":55,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":56,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":57,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":58,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":59,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":60,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":61,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":62,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":63,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":64,\"properties\":[{\"name\":\"cracked\",\"type\":\"bool\",\"value\":false},{\"name\":\"ice\",\"type\":\"bool\",\"value\":false},{\"name\":\"lightable\",\"type\":\"bool\",\"value\":false},{\"name\":\"lighted\",\"type\":\"bool\",\"value\":false},{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]}],\"tilewidth\":32,\"type\":\"tileset\",\"version\":1.2};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/ice_walker_level/tiles.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/jungle_arena_level/jungletileset.json":
/*!******************************************************************************!*\
  !*** ./dist/resources/planet_tilesets/jungle_arena_level/jungletileset.json ***!
  \******************************************************************************/
/*! exports provided: columns, image, imageheight, imagewidth, margin, name, spacing, tilecount, tiledversion, tileheight, tiles, tilewidth, type, version, default */
/***/ (function(module) {

eval("module.exports = {\"columns\":10,\"image\":\"jungletileset.png\",\"imageheight\":320,\"imagewidth\":320,\"margin\":0,\"name\":\"jungletileset\",\"spacing\":0,\"tilecount\":28,\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tiles\":[{\"id\":0,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":1,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":2,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":3,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":4,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":5,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":6,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":7,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":8,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":9,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":10,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":11,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":12,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":13,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":14,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":15,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":16,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":17,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":18,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":19,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":20,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":21,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":22,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":23,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":24,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":25,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":26,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":27,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]}],\"tilewidth\":32,\"type\":\"tileset\",\"version\":1.2};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/jungle_arena_level/jungletileset.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/jungle_arena_level/tilemap.json":
/*!************************************************************************!*\
  !*** ./dist/resources/planet_tilesets/jungle_arena_level/tilemap.json ***!
  \************************************************************************/
/*! exports provided: height, infinite, layers, nextlayerid, nextobjectid, orientation, renderorder, tiledversion, tileheight, tilesets, tilewidth, type, version, width, default */
/***/ (function(module) {

eval("module.exports = {\"height\":24,\"infinite\":false,\"layers\":[{\"data\":[15,14,14,14,14,14,15,7,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,14,14,14,15,14,14,14,15,15,14,14,15,14,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,14,14,14,14,15,14,14,14,14,15,14,14,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,14,14,14,14,14,14,14,15,14,14,14,15,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,14,15,14,14,14,14,14,14,14,14,14,14,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,15,14,14,14,14,15,14,14,14,15,14,15,14,15,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,14,15,14,14,14,14,14,15,14,14,14,14,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,14,14,14,14,14,14,14,14,14,14,15,14,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,15,14,14,14,14,14,14,14,15,14,14,14,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,14,14,14,14,15,14,14,15,14,14,15,14,15,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,14,15,14,14,14,14,15,14,14,14,14,14,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,14,14,14,14,14,14,14,14,14,15,14,15,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,15,14,14,15,14,14,14,15,14,14,15,14,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,14,14,14,14,14,14,14,14,14,14,15,14,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,15,14,14,14,14,14,14,14,15,14,14,14,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,14,14,14,15,14,14,14,15,14,15,14,14,15,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,15,14,14,14,14,14,15,14,15,14,14,15,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,14,14,14,14,15,14,14,14,14,15,15,14,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,15,14,14,14,14,14,15,14,14,14,14,14,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,14,14,14,14,15,14,14,14,15,14,15,14,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,15,14,14,14,15,15,15,14,15,14,14,14,14,15,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,14,15,14,14,14,14,14,14,15,14,14,14,15,14,25,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,25,14,14,15,14,14,15,14,14,14,14,15,14,15,14,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,15,15,14,14,14,14,14,14,14,15,14,15,14,15,9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,14,14,14,15,14,14,15],\"height\":24,\"id\":3,\"name\":\"Tile Layer 1\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0}],\"nextlayerid\":5,\"nextobjectid\":7,\"orientation\":\"orthogonal\",\"renderorder\":\"right-down\",\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tilesets\":[{\"firstgid\":1,\"source\":\"jungletileset.json\"}],\"tilewidth\":32,\"type\":\"map\",\"version\":1.2,\"width\":32};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/jungle_arena_level/tilemap.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Altar.js":
/*!***********************************************************************************!*\
  !*** ./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Altar.js ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Altar; });\nclass Altar {\n  constructor(x, y,tileset) {\n    this.x = x;\n    this.y = y;\n    this.tileset = tileset;\n\tthis.health = 5;\n  }\n  render(context) {\n\t  this.tileset.drawTile(this.x,this.y,23,context);\n  }\n}\n\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Altar.js?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Bullets.js":
/*!*************************************************************************************!*\
  !*** ./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Bullets.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Bullet; });\n//import PlanetTileset from \"../PlanetTileset\";\n/**\n *Bullet for Lava Stage Enemeis\n *Imported by the Lava stage \n */\nclass Bullet{\n/** @method\n   * create an new enemy\n   * @param {x} x position of the bullet.\n   * @param {y} y position of the bullet.\n   * @param {bulletSpeed} speed of the bullet\n   * @param {direction} the direction  the bullet  travel at.\n   */\n  constructor(x,y,direction,speed,color,owner) {\n    this.x= x;\n\tthis.y=y;\n\tthis.direction = direction;\n\tthis.speed = speed;\n\tthis.color=color;\n\tthis.owner = owner;\n\tthis.travelDistance = 0 ;\n  }\n\n \n\n update (deltaT){\n\t  this.directionToMove (this.x,this.y,this.direction,deltaT);\n      \n }\n \n //function to choose bullet direction when creating a new bullet\n directionToMove (x,y,dir,deltaT) {\n\t if (dir === \"east\"){ \n\t     this.x += deltaT* this.speed;\n\t\t this.travelDistance += deltaT*this.speed;\n\t\t }\n\t else if (dir === \"west\"){ \n\t this.x -= deltaT* this.speed;\n\t this.travelDistance += deltaT*this.speed;\n\t }\n     else if (dir === \"north\"){ \n\t this.y -= deltaT* this.speed;\n\t this.travelDistance += deltaT*this.speed;\n\t }\n     else if (dir === \"south\"){ \n\t this.y += deltaT* this.speed;\n\t this.travelDistance += deltaT*this.speed;\n\t }\n }\n \n \n\n\t\n\t\n //context to draw\n render (context) {\t\t\n \n   context.fillStyle = this.color;\n   context.beginPath();\n   if (this.owner == \"player\"){\n   context.fillRect(this.x,this.y,10,10);\n   context.fill();\n  }\n   if ( this.owner == \"enemy\" ) {\n\t   context.fillRect(this.x,this.y,7,7);\n       context.fill();\n   }\n  if ( this.owner == \"volcano\" ) {\n   //ctx.beginPath();\n  //ctx.fillStyle = 'magenta';\n  //context.arc(this.x , this.y , 10, 10,0, 2 * Math.pi);\n  //context.fill();\n   context.fillRect(this.x,this.y,18,18);\n   context.fill();\n  }  \n }\n\n}\n\n\n\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Bullets.js?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Entity.js":
/*!************************************************************************************!*\
  !*** ./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Entity.js ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Entity; });\n/* harmony import */ var _src_PlanetTileset__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../src/PlanetTileset */ \"./src/PlanetTileset.js\");\n//Located in src folder \r\n\r\n\r\n//Global constant for reading in Directions for frames\r\nconst DIRECTIONS = [\"Left\", \"Right\", \"Forward\", \"Backward\"];\r\n\r\nclass Entity {\r\n\t\r\n /** Constructor to Entity\r\n   * Creates a Entity\r\n   * @param x_pos - x position of Entity (tile number, not pixel number)\r\n   * @param y_pos - y position of Entity (tile number, not pixel number)\r\n   * @param tileset - loaded tileset (defines each tile type), used to move on tiles\r\n   */\r\n\tconstructor(x_pos, y_pos, tileset){\r\n\t\t//coordinates\r\n\t\tthis.x = x_pos;\r\n\t\tthis.y = y_pos;\t\r\n\t\t//tileset for map\t\t\r\n\t\tthis.tileset = tileset;\t\r\n\t\t//loads and stores frames for animation\r\n\t\tthis.images = {};\r\n\t\tthis.loadImages();\t\r\n\t\t//Information about currrent frame of Entity\r\n\t\tthis.state = \"Forward\";\r\n\t\tthis.frame = 0;\r\n\t\tthis.cycleCount = 0;\t\r\n\t\tthis.time = 0;\r\n\t\r\n\t}\r\n\t\r\n /** @method\r\n   * Update an entities within this planet level, including the player.\r\n   * @param {DOMHighResTimeStamp} deltaT - the amount of time elapsed between last call\r\n   * @param {int} player_x - player's x position on map\r\n   * @param {int} player_y - player's y position on map\r\n   */\r\n\tupdate(deltaT, player_x, player_y){\t\t\r\n\t\t//NEED TO FIX, NOT READY\r\n\t\t\r\n\t\t\r\n\t\tthis.time += deltaT;\t\t\r\n\t\tif(this.time >= 750){\t\r\n\t\t\tvar entityMoved = false;\r\n\t\t\tvar passableForward = this.tileset.getTile(this.x, this.y+1)[\"passable\"]; \r\n\t\t\tvar passableBackward = this.tileset.getTile(this.x, this.y-1)[\"passable\"];\r\n\t\t\tvar passableLeft = this.tileset.getTile(this.x-1, this.y)[\"passable\"];\r\n\t\t\tvar passableRight = this.tileset.getTile(this.x+1, this.y)[\"passable\"];\r\n\t\t\t\t\t\r\n\t\t\tif( player_x == this.x){\t\t\t// same x \t\t\t\t\t\t\t\t\r\n\t\t\t\tif ((player_y - this.y) > 0 && passableForward) {\r\n\t\t\t\t\tthis.y += 1;\r\n\t\t\t\t\tthis.state = \"Forward\";\r\n\t\t\t\t\tentityMoved = true;\r\n\t\t\t\t} else if ((player_y - this.y) < 0 && passableBackward){\r\n\t\t\t\t\tthis.y -= 1;\r\n\t\t\t\t\tthis.state = \"Backward\";\r\n\t\t\t\t\tentityMoved = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (passableRight) {\r\n\t\t\t\t\t\tthis.x += 1;\r\n\t\t\t\t\t\tthis.state = \"Right\";\r\n\t\t\t\t\t\tentityMoved = true;\r\n\t\t\t\t\t} else if (passableLeft){\r\n\t\t\t\t\t\tthis.x -= 1;\r\n\t\t\t\t\t\tthis.state = \"Left\";\r\n\t\t\t\t\t\tentityMoved = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else if (player_y == this.y) {\t// same y\t\t\r\n\t\t\t\t\r\n\t\t\t\tif ((player_x - this.x) > 0 && passableRight) {\r\n\t\t\t\t\tthis.x += 1;\r\n\t\t\t\t\tthis.state = \"Right\";\r\n\t\t\t\t\tentityMoved = true;\r\n\t\t\t\t} else if ((player_x - this.x) < 0 && passableLeft){\r\n\t\t\t\t\tthis.x -= 1;\r\n\t\t\t\t\tthis.state = \"Left\";\r\n\t\t\t\t\tentityMoved = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (passableForward) {\r\n\t\t\t\t\t\tthis.y += 1;\r\n\t\t\t\t\t\tthis.state = \"Forward\";\r\n\t\t\t\t\t\tentityMoved = true;\r\n\t\t\t\t\t} else if (passableBackward){\r\n\t\t\t\t\t\tthis.y -= 1;\r\n\t\t\t\t\t\tthis.state = \"Backward\";\r\n\t\t\t\t\t\tentityMoved = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\t\t\t\t\t\t\t// neither\r\n\t\t\t\t\r\n\t\t\t\tvar diffX = Math.abs(player_x - this.x);\r\n\t\t\t\tvar diffY = Math.abs(player_y - this.y);\r\n\t\t\t\t\r\n\t\t\t\tif (diffX < diffY){\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ((player_x - this.x) > 0 && passableRight) {\r\n\t\t\t\t\t\tthis.x += 1;\r\n\t\t\t\t\t\tthis.state = \"Right\";\r\n\t\t\t\t\t\tentityMoved = true;\r\n\t\t\t\t\t} else if ((player_x - this.x) < 0 && passableLeft){\r\n\t\t\t\t\t\tthis.x -= 1;\r\n\t\t\t\t\t\tthis.state = \"Left\";\r\n\t\t\t\t\t\tentityMoved = true;\r\n\t\t\t\t\t} \r\n\t\t\t\t\t/*\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif ((player_y - this.y) > 0 && passableForward) {\r\n\t\t\t\t\t\t\tthis.y += 1;\r\n\t\t\t\t\t\t} else if ((player_y - this.y) < 0 && passableBackward){\r\n\t\t\t\t\t\t\tthis.y -= 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (((player_y - this.y) > 0 && passableForward) || this.stuck) {\r\n\t\t\t\t\t\tthis.y += 1;\r\n\t\t\t\t\t\tthis.state = \"Forward\";\r\n\t\t\t\t\t\tentityMoved = true;\r\n\t\t\t\t\t} else if ((player_y - this.y) < 0 && passableBackward){\r\n\t\t\t\t\t\tthis.y -= 1;\r\n\t\t\t\t\t\tthis.state = \"Backward\";\r\n\t\t\t\t\t\tentityMoved = true;\r\n\t\t\t\t\t} \r\n\t\t\t\t\t/*\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif ((player_x - this.x) > 0 && passableRight){\r\n\t\t\t\t\t\t\tthis.x -= 1;\r\n\t\t\t\t\t\t} else if ((player_x - this.x) < 0 && passableLeft){\r\n\t\t\t\t\t\t\tthis.x += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\t\r\n\t\t\tif( entityMoved && this.cycleCount >= 4 && ( this.frame != 0 || this.frame != 2 ) ) {\r\n\t\t\t\tthis.frame += 1;\r\n\t\t\t\tthis.frame = this.frame % 4;\r\n\t\t\t\tthis.cycleCount = 0;\r\n\t\t\t}\r\n\t\t\tthis.cycleCount++;\r\n\t\t\tthis.time = 0;\t\t\t\t\t\t\r\n\t\t}\t\r\n\t\t\r\n\t}\r\n\t\r\n /** @method render\r\n   * Renders the Entity.\r\n   * Draw here as if your visible grid is infinite, scrolling within a viewport is done by the PlanetLevelManager.\r\n   * @param {DOMHighResTimeStamp} deltaT - the amount of time elapsed this frame\r\n   * @param {CanvasRenderingContext2D} context - the rendering context\r\n   */\r\n\trender(deltaT, context){\r\n\t\tvar image = this.images[this.state][this.frame];\r\n        context.drawImage(image, this.x*32, this.y*32);\r\n\t}\t\t\r\n\t\r\n  /** @method loadImages\r\n\t* Loads the animation frames for Entity an stores them in an Array of Images\r\n\t*/\r\n\tloadImages(){\r\n        DIRECTIONS.forEach( direction => {this.images[direction] = []});\r\n        for( var i = 0; i < 4; i++ ) {\r\n            DIRECTIONS.forEach( direction => {this.images[direction].push( this.getFrame( direction, i))});\r\n        }\r\n    }\r\n\t\r\n\t/** @method getFrame\r\n     * Retrieves frame of entity animation\r\n     * @param {string} direction - direction of animation\r\n     * @param {int} number - number of frame within the animation\r\n     */\r\n    getFrame(direction, number){\r\n        var frame = new Image(32, 32);\r\n\t\t//\"resources/planet_tilesets/lava_planet_level/tiles.png\"\t\r\n        frame.src = \"./resources/planet_tilesets/LavaPlanetLevel/lavaGolemAnimation/lavaGolem-\" + direction + \"-\" + number +\".png\"; //change this path to location of animation folder for entity\r\n        return frame;\r\n    }\r\n\t\r\n}\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Entity.js?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/tilemap.json":
/*!***************************************************************************************!*\
  !*** ./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/tilemap.json ***!
  \***************************************************************************************/
/*! exports provided: height, infinite, layers, nextlayerid, nextobjectid, orientation, renderorder, tiledversion, tileheight, tilesets, tilewidth, type, version, width, default */
/***/ (function(module) {

eval("module.exports = {\"height\":32,\"infinite\":false,\"layers\":[{\"data\":[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,21,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,4,4,2,4,4,4,4,4,22,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,9,4,4,10,18,16,16,16,18,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,16,3,2,2,5,17,17,17,16,16,16,16,16,16,16,16,16,16,16,16,17,16,16,16,16,16,16,16,16,16,16,16,17,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,18,17,16,16,16,16,16,16,16,16,17,17,17,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,16,16,16,16,16,16,16,16,16,7,8,17,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,3,5,17,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,9,10,17,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,3,2,2,2,2,2,18,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,6,6,6,2,2,2,2,2,2,2,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,3,2,2,2,2,2,2,2,2,2,2,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,3,16,2,2,2,2,2,2,2,2,2,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,3,2,2,2,2,2,2,2,2,2,18,18,16,16,16,16,16,16,16,16,16,17,17,17,16,16,16,16,16,16,16,16,9,4,4,4,2,2,2,5,9,4,16,16,16,16,16,16,16,16,16,16,16,17,18,17,16,16,16,16,16,16,16,16,16,16,16,16,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,16,16,16,16,16,16,16,16,16,16,16,16,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,17,17,18,16,16,16,16,16,16,16,16,16,16,3,2,2,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,18,18,18,16,16,16,16,16,16,16,16,16,16,3,2,2,5,17,16,16,16,16,16,16,16,16,16,16,16,16,16,19,19,19,19,16,16,16,16,16,16,16,16,16,17,3,2,2,5,17,17,16,16,16,16,16,16,16,16,16,16,16,16,2,6,6,2,16,16,16,16,16,16,16,16,17,17,3,2,2,20,6,6,6,6,6,6,6,6,6,6,6,6,6,6,2,2,2,2,6,6,6,6,6,6,6,6,6,6,19,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],\"height\":32,\"id\":1,\"name\":\"Ground\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0},{\"data\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,48,49,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,25,0,0,0,0,0,0,59,0,0,0,44,44,44,44,44,43,0,0,0,0,0,0,0,0,0,0,0,0,44,44,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,34,27,30,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,44,44,43,0,0,25,25,35,0,0,37,32,25,28,0,0,0,0,0,0,0,37,0,0,37,44,44,0,0,0,0,0,0,0,31,0,0,26,0,35,0,0,37,0,0,0,0,0,37,0,0,0,0,37,0,0,37,0,0,0,0,0,0,0,0,0,31,0,0,26,0,35,0,42,25,0,0,0,0,0,37,0,0,0,0,37,0,0,37,0,0,0,0,0,0,0,0,0,31,0,0,26,0,35,0,35,0,0,0,0,0,0,37,0,0,0,0,38,0,0,37,0,0,0,0,0,0,0,0,0,31,0,0,0,0,35,0,35,0,0,0,0,0,0,37,0,0,44,44,0,0,0,37,0,0,0,0,0,0,0,0,0,31,26,0,0,0,35,0,38,44,44,44,44,35,0,37,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,35,0,37,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,35,0,0,0,0,0,44,44,44,0,0,44,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,46,0,0,0,0,0,0,31,0,0,36,29,0,0,0,0,0,0,0,0,36,44,0,45,46,0,0,0,0,0,47,48,49,50,0,0,0,0,0,31,0,0,36,29,0,0,0,0,0,0,0,0,36,0,47,48,49,50,0,0,0,0,51,52,53,54,0,0,0,0,0,31,0,0,36,29,0,34,44,44,44,43,0,0,36,0,51,52,53,54,0,0,0,0,55,56,57,58,0,0,0,0,0,31,0,0,36,29,0,37,0,0,0,37,0,0,0,0,55,56,57,58,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,36,29,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,44,44,44,29,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,42,44,44,44,0,0,0,0,32,25,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,28,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,37,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,44,43,0,0,0,0,0,25,0,0,35,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,41,0,35,0,31,0,0,0,0,0,25,0,0,35,0,0,37,0,0,0,0,0,0,0,45,46,0,0,0,0,0,33,0,0,0,0,31,0,0,0,0,0,25,0,0,35,0,0,37,0,0,0,0,0,0,47,48,49,50,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,25,25,25,35,0,0,37,0,0,0,0,0,0,51,52,53,54,0,0,0,0,33,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,0,0,0,0,0,55,56,57,58,0,0,0,0,32,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"height\":32,\"id\":2,\"name\":\"Terrain\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0},{\"data\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"height\":32,\"id\":3,\"name\":\"Entities\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0}],\"nextlayerid\":4,\"nextobjectid\":1,\"orientation\":\"orthogonal\",\"renderorder\":\"right-down\",\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tilesets\":[{\"firstgid\":1,\"source\":\"tileset.json\"}],\"tilewidth\":32,\"type\":\"map\",\"version\":1.2,\"width\":32};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/tilemap.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/tileset.json":
/*!***************************************************************************************!*\
  !*** ./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/tileset.json ***!
  \***************************************************************************************/
/*! exports provided: columns, image, imageheight, imagewidth, margin, name, spacing, tilecount, tiledversion, tileheight, tiles, tilewidth, type, version, default */
/***/ (function(module) {

eval("module.exports = {\"columns\":62,\"image\":\"tiles.png\",\"imageheight\":32,\"imagewidth\":1984,\"margin\":0,\"name\":\"tiles\",\"spacing\":0,\"tilecount\":62,\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tiles\":[{\"id\":0,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":1,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":2,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":3,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":4,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":5,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":6,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":7,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":8,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":9,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":10,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":11,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":12,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":13,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":14,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":15,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":16,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":17,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":18,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":19,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":20,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":21,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":22,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":23,\"properties\":[{\"name\":\"Altar\",\"type\":\"bool\",\"value\":true},{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":24,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":25,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":26,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":27,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":28,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":29,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":30,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":31,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":32,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":33,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":34,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":35,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":36,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":37,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":38,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":39,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":40,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":41,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":42,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":43,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":44,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":45,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":46,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":47,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":48,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":49,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":50,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":51,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":52,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":53,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":54,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":55,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":56,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":57,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false}]},{\"id\":58,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"animation\":[{\"duration\":210,\"tileid\":16},{\"duration\":210,\"tileid\":17}],\"id\":59,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]},{\"id\":60,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true}]}],\"tilewidth\":32,\"type\":\"tileset\",\"version\":1.2};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/tileset.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/sample_planet_level/tilemap.json":
/*!*************************************************************************!*\
  !*** ./dist/resources/planet_tilesets/sample_planet_level/tilemap.json ***!
  \*************************************************************************/
/*! exports provided: height, infinite, layers, nextlayerid, nextobjectid, orientation, renderorder, tiledversion, tileheight, tilesets, tilewidth, type, version, width, default */
/***/ (function(module) {

eval("module.exports = {\"height\":24,\"infinite\":false,\"layers\":[{\"data\":[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,6,6,6,6,6,6,6,2,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6,6,2,2,6,6,6,6,6,6,5,5,5,5,5,6,2,2,2,2,2,2,2,2,2,3,3,3,3,3,2,2,2,2,2,2,2,2,2,6,6,6,6,5,5,5,6,6,2,2,3,3,3,3,3,3,3,3,1,1,3,3,3,3,3,3,3,4,2,2,2,2,2,6,6,5,5,5,6,6,2,2,3,3,3,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,6,6,5,5,6,6,2,2,3,3,1,4,4,1,1,3,3,2,2,2,2,2,2,2,3,3,3,1,1,3,2,2,6,6,5,5,6,2,2,2,3,1,1,4,4,3,3,3,2,2,6,6,6,6,6,2,2,3,1,4,1,1,3,2,2,6,5,5,6,2,2,2,3,1,1,3,3,2,2,2,2,6,6,6,6,6,6,6,2,3,1,1,1,1,3,2,2,6,5,5,6,2,2,2,3,4,1,3,3,2,2,6,6,6,6,2,2,2,6,6,6,2,3,1,1,1,3,2,2,6,5,5,6,6,2,2,3,3,3,2,2,2,6,6,6,6,2,2,3,2,2,2,2,2,3,1,4,4,3,2,2,6,5,5,6,6,2,2,2,2,2,2,6,6,6,6,6,6,2,3,3,3,3,2,2,3,3,1,4,4,3,3,2,6,5,5,5,6,2,2,2,2,2,2,6,6,6,6,6,2,2,3,3,1,3,3,3,3,1,1,1,1,3,2,2,6,5,5,5,6,6,2,2,4,2,2,2,6,6,6,6,2,3,3,3,4,4,1,1,1,1,1,3,3,3,2,2,6,5,5,6,6,6,2,2,2,2,2,2,6,6,6,6,2,2,3,3,4,4,1,1,1,1,3,3,3,2,2,6,6,5,5,6,6,6,6,2,2,2,2,6,6,6,6,6,2,2,3,3,1,3,3,3,3,3,3,3,2,2,6,6,6,5,5,5,5,5,6,6,2,2,6,6,6,5,6,6,6,2,2,3,3,3,2,2,2,2,2,2,2,6,6,6,5,5,5,5,5,5,6,6,6,6,6,5,5,5,5,6,6,6,2,2,2,2,2,2,2,2,2,6,6,6,6,5,5,5,5,5,5,5,5,5,5,6,6,5,5,5,5,6,6,6,6,6,2,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],\"height\":24,\"id\":1,\"name\":\"Tile Layer 1\",\"opacity\":1,\"type\":\"tilelayer\",\"visible\":true,\"width\":32,\"x\":0,\"y\":0}],\"nextlayerid\":2,\"nextobjectid\":1,\"orientation\":\"orthogonal\",\"renderorder\":\"right-down\",\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tilesets\":[{\"firstgid\":1,\"source\":\"tileset.tsx\"}],\"tilewidth\":32,\"type\":\"map\",\"version\":1.2,\"width\":32};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/sample_planet_level/tilemap.json?");

/***/ }),

/***/ "./dist/resources/planet_tilesets/sample_planet_level/tileset.json":
/*!*************************************************************************!*\
  !*** ./dist/resources/planet_tilesets/sample_planet_level/tileset.json ***!
  \*************************************************************************/
/*! exports provided: columns, image, imageheight, imagewidth, margin, name, spacing, tilecount, tiledversion, tileheight, tiles, tilewidth, type, version, default */
/***/ (function(module) {

eval("module.exports = {\"columns\":4,\"image\":\"tiles.png\",\"imageheight\":128,\"imagewidth\":128,\"margin\":0,\"name\":\"tileset\",\"spacing\":0,\"tilecount\":16,\"tiledversion\":\"1.2.0\",\"tileheight\":32,\"tiles\":[{\"id\":0,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":1,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":2,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":3,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":4,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":5,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":true},{\"name\":\"water\",\"type\":\"bool\",\"value\":true}]},{\"id\":6,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":7,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":8,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":9,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":10,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":11,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":12,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":13,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":14,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]},{\"id\":15,\"properties\":[{\"name\":\"passable\",\"type\":\"bool\",\"value\":false},{\"name\":\"water\",\"type\":\"bool\",\"value\":false}]}],\"tilewidth\":32,\"type\":\"tileset\",\"version\":1.2};\n\n//# sourceURL=webpack:///./dist/resources/planet_tilesets/sample_planet_level/tileset.json?");

/***/ }),

/***/ "./node_modules/css-loader/index.js!./src/index.css":
/*!*************************************************!*\
  !*** ./node_modules/css-loader!./src/index.css ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"body, canvas {\\n  padding: 0;\\n  margin: 0;\\n  border: 0;\\n}\\n\", \"\"]);\n\n// exports\n\n\n//# sourceURL=webpack:///./src/index.css?./node_modules/css-loader");

/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n//# sourceURL=webpack:///./node_modules/css-loader/lib/css-base.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (false) {}\n\n\treturn __webpack_require__.nc;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./src/Overworld.js":
/*!**************************!*\
  !*** ./src/Overworld.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Overworld; });\n/* harmony import */ var _TempMenu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TempMenu */ \"./src/TempMenu.js\");\n/* harmony import */ var _Zoom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Zoom */ \"./src/Zoom.js\");\n/* harmony import */ var _menus_PlanetLevelManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./menus/PlanetLevelManager */ \"./src/menus/PlanetLevelManager.js\");\n/* harmony import */ var _planet_levels_SamplePlanetLevel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./planet_levels/SamplePlanetLevel */ \"./src/planet_levels/SamplePlanetLevel.js\");\n/* harmony import */ var _planet_levels_DesertMazeLevel_mazedesert__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./planet_levels/DesertMazeLevel/mazedesert */ \"./src/planet_levels/DesertMazeLevel/mazedesert.js\");\n/* harmony import */ var _planet_levels_DesertShackLevel_BrandonShaverPlanetLevel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./planet_levels/DesertShackLevel/BrandonShaverPlanetLevel */ \"./src/planet_levels/DesertShackLevel/BrandonShaverPlanetLevel.js\");\n/* harmony import */ var _planet_levels_LavaPlanetLevel_LavaPlanetLevel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./planet_levels/LavaPlanetLevel/LavaPlanetLevel */ \"./src/planet_levels/LavaPlanetLevel/LavaPlanetLevel.js\");\n/* harmony import */ var _planet_levels_LizardJungleLevel_LizardJungleLevel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./planet_levels/LizardJungleLevel/LizardJungleLevel */ \"./src/planet_levels/LizardJungleLevel/LizardJungleLevel.js\");\n/* harmony import */ var _planet_levels_JungleArenaLevel_JungleArenaLevel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./planet_levels/JungleArenaLevel/JungleArenaLevel */ \"./src/planet_levels/JungleArenaLevel/JungleArenaLevel.js\");\n/* harmony import */ var _planet_levels_IceWireLevel_IceWires__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./planet_levels/IceWireLevel/IceWires */ \"./src/planet_levels/IceWireLevel/IceWires.js\");\n/* harmony import */ var _planet_levels_IceWalkerLevel_IceWalkerLevel__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./planet_levels/IceWalkerLevel/IceWalkerLevel */ \"./src/planet_levels/IceWalkerLevel/IceWalkerLevel.js\");\n/* harmony import */ var _planet_levels_IceRockLevel_IceRockLevel__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./planet_levels/IceRockLevel/IceRockLevel */ \"./src/planet_levels/IceRockLevel/IceRockLevel.js\");\n\n\n\n\n// This one does not work currently. Keep both import and push commented.\n// import DesertCastleMap from \"../planet_levels/DesertCastleLevel/DesertCastleMap\";\n\n\n\n\n\n// This one is throwing some warnings, but it does still work.\n\n\n\n\nclass Overworld {\n\tconstructor(game)\n\t{\n\t\tthis.map = {\n\t\t\terena: {\n\t\t\t\tname: \"Erena\",\n\t\t\t\tdescription: \"Erena's desolate surface is almost completely covered   in sand. The planet's devasting climate and frequent   high winds gave scientists the impression that Erena   was uninhabitable, but there may be more to Erena than meets the eye...\",\n\t\t\t\tx: 0, y: 0,\n\t\t\t\toptions: [\"Castle\", \"Maze\", \"Shack\",\"Exit\"],\n\t\t\t\tcolor: \"#c2b280\"\n\t\t\t},\n\t\t\tclareo: {\n\t\t\t\tname: \"Clareo IV\",\n\t\t\t\tdescription: \"Clareo IV is a luscious forested planet with livable    weather conditions for the human species. Despite the  accommodating climate, there are foreseen diplomatic   problems with Clareo's natives and additional challenges adapting to the planet's flora and fauna.\",\n\t\t\t\tx: 300, y: 45,\n\t\t\t\toptions: [\"Jungle\", \"Lizard\", \"Exit\"],\n\t\t\t\tcolor: \"#228b22\"\n\t\t\t},\n\t\t\tzuberon: {\n\t\t\t\tname: \"Zuberon\",\n\t\t\t\tdescription: \"Zuberon is completely encased in ice. Its freezing temperatures frequently fall bellow -30°F. Little is known  about Zuberon's previous inhabitants, the Satchuan,    except that their impact on the planet indicates       obvious signs of intelligence.\",\n\t\t\t\tx: -100, y: 180,\n\t\t\t\toptions: [\"Rock\", \"Walker\", \"Wire\", \"Exit\"],\n\t\t\t\tcolor: \"#add8e6\"\n\t\t\t},\n\t\t\tthermos: {\n\t\t\t\tname: \"Thermos\",\n\t\t\t\tdescription: \"Thermos is a treacherous planet, comprised of unrelenting molten lava and razor-sharp obsidian rocks. Oh yea,  and the hoard of blood-lusting creatures that roam     the surface looking for the next source of food to     satisfy their hellish appetites.\",\n\t\t\t\tx: -500, y: -200,\n\t\t\t\toptions: [\"Lava\", \"Exit\"],\n\t\t\t\tcolor: \"#cf1020\"\n\t\t\t}\n\t\t};\n\n\t\tthis.ShipSprites = new Image;\n\t\tthis.ShipSprites.src = 'resources/overworld_assets/img/Overworld_Ship_Sprites.png';\n\t\tthis.BackgroundSprites = new Image;\n\t\tthis.BackgroundSprites.src = 'resources/overworld_assets/img/Overworld_Background_Sprites.png';\n\t\tthis.BackgroundAnimationRow = 0;\n\t\tthis.BackgroundAnimationTimer = 0;\n\t\tthis.planetSprites = new Image;\n\t\tthis.planetSprites.src = \"resources/overworld_assets/img/colored_planets.png\";\n\n\t\tthis.map.erena.right = this.map.clareo;\n\t\tthis.map.clareo.left = this.map.erena;\n\t\tthis.map.erena.down = this.map.zuberon;\n\t\tthis.map.zuberon.up = this.map.erena;\n\t\tthis.map.erena.left = this.map.thermos;\n\t\tthis.map.thermos.right = this.map.erena;\n\n\t\tthis.currentNode = this.map.erena;\n\t\tthis.nextNode = this.currentNode;\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.time = 0;\n\t\tthis.state = \"stop\";\n\t\tthis.game = game;\n\n\t\tthis.starList = []\n\t\tfor (var i = 0; i < 50; i++) {\n\t\t\tvar star = {\n\t\t\t  x: Math.floor(Math.random() * game.WIDTH),\n\t\t\t  y: Math.floor(Math.random() * game.HEIGHT),\n\t\t\t  vx: Math.floor(Math.random() * 5)\n\t\t\t};\n\t\t\tthis.starList.push(star);\n\t\t  }\n\n\t\t  this.game.pushGameState(new _menus_PlanetLevelManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"](new _planet_levels_SamplePlanetLevel__WEBPACK_IMPORTED_MODULE_3__[\"default\"](),this.callback2));\n\t}\n\n\n\n\tlerp(a,min,max)\n\t{\n\t\tif(a<0) return min;\n\t\tif(a>1) return max;\n\t\treturn (1-a)*min+a*max;\n\t}\n\n\tupdate(elapsedTime, input, game) {\n\t\tif(this.state==\"stop\")\n\t\t{\n\n\t\t\t// TODO: Load inital game state object\n\t\t\tif(input.keyPressed('ArrowUp')&&this.currentNode.up) {\n\t\t\t\tthis.state = \"move\";\n\t\t\t\tthis.nextNode = this.currentNode.up;\n\t\t\t} else if(input.keyPressed('ArrowLeft')&&this.currentNode.left) {\n\t\t\t\tthis.state = \"move\";\n\t\t\t\tthis.nextNode = this.currentNode.left;\n\t\t\t} else if(input.keyPressed('ArrowDown')&&this.currentNode.down) {\n\t\t\t\tthis.state = \"move\";\n\t\t\t\tthis.nextNode = this.currentNode.down;\n\t\t\t} else if(input.keyPressed('ArrowRight')&&this.currentNode.right) {\n\t\t\t\tthis.state = \"move\";\n\t\t\t\tthis.nextNode = this.currentNode.right;\n\t\t\t}\n\t\t} else if(this.state==\"move\")\n\t\t{\n\t\t\tif(this.time<.5)\n\t\t\t{\n\t\t\t\tthis.flag = false;\n\t\t\t} else if(!this.flag){\n\t\t\t\tthis.flag = true;\n\t\t\t\t//do encounter\n\t\t\t\tif(Math.random()>.5)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"Encounter\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.time += elapsedTime/1000;\n\t\t\tthis.x = this.lerp(this.time,this.currentNode.x,this.nextNode.x);\n\t\t\tthis.y = this.lerp(this.time,this.currentNode.y,this.nextNode.y);\n\t\t\tif(this.x==this.nextNode.x&&this.y==this.nextNode.y)\n\t\t\t{\n\t\t\t\tthis.state = \"stop\";\n\t\t\t\tthis.time = 0;\n\t\t\t\tthis.currentNode = this.nextNode;\n\t\t\t\tgame.pushGameState(new _Zoom__WEBPACK_IMPORTED_MODULE_1__[\"default\"](game.WIDTH/2, game.HEIGHT/2,this.callback,game, this.currentNode.color, this.currentNode.name));\n\t\t\t}\n\t\t}\n\t}\n\n\tcallback(string)\n\t{\n\t\tif(string!=\"Exit\")\n\t\t{\n\t\t\tvar state = null;\n\t\t\t//if(string==\"Sample\")\n\t\t\t//state = new SamplePlanetLevel();\n\t\t\t//\"Castle\", \"Maze\", \"Shack\"\n\t\t\t//jungle Lizard\n\t\t\t//Rock\", \"Walker\", \"Wire\n\n\t\t\tif (string === \"Castle\") state = new _planet_levels_DesertMazeLevel_mazedesert__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\n\t\t\telse if (string === \"Maze\") state = new _planet_levels_DesertMazeLevel_mazedesert__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\n\t\t\telse if (string === \"Shack\") state = new _planet_levels_DesertShackLevel_BrandonShaverPlanetLevel__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n\n\t\t\telse if (string === \"Jungle\") state = new _planet_levels_JungleArenaLevel_JungleArenaLevel__WEBPACK_IMPORTED_MODULE_8__[\"default\"]();\n\t\t\telse if (string === \"Lizard\") state = new _planet_levels_LizardJungleLevel_LizardJungleLevel__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\n\n\t\t\telse if (string === \"Rock\") state = new _planet_levels_IceRockLevel_IceRockLevel__WEBPACK_IMPORTED_MODULE_11__[\"default\"]();\n\t\t\telse if (string === \"Walker\") state = new _planet_levels_IceWalkerLevel_IceWalkerLevel__WEBPACK_IMPORTED_MODULE_10__[\"default\"]();\n\t\t\telse if (string === \"Wire\") state = new _planet_levels_IceWireLevel_IceWires__WEBPACK_IMPORTED_MODULE_9__[\"default\"]();\n\n\t\t\telse if (string === \"Lava\") state = new _planet_levels_LavaPlanetLevel_LavaPlanetLevel__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\n\n\t\t\tif(state!=null) this.game.pushGameState(new _menus_PlanetLevelManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"](state),this.caller.callback2);\n\t\t}\n\t}\n\n\tcallback2(success)\n\t{\n\t}\n\n\tdrawNode(context,x,y)\n\t{\n\t\tcontext.beginPath();\n\t\tcontext.fillStyle = \"orange\";\n\t\tcontext.arc(x,y,20,0,2*Math.PI);\n\t\tcontext.fill();\n\t\tcontext.beginPath();\n\t\tcontext.fillStyle = \"yellow\";\n\t\tcontext.arc(x,y,18,0,2*Math.PI);\n\t\tcontext.fill();\n\t}\n\n\tnineSlice(x, y, name, color, txt, ctx){\n\t\tvar textContent = txt;\n\t\tvar textX = x;\n\t\tvar textY = y;\n\t\tvar charArr = Array.from(textContent); //string converted to char arr\n\t\tvar arrLength = charArr.length; //length of char arr\n\t\tvar maxLineLength = 55; //max amount of characters on one line\n\t\tvar planetName = name //string\n\t\tvar planetColor = color; //hex string\n\t\tvar lineSpace = 14; //buffer space between lines\n\t\tvar fontSize = 14; //size of text\n\t\tvar planetNameLength = 35; //length of space that the planet name and buffer space takes up\n\t\tvar borderBuffer = 10; //space between text and border\n\t\tvar borderDimension = 3; //width, or length, of border around text\n\n\t\tvar newCharArr = [];\n\t\tvar lengthCounter = 0; //counts vertical length of text\n\n\t\tctx.font = fontSize + \"px Times New Roman\";//font of the Planet Name\n\t\tctx.fillStyle = planetColor; //color of the planet\n\t\tctx.fillText(planetName, textX, textY-6);//writing the Planet Name on screen\n\n\t\t/**\n\t\tSince fillText does not have multiline functionality, this for loop allows for that\n\t\tfauxI takes the iterator and looks for when i is at the desired max length.\n\t\tIt then draws the text that has been iterated through on screen and clears the array\n\t\tand then moves onto the next line by increasing the lengthCounter\n\t\t**/\n\t\tfor(var i = 0; i < arrLength; i++){\n\t\t\tvar fauxI = i % maxLineLength;\n\t\t\tif(fauxI === 0 && charArr[i] === \" \"){\n\t\t\t\tnewCharArr[fauxI] = \"\";\n\t\t\t}\n\t\t\telse if(fauxI % (maxLineLength-1) === 0 && fauxI !== 0){\n\t\t\t\tif(charArr[i+1] !== \" \" && charArr[i] !== \".\"){\n\t\t\t\t\tnewCharArr[fauxI+1] = \"-\"\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tnewCharArr[fauxI+1] = \"\";\n\t\t\t\t}\n\t\t\t\tnewCharArr[fauxI] = charArr[i];\n\t\t\t\tlengthCounter += lineSpace;\n\t\t\t\tctx.font = fontSize-2 + \"px Arial\";\n\t\t\t\tctx.fillText(newCharArr.join(\"\"), textX, textY+lengthCounter);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnewCharArr[fauxI] = charArr[i];\n\t\t\t}\n\n\t\t\tif(i === arrLength - 1){\n\t\t\t\tfor(var j = fauxI + 1; j < newCharArr.length; j++){\n\t\t\t\t\tnewCharArr[j] = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//If the array is not after going through the entire char arr, write the remaining text\n\t\t//on screen and clear array. Then draw border around it.\n\t\t//Otherwise, if the array is empty, create the broder.\n\t\tif(newCharArr !== []){\n\t\t\tctx.font = fontSize-2 + \"px Arial\";\n\t\t\tctx.fillStyle = planetColor;\n\t\t\tctx.fillText(newCharArr.join(\"\"), textX, textY+lengthCounter+lineSpace);\n\t\t\tnewCharArr = [];\n\n\n\t\t\tctx.fillStyle = \"#696969\";\n\t\t\tctx.fillRect(textX-lineSpace, textY-lineSpace-borderBuffer, borderDimension, lengthCounter+lineSpace+planetNameLength); //left border (x, y, width, length)\n\t\t\tctx.fillRect(textX-lineSpace+(maxLineLength*(Math.floor(fontSize/2.3))), textY-lineSpace-borderBuffer, borderDimension, lengthCounter+lineSpace+planetNameLength+2); //right border\n\t\t\t//(x, y, width, length)\n\t\t\tctx.fillRect(textX-lineSpace, textY-lineSpace-borderBuffer, maxLineLength*(Math.floor(fontSize/2.3)), borderDimension);//top border (x, y, width, length)\n\t\t\tctx.fillRect(textX-lineSpace, textY+lengthCounter+lineSpace+borderBuffer, maxLineLength*(Math.floor(fontSize/2.3)), borderDimension); //bottom border (x, y, width, length)\n\t\t}\n\t\telse{\n\t\t\tctx.fillStyle = \"#696969\";\n\t\t\tctx.fillRect(textX-lineSpace, textY-lineSpace-borderBuffer, borderDimension, lengthCounter+lineSpace+planetNameLength); //left border (x, y, width, length)\n\t\t\tctx.fillRect(textX-lineSpace+(maxLineLength*(Math.floor(fontSize/2.3))), textY-lineSpace-borderBuffer, borderDimension, lengthCounter+lineSpace+planetNameLength+2); //right border\n\t\t\t//(x, y, width, length)\n\t\t\tctx.fillRect(textX-lineSpace, textY-lineSpace-borderBuffer, maxLineLength*(Math.floor(fontSize/2.3)), borderDimension);//top border (x, y, width, length)\n\t\t\tctx.fillRect(textX-lineSpace, textY+lengthCounter+lineSpace+borderBuffer, maxLineLength*(Math.floor(fontSize/2.3)), borderDimension); //bottom border (x, y, width, length)\n\t\t}\n\t}\n\n\tdrawLine(context,game,x1,y1,x2,y2)\n\t{\n\t\tcontext.beginPath();\n\t\tcontext.strokeStyle = \"orange\";\n\t\tcontext.lineWidth = 2;\n\t\tcontext.moveTo(x1-this.x+game.WIDTH/2,y1-this.y+game.HEIGHT/2);\n\t\tcontext.lineTo(x2-this.x+game.WIDTH/2,y2-this.y+game.HEIGHT/2);\n\t\tcontext.stroke();\n\t}\n\n\tdrawPlanet(context,game,index,x,y)\n\t{\n\t\tcontext.drawImage(this.planetSprites,Math.floor(index/2)*64,Math.floor(index%2)*64,64,64,x-32-this.x+game.WIDTH/2,y-32-this.y+game.HEIGHT/2,64,64);\n\t}\n\n\t  /** @method\n\t\t* Renders the starting screen.\n\t\t* @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n\t\t* @param {CanvasRenderingContext2D} context - the rendering context\n\t\t*/\n\trender(elapsedTime, context,game) {\n\t\tvar vx = 0;\n\t\tvar vy = 0;\n\t\tif(this.state==\"move\")\n\t\t{\n\t\t\tvx = this.currentNode.x-this.nextNode.x;\n\t\t\tvy = this.currentNode.y - this.nextNode.y;\n\t\t}\n\t\tvar star;\n\t    for(var i=0, j=this.starList.length; i<j; i++) {\n\t\t\tstar = this.starList[i];\n\n\t\t\tstar.x += elapsedTime/1000*vx*star.vx/5;\n\t\t\tstar.y += elapsedTime/1000*vy*star.vx/5;\n\t\t\tif(star.x < -star.vx){\n\t\t\t\tstar.x = this.game.WIDTH;\n\t\t\t\tstar.y = Math.floor(Math.random() * this.game.HEIGHT)\n\t\t\t} else if(star.y<-star.vx) {\n\t\t\t\tstar.x = Math.floor(Math.random()*this.game.WIDTH)\n\t\t\t\tstar.y = this.game.HEIGHT;\n\t\t\t} else if(star.x>this.game.WIDTH+star.vx)\n\t\t\t{\n\t\t\t\tstar.x = 0;\n\t\t\t\tstar.y = Math.floor(Math.random() * this.game.HEIGHT)\n\t\t\t} else if(star.y>this.game.HEIGHT+star.vx)\n\t\t\t{\n\t\t\t\tstar.x = Math.floor(Math.random()*this.game.WIDTH)\n\t\t\t\tstar.y = 0;\n\t\t\t}\n\t\t\tcontext.fillStyle = \"white\";\n\t\t\tcontext.beginPath();\n\t\t\tcontext.arc(star.x, star.y, .1+ star.vx, 0, Math.PI * 2, true);\n\t\t\tcontext.closePath();\n\t\t\tcontext.fill();\n\t\t}\n\n\t\tcontext.save();\n\t\tthis.drawLine(context,game,this.map.erena.x,this.map.erena.y,this.map.clareo.x,this.map.clareo.y);\n\t\tthis.drawLine(context,game,this.map.erena.x,this.map.erena.y,this.map.zuberon.x,this.map.zuberon.y);\n\t\tthis.drawLine(context,game,this.map.erena.x,this.map.erena.y,this.map.thermos.x,this.map.thermos.y);\n\n\t\tthis.drawPlanet(context,game,0,this.map.erena.x,this.map.erena.y);\n\t\tthis.drawPlanet(context,game,1,this.map.zuberon.x,this.map.zuberon.y);\n\t\tthis.drawPlanet(context,game,2,this.map.clareo.x,this.map.clareo.y);\n\t\tthis.drawPlanet(context,game,3,this.map.thermos.x,this.map.thermos.y);\n\n\t\t//this.drawNode(context,this.map.erena.x-this.x+game.WIDTH/2,this.map.erena.y-this.y+game.HEIGHT/2);\n\t\t//this.drawNode(context,this.map.clareo.x-this.x+game.WIDTH/2,this.map.clareo.y-this.y+game.HEIGHT/2);\n\t\t//this.drawNode(context,this.map.zuberon.x-this.x+game.WIDTH/2,this.map.zuberon.y-this.y+game.HEIGHT/2);\n\t\t//this.drawNode(context,this.map.thermos.x-this.x+game.WIDTH/2,this.map.thermos.y-this.y+game.HEIGHT/2);\n\n\t\t//TODO draw player\n\n\t\tcontext.save();\n\t\tcontext.translate(game.WIDTH/2,game.HEIGHT/2);\n\t\tif(this.state==\"move\")\n\t\t{\n\t\t\tcontext.rotate(Math.atan2(this.nextNode.y-this.currentNode.y,this.nextNode.x-this.currentNode.x));\n\t\t}\n\t\tcontext.translate(-game.WIDTH/2,-game.HEIGHT/2);\n\t\tcontext.fillStyle = \"red\";\n\t\tcontext.fillRect(game.WIDTH/2-16,game.HEIGHT/2-16,32,32);\n\t\tcontext.restore();\n\n\t\tcontext.restore();\n\n\t\tthis.renderBackgroundSprites(context,elapsedTime);\n\n\t\t//textbox rendering, done after the background sprite render so that the stars don't\n\t\t//overlap the text\n\t\tif(this.state === \"stop\"){\n\t\t\tthis.nineSlice((game.WIDTH/2)-150, 650, this.currentNode.name, this.currentNode.color, this.currentNode.description, context);\n\t\t}\n\t}\n\n\trenderBackgroundSprites(context,elapsedTime){\n\n\t\tif(this.BackgroundAnimationTimer >= 300){\n\t\t\tthis.BackgroundAnimationRow++;\n\t\t\tif(this.BackgroundAnimationRow > 3){\n\t\t\t\tthis.BackgroundAnimationRow = 0;\n\t\t\t}\n\t\t\tthis.BackgroundAnimationTimer = 0;\n\t\t}\n\n\t\tcontext.drawImage(this.BackgroundSprites,3 * 63,this.BackgroundAnimationRow * 63,63,63,100-this.x,100-this.y,63,63);\n\t\tcontext.drawImage(this.BackgroundSprites,4 * 63,this.BackgroundAnimationRow * 63,63,63,50-this.x,600-this.y,63,63);\n\n\t\tcontext.drawImage(this.BackgroundSprites,2 * 32, 256 + this.BackgroundAnimationRow * 32,32,32,800-this.x,700-this.y,32,32);\n\t\tcontext.drawImage(this.BackgroundSprites,0 * 32, 256 + this.BackgroundAnimationRow * 32,32,32,500-this.x,30-this.y,32,32);\n\n\t\tcontext.drawImage(this.BackgroundSprites,0 * 32, 386,32,32,500-this.x,600-this.y,32,32);\n\t\tcontext.drawImage(this.BackgroundSprites,2 * 32, 386,32,32,700-this.x,150-this.y,32,32);\n\n\t\tthis.BackgroundAnimationTimer += elapsedTime;\n\t}\n}\n\n\n//# sourceURL=webpack:///./src/Overworld.js?");

/***/ }),

/***/ "./src/PlanetPlayer.js":
/*!*****************************!*\
  !*** ./src/PlanetPlayer.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PlanetPlayer; });\n/**\n * Represents the player, including location.\n * Health functionality could be added here, as long as it doesn't conflict with other levels that might not use it.\n * The player is typically created and managed by the PlanetLevelManager, so avoid creating players in your own game.\n */\nclass PlanetPlayer {\n\n  /**\n   * Create the player for a specific level.\n   * Loads the player animation images.\n   * @param {BasePlanetLevel} level - The level this player belongs to.\n   */\n  constructor(level) {\n    this.level = level;\n\n    this.animationDuration = 150;\n    this.animationMsPerImage = 100;\n\n    this.animationXOffset = 0;\n    this.animationYOffset = 0;\n    this.animationDirection = 0;\n    this.animationXOffset = 0;\n    this.animationYOffset = 0;\n    this.animationTimer = 0;\n    this.animationImageSequence = 0;\n    this.animationImageTile = undefined;\n\n    this.movePlayerToSpawn();\n\n    this.imagesLoading = 2;\n    this.playerJson = __webpack_require__(/*! ../dist/resources/planet_player/PlanetPlayer.json */ \"./dist/resources/planet_player/PlanetPlayer.json\");\n\n    // Load the tileset image.\n    this.gunImage = new Image();\n    this.noGunImage = new Image();\n\n    this.gunImage.onload = (() => {\n      this.imagesLoading--;\n    });\n\n    this.noGunImage.onload = (() => {\n      this.imagesLoading--;\n    });\n\n    this.gunImage.src = \"resources/planet_player/astrogun.png\";\n    this.noGunImage.src = \"resources/planet_player/astroman.png\";\n\n    /// Load the tileset. Create an array of properties for each tile type which can be easily queried.\n    this.tileset = [];\n    for(let i = 0; i < this.playerJson.tilecount; i++) {\n      let properties = [];\n      properties[\"id\"] = i;\n      properties[\"imageX\"] = this.playerJson.spacing + ((i % this.playerJson.columns) * (32 + this.playerJson.margin));\n      properties[\"imageY\"] = this.playerJson.spacing + (Math.floor(i / this.playerJson.columns) * (32 + this.playerJson.margin));\n\n      this.tileset[i] = properties;\n    }\n  }\n\n  /**\n   * Move the player to a specific location and direction.\n   * @param x - New grid x position.\n   * @param y - New grid y position.\n   * @param direction - New face direction integer. If omitted, the face direction won't change.\n   * Face direction key:\n   *     N       0       -y\n   *   W   E   1   3   -x  +x\n   *     S       2       +y\n   */\n  movePlayer(x, y, direction) {\n    this.x = x;\n    this.y = y;\n    if(direction !== undefined && direction !== null) {\n      this.faceDirection = direction;\n    }\n    this.level.playerMoved(this);\n  }\n\n  /**\n   * Move the player to the spawn location, as if it was killed and is re-spawning.\n   */\n  movePlayerToSpawn() {\n    this.movePlayer(this.level.playerSpawnX, this.level.playerSpawnY, this.level.playerSpawnFaceDirection);\n  }\n\n  /** @method\n   * Update logic related to player.\n   * @param {DOMHighResTimeStamp} elaspedTime - The amount of time elapsed this frame.\n   * @param {Input} input - The input from this and the prior frame.\n   * @param {Game} game - The game object. Not currently used.\n   */\n  update(elaspedTime, input, game) {\n    let moveLeft = input.keyPressed('ArrowLeft') || false;\n    let moveRight = input.keyPressed('ArrowRight') || false;\n    let moveUp = input.keyPressed('ArrowUp') || false;\n    let moveDown = input.keyPressed('ArrowDown') || false;\n    let interact = input.keyDown('f') || false;\n    let fire = input.keyDown(' ') || false;\n\n    if(this.animationTimer > 0) {\n      this.animationTimer -= elaspedTime;\n      this.animationImageSequence += elaspedTime;\n\n      if(this.animationTimer <= 0) {\n        this.animationXOffset = 0;\n        this.animationYOffset = 0;\n        if(this.animationDirection % 2 === 0) {\n          this.y += this.animationDirection - 1;\n        } else {\n          this.x += this.animationDirection - 2;\n        }\n\n        this.level.playerMoved(this);\n      } else {\n        if(this.animationDirection % 2 === 0) { // north or south\n          this.animationYOffset = (this.animationDirection - 1) * (32 - (32 * (this.animationTimer / this.animationDuration)));\n        } else {\n          this.animationXOffset = (this.animationDirection - 2) * (32 - (32 * (this.animationTimer / this.animationDuration)));\n        }\n      }\n    }\n\n    // If more than one button is pressed down, we won't move.\n    // This is to prevent some uncertain movement when the player is spamming the keys.\n\n    // Asks the level if the target tile is passable before moving there.\n    // Face direction will change regardless if the tile is passable.\n\n    if(this.animationTimer <= 0) {\n      if(moveLeft + moveRight + moveUp + moveDown === 1) {\n        if(moveLeft) {\n          this.faceDirection = 1;\n          if(this.checkIfTileIsPassible(this.x - 1, this.y)) {\n            this.animationTimer += this.animationDuration;\n            this.animationDirection = this.faceDirection;\n          }\n        } else if (moveRight) {\n          this.faceDirection = 3;\n          if(this.checkIfTileIsPassible(this.x + 1, this.y)) {\n            this.animationTimer += this.animationDuration;\n            this.animationDirection = this.faceDirection;\n          }\n        } else if (moveUp) {\n          this.faceDirection = 0;\n          if(this.checkIfTileIsPassible(this.x, this.y - 1)) {\n            this.animationTimer += this.animationDuration;\n            this.animationDirection = this.faceDirection;\n          }\n        } else if (moveDown) {\n          this.faceDirection = 2;\n          if(this.checkIfTileIsPassible(this.x, this.y + 1)) {\n            this.animationTimer += this.animationDuration;\n            this.animationDirection = this.faceDirection;\n          }\n        }\n      } else {\n        this.animationTimer = 0;\n        this.animationImageSequence = this.animationMsPerImage - 1;\n      }\n    }\n\n    this.animationImageTile =\n      this.tileset[\n        (((this.faceDirection + 2) % 4) * 3) +\n        Math.floor(this.animationImageSequence / this.animationMsPerImage) % 3\n        ];\n\n    if(interact) {\n      if(this.faceDirection % 2 === 0) {  // Are we facing north or south?\n        this.level.playerInteracted(this, this.x, this.y + (this.faceDirection - 1));\n      } else {\n        this.level.playerInteracted(this, this.x + (this.faceDirection - 2), this.y);\n      }\n    }\n\n    if(fire) {\n      if(this.faceDirection % 2 === 0) {  // Are we facing north or south?\n        this.level.playerFired(this, this.x, this.y + (this.faceDirection - 1));\n      } else {\n        this.level.playerFired(this, this.x + (this.faceDirection - 2), this.y);\n      }\n    }\n  }\n\n  /**\n   * Check if a tile (grid coordinates) is validly passable.\n   * Used internally for PlanetPlayer, but could be used externally if needed.\n   * @param x - X grid coordinate\n   * @param y - Y grid coordinate\n   * @returns {boolean} True if the tile is valid to be walked into; false if it is out-of-bounds or not passable.\n   */\n  checkIfTileIsPassible(x, y) {\n    return x >= 0 &&\n      x < this.level.tileset.tilemapJson.width &&\n      y >= 0 &&\n      y < this.level.tileset.tilemapJson.height &&\n      this.level.tilePassable(x, y);\n  }\n\n  /** @method\n   * Render the player.\n   * Draw here as if your visible grid is infinite, scrolling within a viewport is done by the PlanetLevelManager.\n   * @param {DOMHighResTimeStamp} elapsedTime - The amount of time elapsed this frame.\n   * @param {CanvasRenderingContext2D} context - The rendering context.\n   * @param {boolean} isHoldingGun - Whether or not the player should be drawn holding a weapon. Defaults to false if\n   * it isn't provided.\n   */\n  render(elapsedTime, context, isHoldingGun) {\n    if(this.imagesLoading === 0) {\n      if(isHoldingGun === undefined) {\n          isHoldingGun = false;\n      }\n\n      let sourceImage;\n      if(isHoldingGun) {\n          sourceImage = this.gunImage;\n      } else {\n          sourceImage = this.noGunImage;\n      }\n\n      context.drawImage(\n          sourceImage,\n          this.animationImageTile[\"imageX\"],                        // X position within the image\n          this.animationImageTile[\"imageY\"],                        // Y position within the image\n          32,                                                       // Width of the tile within the image\n          32,                                                       // Height of the tile within the image\n          (this.x) * 32 + this.animationXOffset,                    // X position within the rendered context\n          (this.y) * 32 + this.animationYOffset,                    // Y position within the rendered context\n          32,                                                       // Width of the tile within the rendered context\n          32);                                                      // Height of the tile within the rendered context\n    }\n  }\n}\n\n//# sourceURL=webpack:///./src/PlanetPlayer.js?");

/***/ }),

/***/ "./src/PlanetTileset.js":
/*!******************************!*\
  !*** ./src/PlanetTileset.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PlanetTileset; });\n/**\n * Loads a tileset from the Tiled program only.\n * Provides rendering logic.\n * Provides tile retrieval and property querying.\n * If customizing, ensure you don't break any existing functionality (eg, if you're using a tilemap not made in Tiled).\n *\n * Properties of tiles can be queried easily:\n *  if(getTile(10, 5)[\"passable\"]) {...}\n * where \"passable\" is a property defined for the tile in Tiled.\n *\n * Construct with already loaded tileset and tilemaps, and just the path to the image:\n *  new PlanetTileset(\n *    require('path/to/tileset.json'),\n *    require('path/to/tilemap.json'),\n *    'path/to/image.png');\n *\n * See sample planet level for more examples.\n */\nclass PlanetTileset {\n\n  /**\n   * Create a new planet tileset.\n   * @param tilesetJson - Must be an already loaded tileset (defines each tile type).\n   * @param tilemapJson - Must be an already loaded tilemap (defines the map using each of the tile types).\n   * @param tilesetImageFilePath - Provide the path relative to the dist folder (ie 'resources/...').\n   */\n  constructor(tilesetJson, tilemapJson, tilesetImageFilePath) {\n    this.imageLoaded = false;\n    this.tilesetJson = tilesetJson;\n\n    // Check if the tileset is valid.\n    console.assert(\n      this.tilesetJson.tilewidth === 32 && this.tilesetJson.tileheight === 32,\n      \"A planet tileset json is not using 32x32 tiles! Fix the json in Tiled.\");\n\n    // Load the tileset image.\n    this.tileImage = new Image();\n    this.imageLoaded = false;\n    this.tileImage.onload = (() => {\n      this.imageLoaded = true;\n    });\n    this.tileImage.src = tilesetImageFilePath;\n\n    /// Load the tileset. Create an array of properties for each tile type which can be easily queried.\n    this.tileset = [];\n    for(let i = 0; i < this.tilesetJson.tilecount; i++) {\n      let properties = [];\n      properties[\"id\"] = i;\n      properties[\"imageX\"] = this.tilesetJson.spacing + ((i % this.tilesetJson.columns) * (32 + this.tilesetJson.margin));\n      properties[\"imageY\"] = this.tilesetJson.spacing + (Math.floor(i / this.tilesetJson.columns) * (32 + this.tilesetJson.margin));\n\n      this.tileset[i] = properties;\n    }\n\n    for(let i = 0; i < this.tilesetJson.tiles.length; i++) {\n      let jsonProperties = this.tilesetJson.tiles[i].properties;\n      let id = this.tilesetJson.tiles[i].id;\n      for(let j = 0; j < jsonProperties.length; j++) {\n        this.tileset[id][jsonProperties[j].name] = jsonProperties[j].value;\n      }\n    }\n\n    // Prepare the tilemap.\n    this.loadNewTilemap(tilemapJson);\n  }\n\n  /**\n   * Load a new tilemap into this tileset.\n   * Overwrites the previous tilemap.\n   * @param tilemapJson Loaded tilemap json (created in Tiled.) Use require('path/to/file'). Path is relative to where\n   * the require() is used.\n   */\n  loadNewTilemap(tilemapJson) {\n    this.tilemapJson = tilemapJson;\n\n    // Check if the tilemap is correctly set up. This might not be necessary.\n    console.assert(\n      this.tilemapJson.renderorder === \"right-down\",\n      \"A planet tilemap json is not renderorder exported as 'right-down'! Fix the json in Tiled or manually override the json.\");\n\n    // Current level width and height (in grid squares) is all defined in the tilemap.json from Tiled.\n    this.width = this.tilemapJson.width;\n    this.height = this.tilemapJson.height;\n    this.numberOfTilesInMap = this.width * this.height;\n    this.tilemapOrder = [];\n    for(let layerIndex = 0; layerIndex < this.tilemapJson.layers.length; layerIndex++) {\n      if(this.tilemapJson.layers[layerIndex].type === \"tilelayer\") {\n        this.tilemapOrder.push({\n          id: this.tilemapJson.layers[layerIndex].id,\n          location: layerIndex\n        });\n      }\n    }\n    this.tilemapOrder.sort((a, b) => { return a.id - b.id; });\n  }\n\n  /**\n   * Change the tile id from its original value.\n   * @param x - X grid coordinate\n   * @param y - Y grid coordinate\n   * @param layer - Layer of the tile (try 0 or 1 if you aren't using layers)\n   * @param id - New id (from your tileset) for the tile.\n   */\n  setTileId(x, y, layer, id) {\n    this.tilemapJson.layers[layer].data[x + (this.tilemapJson.width * y)] = id + 1;\n  }\n\n  /** @method\n   * Retrieve the highest layer tile object for a tile at the given coordinates.\n   * The y coordinate can be omitted if the tiles are being indexed by a single dimension.\n   * @param x - X grid coordinate for the requested tile.\n   * @param y - Y grid coordinate for the requested tile.\n   * @returns An array of properties defined by that tile, including imageX, imageY, and id, as well as other custom\n   * properties defined in Tiled. The highest layer with an actual tile in this location is returned.\n   */\n  getTile(x, y) {\n    if(y === undefined) {\n      y = 0;\n    }\n\n    let highestTile = undefined;\n    this.getStackedTiles(x, y).reverse().some((value) => {\n      if(value !== undefined) {\n        highestTile = value;\n        return true;\n      }\n      return false;\n    });\n    return highestTile;\n  }\n\n  /** @method\n   * Retrieves all tiles at the given coordinates (if using multiple layers in Tiled).\n   * THe y coordinate can be omitted if the tiles are being index by a single dimension.\n   * @param x - X grid coordinate to retrieve from.\n   * @param y - Y grid coordinate to retrieve from.\n   * @returns {array} List of tiles for the provided coordinates where the \"key\" or index for each item is the layer id\n   * that the tile is found on.\n   * NOTE: Layer ID's start from 1 in Tiled, not 0! Requesting the 0 index will return undefined for this array.\n   */\n  getStackedTiles(x, y) {\n    if(y === undefined) {\n      y = 0;\n    }\n\n    let tiles = [];\n    for(let i = 0; i < this.tilemapOrder.length; i++) {\n      let layerIndex = this.tilemapOrder[i].location;\n\n      // We must take the tile id - 1 here because the 0 id within **tilemaps** is reserved for undefined tiles (as\n      // per Tiled standard). The id of each tile returned should be what we'd normally expect.\n      // Other than this fix, the id's work as expected.\n      let tileId = this.tilemapJson.layers[layerIndex].data[x + (this.tilemapJson.width * y)] - 1;\n\n      // -1 refers to undefined (unspecified) tiles in this layer.\n      if(tileId !== -1) {\n        // For some reason Tiled may \"wrap\" the tileId to be realId + (n * tilesetCount)\n        // To get the actual tile, we mod the tilecount.\n        tiles[this.tilemapJson.layers[layerIndex].id] = this.tileset[tileId % this.tilesetJson.tilecount];\n      }\n    }\n    return tiles;\n  }\n\n  /**\n   * Draw a specific tile from your tileset.\n   * @param x - X grid coordinate to draw the tile\n   * @param y - Y grid coordinate to draw the tile\n   * @param id - Id of the tile (from your tileset) to draw\n   * @param context - Drawing context\n   */\n  drawTile(x, y, id, context) {\n    let tile = this.tileset[id];\n    context.drawImage(\n      this.tileImage,\n      tile[\"imageX\"],                                           // X position within the image\n      tile[\"imageY\"],                                           // Y position within the image\n      32,                                                       // Width of the tile within the image\n      32,                                                       // Height of the tile within the image\n      x * 32,             // X position within the rendered context\n      y * 32,   // Y position within the rendered context\n      32,                                                       // Width of the tile within the rendered context\n      32);                                                      // Height of the tile within the rendered context\n  }\n\n\n  /** @method\n   * Render the tileset.\n   * Draw here as if your visible grid is infinite, scrolling within a viewport is done by the PlanetLevelManager.\n   * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n   * @param {CanvasRenderingContext2D} context - the rendering context\n   */\n  render(elapsedTime, context) {\n    if(this.imageLoaded) {\n      // We don't use the getStackedTiles function here primarily for efficiency.\n      // We want to draw each layer in order, then go to the next layer (instead of tile by tile) to avoid cache miss.\n\n      // Draw each layer\n      for(let i = 0; i < this.tilemapOrder.length; i++) {\n        let layerIndex = this.tilemapOrder[i].location;\n        // Draw each tile\n        for(let tilemapIndex = 0; tilemapIndex < this.numberOfTilesInMap; tilemapIndex++) {\n          // Only draw the tile if the tile exists\n          // Non-existent tiles in a layer are 0 in JSON with each tile id for every other tile incremented by one\n          // We subtract 1 here to offset this, so -1 is non-existent and 0 and above is the actual tile id.\n          let tileId = this.tilemapJson.layers[layerIndex].data[tilemapIndex] - 1;\n          if(tileId !== -1) {\n            // For some reason Tiled may \"wrap\" the tileId to be realId + (n * tilesetCount)\n            // To get the actual tile, we mod the tilecount.\n            let tile = this.tileset[tileId % this.tilesetJson.tilecount];\n            context.drawImage(\n              this.tileImage,\n              tile[\"imageX\"],                                           // X position within the image\n              tile[\"imageY\"],                                           // Y position within the image\n              32,                                                       // Width of the tile within the image\n              32,                                                       // Height of the tile within the image\n              (tilemapIndex % this.tilemapJson.width) * 32,             // X position within the rendered context\n              Math.floor(tilemapIndex / this.tilemapJson.width) * 32,   // Y position within the rendered context\n              32,                                                       // Width of the tile within the rendered context\n              32);                                                      // Height of the tile within the rendered context\n          }\n        }\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack:///./src/PlanetTileset.js?");

/***/ }),

/***/ "./src/TempMenu.js":
/*!*************************!*\
  !*** ./src/TempMenu.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TempMenu; });\nclass TempMenu {\n\tconstructor(strings,callback,game)\n\t{\n\t\tthis.selected = 0;\n\t\tthis.strings = strings;\n\t\tthis.callback = callback;\n\t\tthis.caller = game.gameState[game.gameState.length-1];\n\t\tthis.game = game;\n\t\tthis.loadSound = new Audio;\n\t\tthis.loadSound.src = \"resources/overworld_assets/sfx/planet_click.wav\";\n\t\tthis.loadSound.volume = .2;\n\t}\n\n\tupdate(elapsedTime,input,game)\n\t{\n\t\tif(input.keyDown('ArrowDown'))\n\t\t{\n\t\t\tthis.selected++;\n\t\t\tif(this.selected<0) this.selected = 0;\n\t\t}\n\t\tif(input.keyDown('ArrowUp'))\n\t\t{\n\t\t\tthis.selected--;\n\t\t\tif(this.selected>=this.strings.length) this.selected = this.selected-1;\n\t\t}\n\t\tif(input.keyDown(' '))\n\t\t{\n\t\t\tif(this.strings[this.selected] != \"Exit\")\tthis.loadSound.play();\n\t\t\tgame.popGameState();\n\t\t\tgame.popGameState();\n\t\t\tthis.callback(this.strings[this.selected]);\n\t\t}\n\t}\n\n\trender(elapsedTime,context,game)\n\t{\n\t\tthis.caller.render(elapsedTime,context,game);\n\t\tcontext.fillStyle = \"#444444\";\n\t\tcontext.fillRect(0,0,110, 110);\n\t\tcontext.fillStyle = \"#222222\";\n\t\tcontext.fillRect(5,5,105,105);\n\t\tcontext.fillStyle = \"white\";\n\t\tcontext.font = \"30px Arial\";\n\t\tfor(let i = 0; i < this.strings.length; i++)\n\t\t{\n\t\tcontext.fillText(this.strings[i],(i==this.selected?10:0),i*32+20);\n\t\t}\n\t}\n}\n\n\n//# sourceURL=webpack:///./src/TempMenu.js?");

/***/ }),

/***/ "./src/Zoom.js":
/*!*********************!*\
  !*** ./src/Zoom.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Zoom; });\n/* harmony import */ var _TempMenu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TempMenu */ \"./src/TempMenu.js\");\n\n\nclass Zoom {\n\tconstructor(x, y, callback,game, color, name)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.callback = callback;\n\t\tthis.caller = game.gameState[game.gameState.length-1];\n\t\tthis.selected = 0;\n\t\tthis.counter = 50;\n\t\tthis.color = color;\n\t\tthis.name = name;\n\t\tthis.planetSprites = new Image;\n\t\tthis.planetSprites.src = \"resources/overworld_assets/img/colored_planets.png\";\n\t\tthis.zoomSound = new Audio;\n\t\tthis.soundFlag = false;\n\t\tthis.zoomSound.src = \"resources/overworld_assets/sfx/planet_hover.wav\";\n\t\tthis.zoomSound.volume = .2;\n\t}\n\n\tupdate(elapsedTime,input,game)\n\t{\n\t\t//this is just for one little sound when the zoom first is pushed as a gameState\n\t\tif(!this.soundFlag){\n\t\t\tthis.zoomSound.play();\n\t\t\tthis.soundFlag = true;\n\t\t}\n\t\t//Don't uncomment this\n\t\t/*if(input.keyDown(' '))\n\t\t{\n\t\t\t//this.callback(this.strings[this.selected]);\n\t\t\tgame.popGameState();\n\t\t}*/\n\t\tthis.counter += 3;\n\n\t\tif (this.counter > 300) {\n\t\t\tthis.counter = 300;\n\n\t\t\t//Don't erase this again\n\t\t\tif(!this.flag)\n\t\t\t{\n\t\t\t\tthis.flag = true;\n\t\t\t\tgame.pushGameState(new _TempMenu__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.caller.currentNode.options,this.caller.callback,game));\n\t\t\t}\n\t\t}\n\t}\n\n\trender(elapsedTime,context,game)\n\t{\n\t\tcontext.imageSmoothingEnabled = false;\n\t\tif(this.planetSprites.complete){\n\t\t\tthis.caller.render(elapsedTime,context,game);\n\t\t\t//the numbers are supposed to not be exact 64, weird white edges were appearing, please dont change ;)))))\n\t\t\tif(this.name === \"Erena\")context.drawImage(this.planetSprites,0,0,64,64,game.WIDTH/2 - this.counter/2,game.HEIGHT/2 - this.counter/2,this.counter,this.counter);\n\t\t\tif(this.name === \"Zuberon\")context.drawImage(this.planetSprites,0,64,64,64,game.WIDTH/2 - this.counter/2,game.HEIGHT/2 - this.counter/2,this.counter,this.counter);\n\t\t\tif(this.name === \"Thermos\")context.drawImage(this.planetSprites,65,64,64,64,game.WIDTH/2 - this.counter/2,game.HEIGHT/2 - this.counter/2,this.counter,this.counter);\n\t\t\tif(this.name === \"Clareo IV\")context.drawImage(this.planetSprites,65,0,64,64,game.WIDTH/2 - this.counter/2,game.HEIGHT/2 - this.counter/2,this.counter,this.counter);\n\n\t}\n }\n}\n\n\n//# sourceURL=webpack:///./src/Zoom.js?");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Game; });\n/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input */ \"./src/input.js\");\n/* harmony import */ var _menus_start_screen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./menus/start-screen */ \"./src/menus/start-screen.js\");\n/* harmony import */ var _Overworld__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Overworld */ \"./src/Overworld.js\");\n\n\n\n\n/** @class Game\n  * A class representing the high-level functionality\n  * of a game - the game loop, buffer swapping, etc.\n  */\nclass Game {\n  /** @constructor\n    * Creates the game instance\n    * @param {int} width - the width of the game screen in pixels\n    * @param {int} height - the height of the game screen in pixels\n    */\n  constructor(width, height) {\n    this._start = null;\n    this.WIDTH = width;\n    this.HEIGHT = height;\n    this.GRID_WIDTH = Math.floor(width / 32);\n    this.GRID_HEIGHT = Math.floor(height / 32);\n\n    // Set up the back buffer\n    this.backBuffer = document.createElement('canvas');\n    this.backBuffer.width = this.WIDTH;\n    this.backBuffer.height = this.HEIGHT;\n    this.backBufferCtx = this.backBuffer.getContext('2d');\n\n    // Set up the screen buffer\n    this.screenBuffer = document.createElement('canvas');\n    this.screenBuffer.width = this.WIDTH;\n    this.screenBuffer.height = this.HEIGHT;\n    this.screenBufferCtx = this.screenBuffer.getContext('2d');\n    document.body.append(this.screenBuffer);\n\n    // Set up the input object\n    this.input = new _input__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n\n    // Set up the game state stack\n    this.gameState = []\n    this.gameState.push(new _menus_start_screen__WEBPACK_IMPORTED_MODULE_1__[\"default\"]());\n  }\n  /** @method pushGameState\n    * Pushes the provided game state to the\n    * state stack.\n    * @param {GameState} gameState - an object that\n    * implements an update() and render() method.\n    */\n  pushGameState(gameState) {\n    this.gameState.push(gameState);\n  }\n  /** @method popGameState\n    * Pops the current game state from the state stack.\n    * @return {GameState} the popped game state object\n    */\n  popGameState() {\n    return this.gameState.pop();\n  }\n  /** @method update\n    * Updates the game state\n    * @param {integer} elapsedTime - the number of milliseconds per frame\n    */\n  update(elapsedTime) {\n    // Update the active game state\n    this.gameState[this.gameState.length - 1].update(elapsedTime, this.input, this);\n\n    // Update the input object\n    this.input.update();\n  }\n  /** @method render\n    * Renders the game state\n    * @param {integer} elapsedTime - the number of milliseconds per frame\n    */\n  render(elapsedTime) {\n    // Clear the back buffer\n    this.backBufferCtx.fillStyle = \"#000\";\n    this.backBufferCtx.fillRect(0,0,this.WIDTH, this.HEIGHT);\n\n    // Render the game state\n    this.gameState[this.gameState.length - 1].render(elapsedTime, this.backBufferCtx, this);\n\n    // Flip the back buffer\n    this.screenBufferCtx.drawImage(this.backBuffer, 0, 0);\n  }\n  /** @method loop\n    * Updates and renders the game,\n    * and calls itself on the next draw cycle.\n    * @param {DOMHighResTimestamp} timestamp - the current system time\n    */\n  loop(timestamp) {\n    var elapsedTime = this._frame_start ? timestamp - this._frame_start : 0;\n    this.update(elapsedTime);\n    this.render(elapsedTime);\n    this._frame_start = timestamp;\n    window.requestAnimationFrame((timestamp) => {this.loop(timestamp)});\n  }\n}\n\n\n//# sourceURL=webpack:///./src/game.js?");

/***/ }),

/***/ "./src/index.css":
/*!***********************!*\
  !*** ./src/index.css ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../node_modules/css-loader!./index.css */ \"./node_modules/css-loader/index.js!./src/index.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./src/index.css?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/game.js\");\n/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.css */ \"./src/index.css\");\n/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nvar game = new _game__WEBPACK_IMPORTED_MODULE_0__[\"default\"]((32*32), (24*32)); //1024 x 768 (could be changed as long as factor of 32)\ngame.loop();\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/input.js":
/*!**********************!*\
  !*** ./src/input.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Input; });\n\n/** @module Input\n  * A class for handling input from the user\n  * will work for all keys on the keyboard\n  */\nclass Input {\n  /** @constructor\n    * Constructs a new instance of the Input class\n    * and attaches event listeners to the window.\n    */\n  constructor() {\n    this.oldState = {};\n    this.newState = {};\n\n    window.addEventListener('keydown', (event) => {\n      if(event.key.length <= 1 || event.key.charAt(0) !== 'F') {\n        event.preventDefault();\n      }\n      this.newState[event.key] = true;\n    });\n\n    window.addEventListener('keyup', (event) => {\n      if(event.key.length <= 1 || event.key.charAt(0) !== 'F') {\n        event.preventDefault();\n      }\n      this.newState[event.key] = false;\n    });\n\n  }\n\n  /** @method\n    * Copies the new state to the old state\n    */\n  update() {\n    this.oldState = JSON.parse(JSON.stringify(this.newState));\n  }\n\n  /** @method\n    * Returns true if the specified key is\n    * currently pressed.\n    * @param {String} key - the key to test\n    * @return {bool} if the key is pressed\n    */\n  keyPressed(key) {\n    return this.newState[key];\n  }\n\n  /** @method\n    * Returns true if the specified key\n    * went down this frame\n    * @param {String} key - the key to test\n    * @return {bool} if the key is pressed\n    */\n  keyDown(key) {\n    return this.newState[key] && !this.oldState[key];\n  }\n\n  /** @method\n    * Returns true if the specified key\n    * went up this frame\n    * @param {String} key - the key to test\n    * @return {bool} if the key is pressed\n    */\n  keyUp(key) {\n    return !this.newState[key] && this.oldState[key];\n  }\n}\n\n\n//# sourceURL=webpack:///./src/input.js?");

/***/ }),

/***/ "./src/menus/PlanetLevelManager.js":
/*!*****************************************!*\
  !*** ./src/menus/PlanetLevelManager.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PlanetLevelManager; });\n/* harmony import */ var _PlanetPlayer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../PlanetPlayer */ \"./src/PlanetPlayer.js\");\n\n\n/**\n * Manages a planet level and provides scrolling functionality.\n * Changes to this class will affect every other planet level.\n */\nclass PlanetLevelManager {\n\n  /**\n   * Create a new manager to work with the given level.\n   * Typically should be called like:\n   *   new PlanetLevelManager(new SamplePlanetLevel());\n   * @param level - The level to manager and call render/update functions for.\n   * @param setSuccessCallback - Function that takes one parameter. This callback will be run when the users completes\n   * the current level. The parameter will be true if the player succeeded in the level, false if the player failed in\n   * the level (did not get the treasure). This PlanetLevelManager will be popped off the stack after callback is called.\n   */\n  constructor(level, setSuccessCallback) {\n    this.finished = false;\n    this.setSuccessCallback = setSuccessCallback;\n\n    this.level = level;\n    this.player = new _PlanetPlayer__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.level);\n    this.lastCalculatedTilemapWidth = 0;\n    this.lastCalculatedTilemapHeight = 0;\n\n    this.escapeHeldStart = -1;\n    this.escapeDelay = 1500;\n\n    this.scrollingXOffset = 0;\n    this.scrollingYOffset = 0;\n\n    this.scrollingCanvas = document.createElement('canvas');\n    this.scrollingCanvas.width = this.level.tileset.width * 32;\n    this.scrollingCanvas.height = this.level.tileset.height * 32;\n    this.scrollingContext = this.scrollingCanvas.getContext('2d');\n  }\n\n  /**\n   * Get the active level.\n   * Used externally.\n   * @returns {BasePlanetLevel} An extension of the BasePlanetLevel representing the current custom planet level.\n   */\n  getLevel() {\n    return this.level;\n  }\n\n  /**\n   * Get the icon (treasure token) for the current level.\n   * Used externally.\n   * @returns {Image} Drawable image.\n   */\n  getLevelIcon() {\n    return this.level.icon;\n  }\n\n  /**\n   * Get the name of the current level.\n   * Used externally.\n   * @returns {string}\n   */\n  getLevelName() {\n    return this.level.name;\n  }\n\n  /**\n   * Check whether or not the current level is finished.\n   * Used externally.\n   * Typically rendering and updating of this manager should stop once this is true.\n   * @returns {boolean} True if finished, false if the player is still playing.\n   */\n  levelFinished() {\n    return this.finished;\n  }\n\n  /**\n   * Check whether or not the player succeeded in gaining the treasure for this active level.\n   * Used externally.\n   * Typically this should only be checked once levelFinished() is true.\n   * @returns {boolean} True if success, false if failure (no treasure).\n   */\n  playerSucceeded() {\n    return this.level.success;\n  }\n\n  /** @method\n   * Updates the active level and any calculations necessary for tileset scrolling.\n   * @param {DOMHighResTimeStamp} elaspedTime - The amount of time elapsed this frame.\n   * @param {Input} input - The input from this and the prior frame.\n   * @param {Game} game - The game object.\n   */\n  update(elaspedTime, input, game) {\n    if(input.keyPressed(\"Escape\")) {\n      if(this.escapeHeldStart === -1) {\n        this.escapeHeldStart = elaspedTime;\n      } else {\n        this.escapeHeldStart += elaspedTime;\n      }\n\n      if(this.escapeHeldStart >= this.escapeDelay) {\n        this.escapeHeldStart = -1;\n        this.level.finished = true; //Bad coding practice to change this, but it works for the mess of a game we have ;)\n      }\n    } else if (this.escapeHeldStart >= 0) {\n      this.escapeHeldStart = -1;\n    }\n\n    if(this.level.finished) {\n      if(!this.finished) {\n        // Only call the callback and pop game state once.\n        if(this.setSuccessCallback !== undefined && this.setSuccessCallback !== null) {\n          this.setSuccessCallback(this.playerSucceeded());\n        }\n        game.popGameState();\n        this.finished = true;\n      }\n    } else {\n      this.level.update(elaspedTime, input, game, this.player);\n\n      // Check if we need to update our scrolling information based on a change in tilemap.\n      if(this.lastCalculatedTilemapWidth !== this.level.tileset.width ||\n          this.lastCalculatedTilemapHeight !== this.level.tileset.height) {\n\n        this.lastCalculatedTilemapWidth = this.level.tileset.width;\n        this.lastCalculatedTilemapHeight = this.level.tileset.height;\n\n        // Edges which, if the player is within, the map must scroll.\n        this.leftEdge = game.WIDTH / (32 * 2);\n        this.topEdge = game.HEIGHT / (32 * 2);\n        this.rightEdge = this.lastCalculatedTilemapWidth - (this.leftEdge);\n        this.bottomEdge = this.lastCalculatedTilemapHeight - (this.topEdge);\n\n        // Actual dimensions that we'll be drawing. Either the dim of the canvas or the tilemap dim, whichever is smaller.\n        this.drawingWidth = Math.min(game.WIDTH, this.lastCalculatedTilemapWidth * 32);\n        this.drawingHeight = Math.min(game.HEIGHT, this.lastCalculatedTilemapHeight * 32);\n\n        // Update the scrolling canvas with the new width and height.\n        this.scrollingCanvas.width = this.lastCalculatedTilemapWidth * 32;\n        this.scrollingCanvas.height = this.lastCalculatedTilemapHeight * 32;\n\n        // If the new tilemap is smaller, we want to avoid drawing old data.\n        this.scrollingContext.clearRect(0, 0, this.scrollingCanvas.width, this.scrollingCanvas.height);\n      }\n\n      let animationAdjustedPlayerX = this.player.x + (this.player.animationXOffset / 32);\n      // Check if we need to scroll x dimension.\n      if(this.lastCalculatedTilemapWidth > game.GRID_WIDTH && animationAdjustedPlayerX > this.leftEdge) {\n        if(animationAdjustedPlayerX < this.rightEdge) {\n          this.scrollingXOffset = (this.player.x - this.leftEdge) * 32 + this.player.animationXOffset;\n        } else {\n          this.scrollingXOffset = (this.rightEdge - this.leftEdge) * 32;\n        }\n      } else {\n        this.scrollingXOffset = 0;\n      }\n\n      let animationAdjustedPlayerY = this.player.y + (this.player.animationYOffset / 32);\n      // Check if we need to scroll y dimension.\n      if(this.lastCalculatedTilemapHeight > game.GRID_HEIGHT && animationAdjustedPlayerY > this.topEdge) {\n        if(animationAdjustedPlayerY < this.bottomEdge) {\n          this.scrollingYOffset = (this.player.y - this.topEdge) * 32 + this.player.animationYOffset;\n        } else {\n          this.scrollingYOffset = (this.bottomEdge - this.topEdge) * 32;\n        }\n      } else {\n        this.scrollingYOffset = 0;\n      }\n    }\n  }\n\n  /** @method\n   * Renders the active level and manages tileset scrolling within the scene.\n   * @param {DOMHighResTimeStamp} elapsedTime - The amount of time elapsed this frame.\n   * @param {CanvasRenderingContext2D} context - The rendering context.\n   */\n  render(elapsedTime, context) {\n    if(!this.finished) {\n      this.level.render(elapsedTime, this.scrollingContext, this.player);\n\n      context.drawImage(\n        this.scrollingCanvas,\n        this.scrollingXOffset,\n        this.scrollingYOffset,\n        this.drawingWidth,\n        this.drawingHeight,\n        0,\n        0,\n        this.drawingWidth,\n        this.drawingHeight);\n\n      this.level.renderStatic(elapsedTime, context, this.player);\n\n\n      if(this.escapeHeldStart > 0) {\n        let abortingText = \"Aborting Level\";\n        let abortingProgress = this.escapeHeldStart / this.escapeDelay;\n        if(abortingProgress > 0.75) {\n          abortingText += \"...\";\n        } else if (abortingProgress > 0.5) {\n          abortingText += \"..\";\n        } else if (abortingProgress > 0.25) {\n          abortingText += \".\";\n        }\n\n        context.save();\n        context.shadowBlur = 16;\n        context.shadowColor = 'black';\n        context.fillStyle = 'white';\n        context.font = '24pt sans-serif';\n        context.fillText(abortingText, 3, 27);\n        context.restore();\n      }\n    }\n  }\n}\n\n//# sourceURL=webpack:///./src/menus/PlanetLevelManager.js?");

/***/ }),

/***/ "./src/menus/start-screen.js":
/*!***********************************!*\
  !*** ./src/menus/start-screen.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StartScreen; });\n/* harmony import */ var _PlanetLevelManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PlanetLevelManager */ \"./src/menus/PlanetLevelManager.js\");\n/* harmony import */ var _planet_levels_SamplePlanetLevel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../planet_levels/SamplePlanetLevel */ \"./src/planet_levels/SamplePlanetLevel.js\");\n/* harmony import */ var _Overworld__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Overworld */ \"./src/Overworld.js\");\n/** @class StartScreen\n  * A starting screen for the game.\n  */\n\n\n\n\nclass StartScreen {\n  /** @method\n    * Updates the starting screen\n    * @param {DOMHighResTimeStamp} elaspedTime - the amount of time elapsed this frame\n    * @param {Input} input - the input from this and the prior frame\n    * @param {Game} game - the game object\n    */\n  update(elaspedTime, input, game) {\n    // TODO: Load inital game state object\n    if(input.keyDown(' ')) {\n      game.pushGameState(new _Overworld__WEBPACK_IMPORTED_MODULE_2__[\"default\"](game));\n    }\n  }\n  /** @method\n    * Renders the starting screen.\n    * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n    * @param {CanvasRenderingContext2D} context - the rendering context\n    */\n  render(elapsedTime, context) {\n    context.save();\n    context.fillStyle = 'white';\n    context.font = '48pt Serif';\n    context.fillText(\"Welcome to Space Raiders\", 280, 200);\n    context.font = '18pt Serif';\n    context.fillText(\"Press [SPACE] to Begin\", 500, 300);\n    context.restore();\n  }\n}\n\n\n//# sourceURL=webpack:///./src/menus/start-screen.js?");

/***/ }),

/***/ "./src/planet_levels/BasePlanetLevel.js":
/*!**********************************************!*\
  !*** ./src/planet_levels/BasePlanetLevel.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BasePlanetLevel; });\n/**\n * Base level class used to provide basic functionality and structure for each level.\n * This class could be customized, but you should typically put any level-specific functionality in your own copy of the\n * sample planet level.\n *\n * ** Modification to this class may affect all other planet levels. **\n *\n * Each planet should extend this class, and call the super() function to call this constructor.\n */\nclass BasePlanetLevel {\n\n  /**\n   * Should be called by the extending levels when constructed using the super() call.\n   * Might overwrite some customization if it is not the first call in the planet's constructor.\n   */\n  constructor() {\n    this.finished = false;\n    this.success = false;\n\n    this.playerSpawnX = 1;\n    this.playerSpawnY = 1;\n    this.playerSpawnFaceDirection = 1;\n\n    this.tileset = undefined;\n    this.icon = new Image(32, 32);\n    this.name = \"Base Planet Level\";\n  }\n\n  /** @method\n   * Called when the player interacts with a tile.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the interacted tile (in front of player).\n   * @param y Y grid coordinate of the interacted tile (in front of player).\n   */\n  playerInteracted(player, x, y) {}\n\n  /**\n   * Called when the player moves.\n   * @param player Representation of the player.\n   */\n  playerMoved(player) {}\n\n  /**\n   * Called when the player fires a weapon.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the tile the player fires into (in front of player).\n   * @param y Y grid coordinate of the tile the player fires into (in front of player).\n   */\n  playerFired(player, x, y) {}\n\n  /**\n   * Called when the player attempts to move into tile at the given coordinates.\n   * @param x The X coordinate of the attempted move.\n   * @param y The Y coordinate of the attempted move.\n   * @return True if the player may pass, false if the requested tile is \"blocked\".\n   */\n  tilePassable(x, y) {}\n\n  /** @method\n   * Update any entities within this planet level, including the player.\n   * @param {DOMHighResTimeStamp} elaspedTime - the amount of time elapsed this frame\n   * @param {Input} input - the input from this and the prior frame\n   * @param {Game} game - the game object\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  update(elaspedTime, input, game, player) {}\n\n  /** @method\n   * Render the tileset, the player, and any other custom entities to the provided context.\n   * Draw here as if your visible grid is infinite, scrolling within a viewport is done by the PlanetLevelManager.\n   * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n   * @param {CanvasRenderingContext2D} context - the rendering context\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  render(elapsedTime, context, player) {}\n\n  /** @method\n   * Draw text using the static context (after scrolling).\n   * Only use this for drawing items on top of the screen.\n   * @param staticContext - The context to draw on top of the screen and scrolling elements.\n   */\n  renderStatic(elapsedTime, staticContext, player) {}\n}\n\n\n//# sourceURL=webpack:///./src/planet_levels/BasePlanetLevel.js?");

/***/ }),

/***/ "./src/planet_levels/DesertMazeLevel/mazedesert.js":
/*!*********************************************************!*\
  !*** ./src/planet_levels/DesertMazeLevel/mazedesert.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return mazedesert; });\n/* harmony import */ var _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BasePlanetLevel */ \"./src/planet_levels/BasePlanetLevel.js\");\n/* harmony import */ var _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../PlanetTileset */ \"./src/PlanetTileset.js\");\n\n\n\n/**\n * Example SamplePlanetLevel which extends the base planet class functionality.\n * ** DO NOT MODIFY THIS CLASS. **\n *\n * To start your own planet, copy this file and rename the class to your own level name, then customize the various\n * methods to tailor it to your game.\n */\nclass mazedesert extends _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n  /**\n   * Called when the level is being created.\n   * Be sure to call super() first (before anything else) to ensure the basic planet structure is in place.\n   */\n  constructor() {\n    super();\n\n    this.playerSpawnX = 64;\n    this.playerSpawnY = 48;\n    this.playerSpawnFaceDirection = 1;\n\n    // This loads your own tileset created from Tiled.\n    // You'll need the tileset.json, tilemap.json, and image.png. Look at the PlanetTileset class for more details.\n\n    // First two arguments (tileset and tilemap) are relative to the current folder (wherever this file is).\n    // Third argument (image) is relative to the dist folder.\n    this.tileset = new _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/DesertMazeLevel/sandy.json */ \"./dist/resources/planet_tilesets/DesertMazeLevel/sandy.json\"),\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/DesertMazeLevel/mazemap.json */ \"./dist/resources/planet_tilesets/DesertMazeLevel/mazemap.json\"),\n      \"resources/planet_tilesets/DesertMazeLevel/dss.png\");\n\n    this.icon = new Image(32, 32);  // Could be taken from your tileset, this is just a sample blank image.\n    this.name = \"Desert Maze\";\n  }\n\n  /** @method\n   * Called when the player interacts with a tile.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the interacted tile (in front of player).\n   * @param y Y grid coordinate of the interacted tile (in front of player).\n   */\n  playerInteracted(player, x, y) {\n    //console.log(\"Player interacted with \" + x + \",\" + y);\n    if(this.map === undefined) {\n      this.map = 0;\n    }\n    if (x===68&&y===50) {\n        var j = this.tileset.tilemapJson;\n        j.layers[0].data[68+50*j.width] = 12;\n\n        j.layers[0].data[68+48*j.width] = 7;\n        j.layers[0].data[69+48*j.width] = 7;\n        j.layers[0].data[64+41*j.width] = 7;\n      }\n    else if (x===116&&y===11) {\n        var j = this.tileset.tilemapJson;\n        j.layers[0].data[116+11*j.width] = 12;\n\n        j.layers[0].data[63+37*j.width] = 7;\n        j.layers[0].data[64+37*j.width] = 7;\n        j.layers[0].data[65+37*j.width] = 7;\n    }\n    else if (x===16&&y===75) {\n        var j = this.tileset.tilemapJson;\n        j.layers[0].data[16+75*j.width] = 12;\n\n        j.layers[0].data[63+33*j.width] = 7;\n        j.layers[0].data[64+33*j.width] = 7;\n        j.layers[0].data[65+33*j.width] = 7;\n      }\n      else if (x===36&&y===10) {\n        var j = this.tileset.tilemapJson;\n        j.layers[0].data[36+10*j.width] = 12;\n\n        j.layers[0].data[63+29*j.width] = 7;\n        j.layers[0].data[64+29*j.width] = 7;\n        j.layers[0].data[65+29*j.width] = 7;\n      }\n      else if (x===64&&y===43) {\n        this.success = true;\n        this.finished = true;\n      }\n\n  }\n\n  /**\n   * Called when the player moves.\n   * @param player Representation of the player.\n   */\n  playerMoved(player) {\n    //console.log(\"Player at \" + player.x + \",\" + player.y);\n    if (player.x===68&&player.y===50) {\n        var j = this.tileset.tilemapJson;\n        j.layers[0].data[68+50*j.width] = 12;\n\n        j.layers[0].data[68+48*j.width] = 7;\n        j.layers[0].data[69+48*j.width] = 7;\n\n        j.layers[0].data[63+41*j.width] = 7;\n        j.layers[0].data[64+41*j.width] = 7;\n        j.layers[0].data[65+41*j.width] = 7;\n    }\n    else if (player.x===116&&player.y===11) {\n        var j = this.tileset.tilemapJson;\n        j.layers[0].data[116+11*j.width] = 12;\n\n        j.layers[0].data[63+37*j.width] = 7;\n        j.layers[0].data[64+37*j.width] = 7;\n        j.layers[0].data[65+37*j.width] = 7;\n    }\n    else if (player.x===16&&player.y===75) {\n        var j = this.tileset.tilemapJson;\n        j.layers[0].data[16+75*j.width] = 12;\n\n        j.layers[0].data[63+33*j.width] = 7;\n        j.layers[0].data[64+33*j.width] = 7;\n        j.layers[0].data[65+33*j.width] = 7;\n    }\n    else if (player.x===36&&player.y===10) {\n        var j = this.tileset.tilemapJson;\n        j.layers[0].data[36+10*j.width] = 12;\n\n        j.layers[0].data[63+29*j.width] = 7;\n        j.layers[0].data[64+29*j.width] = 7;\n        j.layers[0].data[65+29*j.width] = 7;\n    }\n    else if (player.x===64&&player.y===43) {\n      this.success = true;\n      this.finished = true;\n    }\n\n  }\n\n  /**\n   * Called when the player fires a weapon.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the tile the player fires into (in front of player).\n   * @param y Y grid coordinate of the tile the player fires into (in front of player).\n   */\n  playerFired(player, x, y) {\n    console.log(\"Player fired at \" + x + \",\" + y);\n  }\n\n  /**\n   * Called when the player attempts to move into tile at the given coordinates.\n   * @param x The X coordinate of the attempted move.\n   * @param y The Y coordinate of the attempted move.\n   * @return True if the player may pass, false if the requested tile is \"blocked\".\n   */\n  tilePassable(x, y) {\n    return this.tileset.getTile(x, y)[\"passable\"] === true;\n  }\n\n  /** @method\n   * Update any entities within this planet level, including the player.\n   * @param {DOMHighResTimeStamp} elaspedTime - the amount of time elapsed this frame\n   * @param {Input} input - the input from this and the prior frame\n   * @param {Game} game - the game object\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  update(elaspedTime, input, game, player) {\n    player.update(elaspedTime, input, game);\n  }\n\n  /** @method\n   * Render the tileset, the player, and any other custom entities to the provided context.\n   * Draw here as if your visible grid is infinite, scrolling within a viewport is done by the PlanetLevelManager.\n   * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n   * @param {CanvasRenderingContext2D} context - the rendering context\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  render(elapsedTime, context, player) {\n    this.tileset.render(elapsedTime, context);\n    player.render(elapsedTime, context);\n  }\n}\n\n\n//# sourceURL=webpack:///./src/planet_levels/DesertMazeLevel/mazedesert.js?");

/***/ }),

/***/ "./src/planet_levels/DesertShackLevel/Alien.js":
/*!*****************************************************!*\
  !*** ./src/planet_levels/DesertShackLevel/Alien.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Alien; });\nclass Alien {\n\n  constructor(level, x, y, direction)\n  {\n    this.level = level;\n    this.x = x;\n    this.y = y;\n    this.direction = direction;\n\n    this.move_delay = 50;\n    this.move_counter = 0;\n\n    this.living = true;\n  }\n\n  update()\n  {\n    var random = Math.floor(Math.random() * (4));\n    this.direction = random;\n\n    if( this.move_counter >= this.move_delay )\n    {\n      this.move_counter = 0;\n\n      switch( this.direction ) {\n        case 0: // moving North\n          if(this.level.tilePassable(this.x, this.y - 1)) {\n            this.y--;\n          }\n          break;\n        case 1: // moving West\n          if(this.level.tilePassable(this.x - 1, this.y)) {\n            this.x--;\n          }\n          break;\n        case 2: // moving South\n          if(this.level.tilePassable(this.x, this.y + 1)) {\n            this.y++;\n          }\n          break;\n        case 3: // moving East\n          if(this.level.tilePassable(this.x + 1, this.y)) {\n            this.x++;\n          }\n          break;\n      }\n    }\n    else {\n      this.move_counter += 1;\n    }\n  }\n\n  render(context) {\n    context.fillStyle = \"red\";\n    context.beginPath();\n    context.arc(this.x * 32 + 16, this.y * 32 + 16, 16, 0, 2*Math.PI);\n    context.fill();\n  }\n}\n\n\n//# sourceURL=webpack:///./src/planet_levels/DesertShackLevel/Alien.js?");

/***/ }),

/***/ "./src/planet_levels/DesertShackLevel/BrandonShaverPlanetLevel.js":
/*!************************************************************************!*\
  !*** ./src/planet_levels/DesertShackLevel/BrandonShaverPlanetLevel.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BrandonShaverPlanetLevel; });\n/* harmony import */ var _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BasePlanetLevel */ \"./src/planet_levels/BasePlanetLevel.js\");\n/* harmony import */ var _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../PlanetTileset */ \"./src/PlanetTileset.js\");\n/* harmony import */ var _Laser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Laser */ \"./src/planet_levels/DesertShackLevel/Laser.js\");\n/* harmony import */ var _Alien__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Alien */ \"./src/planet_levels/DesertShackLevel/Alien.js\");\n// Class repo located at: https://github.com/CIS580/space-raiders\n\n\n\n\n\n\n\n/**\n * Example SamplePlanetLevel which extends the base planet class functionality.\n * ** DO NOT MODIFY THIS CLASS. **\n *\n * To start your own planet, copy this file and rename the class to your own level name, then customize the various\n * methods to tailor it to your game.\n */\nclass BrandonShaverPlanetLevel extends _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n  /**\n   * Called when the level is being created.\n   * Be sure to call super() first (before anything else) to ensure the basic planet structure is in place.\n   */\n  constructor() {\n    super();\n\n    this.playerSpawnX = 10;\n    this.playerSpawnY = 10;\n    this.playerSpawnFaceDirection = 1;\n\n    this.bullets = [];\n    this.aliens = [];\n    this.aliens.push(new _Alien__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, 1, 1, 1));\n\n    // This loads your own tileset created from Tiled.\n    // You'll need the tileset.json, tilemap.json, and image.png. Look at the PlanetTileset class for more details.\n\n    // First two arguments (tileset and tilemap) are relative to the current folder (wherever this file is).\n    // Third argument (image) is relative to the dist folder.\n    this.tileset = new _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/DesertShackLevel/tileset.json */ \"./dist/resources/planet_tilesets/DesertShackLevel/tileset.json\"),\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/DesertShackLevel/tilemap.json */ \"./dist/resources/planet_tilesets/DesertShackLevel/tilemap.json\"),\n      \"resources/planet_tilesets/DesertShackLevel/Desert.png\");\n\n    this.icon = new Image(32, 32);  // Could be taken from your tileset, this is just a sample blank image.\n    this.name = \"Desert 1 Level\";\n  }\n\n  /** @method\n   * Called when the player interacts with a tile.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the interacted tile (in front of player).\n   * @param y Y grid coordinate of the interacted tile (in front of player).\n   */\n  playerInteracted(player, x, y) {\n    console.log(\"Player interacted with \" + x + \",\" + y + \".\");\n\n    let tile_id = this.tileset.getTile(x, y).id;\n\n    // press the button\n    if( tile_id == 10 ) {\n      this.tileset.setTileId(x,y,0,11);\n      this.tileset.setTileId(47,56,0,12); // put flower into world\n    }\n    // unpress the button\n    else if ( tile_id == 11 ) {\n      this.tileset.setTileId(x,y,0,10);\n      this.tileset.setTileId(47,56,0,6); // take flower out of world\n    }\n    // collect the flower\n    else if ( tile_id == 12 ) {\n      this.tileset.setTileId(x,y,0,6); // take flower out of world\n      // TODO: set world to finished\n    }\n  }\n\n  /**\n   * Called when the player moves.\n   * @param player Representation of the player.\n   */\n  playerMoved(player) {\n    console.log(\"Player at \" + player.x + \",\" + player.y);\n  }\n\n  /**\n   * Called when the player fires a weapon.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the tile the player fires into (in front of player).\n   * @param y Y grid coordinate of the tile the player fires into (in front of player).\n   */\n  playerFired(player, x, y) {\n    console.log(\"Player fired at \" + x + \",\" + y);\n\n    this.bullets.push(new _Laser__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, x, y, player.faceDirection));\n  }\n\n  /**\n   * Called when the player attempts to move into tile at the given coordinates.\n   * @param x The X coordinate of the attempted move.\n   * @param y The Y coordinate of the attempted move.\n   * @return True if the player may pass, false if the requested tile is \"blocked\".\n   */\n  tilePassable(x, y) {\n    return this.tileset.getTile(x, y)[\"passable\"] === true;\n  }\n\n  resolveBulletCollisions() {\n    // NOTE: this is a very messy, very slow function\n    let i,j,bullet,alien = 0;\n    for( i = 0; i < this.bullets.length; i++ ) {\n      bullet = this.bullets[i];\n\n      for ( j = 0; j < this.aliens.length; j++ ) {\n        alien = this.aliens[j];\n\n        if( alien.x == bullet.x ) {\n          if( alien.y == bullet.y ) {\n            this.bullets.splice( this.bullets.indexOf( bullet ), 1 );\n            this.aliens.splice( this.aliens.indexOf( alien ), 1 );\n          }\n        }\n      }\n    }\n  }\n\n  /** @method\n   * Update any entities within this planet level, including the player.\n   * @param {DOMHighResTimeStamp} elaspedTime - the amount of time elapsed this frame\n   * @param {Input} input - the input from this and the prior frame\n   * @param {Game} game - the game object\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  update(elaspedTime, input, game, player) {\n    player.update(elaspedTime, input, game);\n\n    this.bullets.forEach(function(object)\n    {\n      object.update();\n    });\n\n    this.aliens.forEach(function(object)\n    {\n      object.update();\n    });\n\n    this.resolveBulletCollisions();\n  }\n\n  /** @method\n   * Render the tileset, the player, and any other custom entities to the provided context.\n   * Draw here as if your visible grid is infinite, scrolling within a viewport is done by the PlanetLevelManager.\n   * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n   * @param {CanvasRenderingContext2D} context - the rendering context\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  render(elapsedTime, context, player) {\n    this.tileset.render(elapsedTime, context);\n    player.render(elapsedTime, context);\n\n    this.bullets.forEach(function(object)\n    {\n      object.render(context);\n    });\n\n    this.aliens.forEach(function(object)\n    {\n      object.render(context);\n    });\n  }\n}\n\n\n//# sourceURL=webpack:///./src/planet_levels/DesertShackLevel/BrandonShaverPlanetLevel.js?");

/***/ }),

/***/ "./src/planet_levels/DesertShackLevel/Laser.js":
/*!*****************************************************!*\
  !*** ./src/planet_levels/DesertShackLevel/Laser.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Laser; });\nclass Laser {\n\n  constructor(level, x, y, direction)\n  {\n    this.level = level;\n    this.x = x;\n    this.y = y;\n    this.direction = direction;\n\n    this.move_delay = 5;\n    this.move_counter = 0;\n    this.max_distance = 5;\n    this.distance_traveled = 0;\n    this.living = true;\n  }\n\n  update()\n  {\n    if( this.move_counter >= this.move_delay )\n    {\n      this.move_counter = 0;\n\n      if (this.direction == 0) // moving North\n      {\n        if(this.level.tilePassable(this.x, this.y - 1)) {\n          this.y--;\n          this.distance_traveled++;\n        }\n        else {\n          this.living = false;\n        }\n      }\n      else if (this.direction == 1) // moving West\n      {\n        if(this.level.tilePassable(this.x - 1, this.y)) {\n          this.x--;\n          this.distance_traveled++;\n        }\n        else {\n          this.living = false;\n        }\n      }\n      else if (this.direction == 2) // moving South\n      {\n        if(this.level.tilePassable(this.x, this.y + 1)) {\n          this.y++;\n          this.distance_traveled++;\n        }\n        else {\n          this.living = false;\n        }\n      }\n      else if (this.direction == 3) // moving East\n      {\n        if(this.level.tilePassable(this.x + 1, this.y)) {\n          this.x++;\n          this.distance_traveled++;\n        }\n        else {\n          this.living = false;\n        }\n      }\n    }\n    else {\n      this.move_counter += 1;\n    }\n\n    if (this.distance_traveled > this.max_distance)\n      this.living = false;\n  }\n\n  render(context) {\n    context.fillStyle = \"red\";\n    context.beginPath();\n    context.arc(this.x * 32 + 16, this.y * 32 + 16, 2, 0, 2*Math.PI);\n    context.fill();\n  }\n}\n\n\n//# sourceURL=webpack:///./src/planet_levels/DesertShackLevel/Laser.js?");

/***/ }),

/***/ "./src/planet_levels/IceRockLevel/IceRockLevel.js":
/*!********************************************************!*\
  !*** ./src/planet_levels/IceRockLevel/IceRockLevel.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IceRockLevel; });\n/* harmony import */ var _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BasePlanetLevel */ \"./src/planet_levels/BasePlanetLevel.js\");\n/* harmony import */ var _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../PlanetTileset */ \"./src/PlanetTileset.js\");\n\n\n\nclass IceRockLevel extends _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n  /**\n   * Called when the level is being created.\n   * Be sure to call super() first (before anything else) to ensure the basic planet structure is in place.\n   */\n  constructor() {\n    super();\n\n    this.sw = [ //Switches\n      {\n        sx: 27,\n        sy: 23,\n        ix: 25,\n        iy: 23,\n        p: false\n      }, {\n        sx: 14,\n        sy: 26,\n        ix: 13,\n        iy: 28,\n        p: false\n      }, {\n        sx: 12,\n        sy: 26,\n        ix: 11,\n        iy: 28,\n        p: false\n      }, {\n        sx: 12,\n        sy: 30,\n        ix: 10,\n        iy: 28,\n        p: false\n      },\n      {\n        sx: 1,\n        sy: 30,\n        ix: 3,\n        iy: 25,\n        p: false\n      }, {\n        sx: 1,\n        sy: 26,\n        ix: 3,\n        iy: 24,\n        p: false\n      }, {\n        sx: 18,\n        sy: 7,\n        ix: 17,\n        iy: 5,\n        p: false\n      }, {\n        sx: 17,\n        sy: 10,\n        ix: 18,\n        iy: 12,\n        p: true\n      }, {\n        sx: 17,\n        sy: 21,\n        ix: 28,\n        iy: 11,\n        p: false\n      }\n    ];\n    this.playerSpawnX = 29;\n    this.playerSpawnY = 31;\n    this.playerSpawnFaceDirection = 1;\n    this.sliding = 0; //0=not sliding, 1=right, 2=up, 3=left, 4=down, else=und\n    this.rockMoving = 0 //0=not sliding, 1=right, 2=up, 3=left, 4=down, else=und\n    this.slideSteps = 0; //steps of sliding (not elapsedTime based)\n    this.totalSteps = 8;\n\n    // This loads your own tileset created from Tiled.\n    // You'll need the tileset.json, tilemap.json, and image.png. Look at the PlanetTileset class for more details.\n\n    // First two arguments (tileset and tilemap) are relative to the current folder (wherever this file is).\n    // Third argument (image) is relative to the dist folder.\n    this.tileset = new _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/IceRockLevel/myTileset.json */ \"./dist/resources/planet_tilesets/IceRockLevel/myTileset.json\"),\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/IceRockLevel/puzzleRoomR.json */ \"./dist/resources/planet_tilesets/IceRockLevel/puzzleRoomR.json\"),\n      \"resources/planet_tilesets/IceRockLevel/tiles.png\");\n\n    this.icon = new Image(); // Could be taken from your tileset, this is just a sample blank image.\n    this.icon.src = \"resources/planet_tilesets/IceRockLevel/IcicleBadge.png\"\n    this.name = \"Ice Rock Level\";\n\n\n\n    this.message = [];\n    this.message.push('Lost in a cave, you find yourself in a room filled with... puzzles?');\n    this.message.push('Use [F] to shove boulders, press [R] to give up (or to reset I  guess).');\n    this.message.push('Good Luck!');\n\n\n  }\n\n\n\n\n  shoveRock(player, rX, rY) { //0=up, 1=left, 2=down, 3=right\n    var nextTile, nX = rX,\n      nY = rY;\n    this.rockMoving = player.faceDirection + 1;\n    do {\n      switch (this.rockMoving) {\n        case 1:\n          nextTile = this.tileset.getTile(rX, rY - 1);\n          nY--;\n          break;\n        case 2:\n          nextTile = this.tileset.getTile(rX - 1, rY);\n          nX--;\n          break;\n        case 3:\n          nextTile = this.tileset.getTile(rX, rY + 1);\n          nY++;\n          break;\n        case 4:\n          nextTile = this.tileset.getTile(rX + 1, rY);\n          nX++;\n          break;\n      }\n      if (nextTile[\"passable\"]) {\n        this.tileset.setTileId(rX, rY, 1, -1);\n        this.tileset.setTileId(nX, nY, 1, 32);\n      }\n      rX = nX;\n      rY = nY;\n    }\n    while (nextTile[\"slippery\"]) //Push boulder\n    this.rockMoving = 0;\n    this.updateSwitches();\n\n  }\n\n  updateSwitches() {\n    for (var i = 0; i < this.sw.length; i++) {\n      if (this.tileset.getTile(this.sw[i].sx, this.sw[i].sy).id === 32) { //if boulder is on this.switch\n        this.tileset.setTileId(this.sw[i].ix, this.sw[i].iy, 1, -1); //make icicle go away\n        if (i === 7) {\n          this.tileset.setTileId(this.sw[i].ix, this.sw[i].iy, 1, 64); //make icicle come back\n        }\n      } else { //this.switch not pressed\n        this.tileset.setTileId(this.sw[i].ix, this.sw[i].iy, 1, 64); //make icicle\n        if (i === 7) {\n          this.tileset.setTileId(this.sw[i].ix, this.sw[i].iy, 1, -1); //make icicle go away\n        }\n      }\n    }\n  }\n\n  /** @method\n   * Called when the player interacts with a tile.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the interacted tile (in front of player).\n   * @param y Y grid coordinate of the interacted tile (in front of player).\n   */\n  playerInteracted(player, x, y) {\n    var tile = this.tileset.getTile(x, y);\n    console.log(\"Player interacted with \" + x + \",\" + y);\n    var message = '';\n\n    if (this.message.length !== 0 && message !== '') this.message.length = 0;\n    else if (message === '') {\n      this.message.length = 0;\n    } else this.message.push(message);\n\n    if (this.room == 1) {\n      player.x = 12;\n      player.y = 7;\n    }\n    if (this.room == 2) {\n      player.x = 16;\n      player.y = 2;\n    }\n    if (x > 31 || y > 31 || isNaN(x)) {\n      return;\n    }\n    if (tile.id === 32) {\n      this.shoveRock(player, x, y);\n    }\n\n  }\n\n  /**\n   * Called when the player moves.\n   * @param player Representation of the player.\n   */\n  playerMoved(player) {\n    console.log(\"Player at \" + player.x + \",\" + player.y);\n    var tile = this.tileset.getTile(player.x, player.y);\n    var nextTile;\n    try {\n      switch (player.faceDirection) {\n        case 0: //up\n          nextTile = this.tileset.getTile(player.x, player.y - 1);\n          break;\n        case 1: //left\n          nextTile = this.tileset.getTile(player.x - 1, player.y);\n          break;\n        case 2: //down\n          nextTile = this.tileset.getTile(player.x, player.y + 1);\n          break;\n        case 3: //right\n          nextTile = this.tileset.getTile(player.x + 1, player.y);\n          break;\n      }\n\n\n      if (nextTile[\"passable\"]) {\n        this.sliding = tile[\"slippery\"];\n      }\n    } catch (err) {}\n    if (player.x === 16 && player.y === 2) {\n      this.finished = true;\n      this.success = true;\n    }\n\n  }\n\n  /**\n   * Called when the player fires a weapon.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the tile the player fires into (in front of player).\n   * @param y Y grid coordinate of the tile the player fires into (in front of player).\n   */\n  playerFired(player, x, y) {\n    console.log(\"Player fired at \" + x + \",\" + y);\n  }\n\n  /**\n   * Called when the player attempts to move into tile at the given coordinates.\n   * @param x The X coordinate of the attempted move.\n   * @param y The Y coordinate of the attempted move.\n   * @return True if the player may pass, false if the requested tile is \"blocked\".\n   */\n  tilePassable(x, y) {\n    if (this.message.length != 0 || this.sliding > 0 || this.rockMoving > 0 || (x === 21 && y === 1)) {\n      return false;\n    }\n    return this.tileset.getTile(x, y)[\"passable\"] === true;\n  }\n\n\n  renderTreasure(context) {\n    context.drawImage(this.icon, 21 * 32, 1 * 32);\n  }\n\n  playerSlide(player) {\n    this.slideSteps++;\n    var nextTile;\n    switch (player.faceDirection) {\n      case 0: //up\n        player.animationYOffset -= 1 * 32 / this.totalSteps;\n        nextTile = this.tileset.getTile(player.x, player.y - 2);\n        break;\n      case 1: //left\n        player.animationXOffset -= 1 * 32 / this.totalSteps;\n        nextTile = this.tileset.getTile(player.x - 2, player.y);\n        break;\n      case 2: //down\n        player.animationYOffset += 1 * 32 / this.totalSteps;\n        nextTile = this.tileset.getTile(player.x, player.y + 2);\n        break;\n      case 3: //right\n        player.animationXOffset += 1 * 32 / this.totalSteps;\n        nextTile = this.tileset.getTile(player.x + 2, player.y);\n        break;\n    }\n\n    player.x += Math.trunc(player.animationXOffset / 32);\n    player.y += Math.trunc(player.animationYOffset / 32);\n\n    player.animationXOffset %= 32;\n    player.animationYOffset %= 32;\n\n    if (this.slideSteps === this.totalSteps) {\n      this.slideSteps = 0;\n      if (!nextTile[\"passable\"] || !this.tileset.getTile(player.x, player.y)[\"slippery\"]) {\n        this.sliding = false;\n      }\n    }\n  }\n\n\n  /** @method\n   * Update any entities within this planet level, including the player.\n   * @param {DOMHighResTimeStamp} elaspedTime - the amount of time elapsed this frame\n   * @param {Input} input - the input from this and the prior frame\n   * @param {Game} game - the game object\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  update(elaspedTime, input, game, player) {\n    if (!this.sliding) {\n      player.update(elaspedTime, input, game);\n    }\n\n    if (this.sliding) {\n      this.playerSlide(player);\n    }\n    if (input.newState.r) {\n      this.finished = true;\n    }\n\n  }\n\n\n\n  /** @method\n   * Draw items using the static context (after scrolling).\n   * Only use this for drawing items on top of the screen.\n   * @param staticContext - The context to draw on top of the screen and scrolling elements.\n   */\n  renderStatic(elapsedTime, staticContext, player) {\n    //just copy and paste all of this\n    if (this.message.length > 0) {\n      staticContext.fillStyle = 'white';\n      staticContext.fillRect(0, 576, 1024, 256);\n      staticContext.fillStyle = 'black';\n      staticContext.font = '24px Arial';\n      for (var i = 0; i < this.message.length; i++) {\n        staticContext.fillText(this.message[i], 60, 630 + 40 * i);\n      }\n      staticContext.font = '20px Arial';\n      staticContext.fillText('Press [F] to start!', 650, 730);\n    } else {\n      staticContext.fillStyle = 'transparent';\n    }\n  }\n\n  /** @method\n   * Render the tileset, the player, and any other custom entities to the provided context.\n   * Draw here as if your visible grid is infinite, scrolling within a viewport is done by the PlanetLevelManager.\n   * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n   * @param {CanvasRenderingContext2D} context - the rendering context\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  render(elapsedTime, context, player) {\n    this.tileset.render(elapsedTime, context);\n    player.render(elapsedTime, context);\n    if (this.icon.complete) {\n      this.renderTreasure(context);\n    }\n    /*context.font = \"14px Arial\";\n    context.fillText(player.animationXOffset + \" & \" + player.animationYOffset, player.x * 32, player.y * 32 - 35);\n    context.fillText(player.x + \" & \" + player.y, player.x * 32, player.y * 32 - 20);*/\n\n\n  }\n}\n\n\n//# sourceURL=webpack:///./src/planet_levels/IceRockLevel/IceRockLevel.js?");

/***/ }),

/***/ "./src/planet_levels/IceWalkerLevel/IceWalkerLevel.js":
/*!************************************************************!*\
  !*** ./src/planet_levels/IceWalkerLevel/IceWalkerLevel.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IceWalkerLevel; });\n/* harmony import */ var _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BasePlanetLevel */ \"./src/planet_levels/BasePlanetLevel.js\");\n/* harmony import */ var _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../PlanetTileset */ \"./src/PlanetTileset.js\");\n\n\n\n/**\n * Ice Walker Level\n * By: Cale Benne\n */\nclass IceWalkerLevel extends _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n  /**\n   * Called when the level is being created.\n   * Be sure to call super() first (before anything else) to ensure the basic planet structure is in place.\n   */\n  constructor() {\n    super();\n\n    this.playerSpawnX = 28;\n    this.playerSpawnY = 2;\n    this.playerSpawnFaceDirection = 1;\n    this.lastX = this.playerSpawnX;\n    this.lastY = this.playerSpawnY;\n\n    // This loads your own tileset created from Tiled.\n    // You'll need the tileset.json, tilemap.json, and image.png. Look at the PlanetTileset class for more details.\n\n    // First two arguments (tileset and tilemap) are relative to the current folder (wherever this file is).\n    // Third argument (image) is relative to the dist folder.\n    this.tileset = new _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/ice_walker_level/tiles.json */ \"./dist/resources/planet_tilesets/ice_walker_level/tiles.json\"),\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/ice_walker_level/room_1.json */ \"./dist/resources/planet_tilesets/ice_walker_level/room_1.json\"),\n      \"resources/planet_tilesets/ice_walker_level/tiles.png\");\n\n    this.icon = new Image(32, 32);  // Could be taken from your tileset, this is just a sample blank image.\n    this.name = \"Sample Planet Level\";\n\n    this.solve_tiles1 = [\n      {sx: 26, sy: 5},{sx: 27, sy: 5},{sx: 28, sy: 5},\n      {sx: 24, sy: 6},{sx: 25, sy: 6},{sx: 26, sy: 6},\n      {sx: 27, sy: 6},{sx: 28, sy: 6},{sx: 24, sy: 7},\n      {sx: 25, sy: 7},{sx: 26, sy: 7},{sx: 27, sy: 7},\n      {sx: 24, sy: 8},{sx: 25, sy: 8},{sx: 26, sy: 8},\n      {sx: 27, sy: 8},{sx: 24, sy: 9},{sx: 25, sy: 9},\n      {sx: 26, sy: 9},{sx: 27, sy: 9},{sx: 24, sy: 10},\n      {sx: 25, sy: 10},{sx: 24, sy: 11},{sx: 25, sy: 11}\n    ];\n    this.solve_tiles2 = [\n      {sx: 9, sy: 11},{sx: 10, sy: 11},{sx: 11, sy: 11},{sx: 12, sy: 11},{sx: 13, sy: 11},{sx: 14, sy: 11},{sx: 15, sy: 11},{sx: 16, sy: 11},\n      {sx: 8, sy: 12},{sx: 9, sy: 12},{sx: 10, sy: 12},{sx: 11, sy: 12},{sx: 12, sy: 12},\n      {sx: 13, sy: 12},{sx: 14, sy: 12},{sx: 15, sy: 12},{sx: 16, sy: 12},{sx: 17, sy: 12},\n      {sx: 8, sy: 13},{sx: 9, sy: 13},{sx: 10, sy: 13},{sx: 11, sy: 13},{sx: 12, sy: 13},\n      {sx: 13, sy: 13},{sx: 14, sy: 13},{sx: 15, sy: 13},{sx: 16, sy: 13},{sx: 17, sy: 13},\n      {sx: 9, sy: 14},{sx: 10, sy: 14},{sx: 11, sy: 14},{sx: 12, sy: 14},{sx: 13, sy: 14},{sx: 14, sy: 14},{sx: 15, sy: 14},{sx: 16, sy: 14}\n    ]\n    this.room = 1;\n    this.lighting_tiles = [\n      {sx: 23, sy: 7, dur: 0, final: 39},\n      {sx: 14, sy: 11, dur: 0, final: 39},\n      {sx: 13, sy: 12, dur: 0, final: 39},\n      {sx: 17, sy: 7, dur: 0, final: 39},\n      {sx: 17, sy: 12, dur: 0, final: 39},\n      {sx: 8, sy: 6, dur: 0, final: 39},\n      {sx: 8, sy: 7, dur: 0, final: 39},\n      {sx: 8, sy: 8, dur: 0, final: 39},\n      {sx: 7, sy: 7, dur: 0, final: 39},\n      {sx: 9, sy: 7, dur: 0, final: 39},\n      {sx: 13, sy: 6, dur: 0, final: 39}\n    ]\n    this.gatetime = 0;\n    this.roomtutorial = 0;\n    this.treasure = 0;\n  }\n\n  /** @method\n   * Called when the player interacts with a tile.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the interacted tile (in front of player).\n   * @param y Y grid coordinate of the interacted tile (in front of player).\n   */\n  playerInteracted(player, x, y) {\n    console.log(\"Player interacted with \" + x + \",\" + y);\n    if (this.room == 1) {\n      player.x = 12;\n      player.y = 7;\n    }\n    if (this.room == 2) {\n      player.x = 16;\n      player.y = 2;\n    }\n    \n  }\n\n  /**\n   * Called when the player moves.\n   * @param player Representation of the player.\n   */\n  playerMoved(player) {\n    console.log(\"Player at \" + player.x + \",\" + player.y);\n  }\n\n  /**\n   * Called when the player fires a weapon.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the tile the player fires into (in front of player).\n   * @param y Y grid coordinate of the tile the player fires into (in front of player).\n   */\n  playerFired(player, x, y) {\n    console.log(\"Player fired at \" + x + \",\" + y);\n  }\n\n  /**\n   * Called when the player attempts to move into tile at the given coordinates.\n   * @param x The X coordinate of the attempted move.\n   * @param y The Y coordinate of the attempted move.\n   * @return True if the player may pass, false if the requested tile is \"blocked\".\n   */\n  tilePassable(x, y) {\n    return this.tileset.getTile(x, y)[\"passable\"] === true;\n  }\n  checkPuzzles() {\n    var solved = true;\n    for (var i = 0; i < this.solve_tiles1.length; i++) {\n      var point = this.solve_tiles1[i];\n      if(!this.tileset.getTile(point.sx,point.sy)[\"cracked\"]) {\n        solved = false;\n      }\n    }\n    if (solved) {\n      this.tileset.setTileId(20,12,1,51);\n      this.tileset.setTileId(21,12,1,51);\n    }\n    var solved = true;\n    for (var i = 0; i < this.solve_tiles2.length; i++) {\n      var point = this.solve_tiles2[i];\n      if(!this.tileset.getTile(point.sx,point.sy)[\"cracked\"]) {\n        solved = false;\n      }\n    }\n    if (solved) {\n      this.tileset.setTileId(15,9,1,51);\n    }\n  }\n\n  checkLights() {\n    this.all_lights = true;\n    for (var i = 0; i < this.tileset.width; i++) {\n      for (var j = 0; j < this.tileset.height; j++) {\n        var tile = this.tileset.getTile(i,j);\n        if (tile[\"lightable\"] === true && tile[\"lighted\"] === false) {\n          this.all_lights = false;\n        }\n      }\n    }\n    if (this.all_lights) {\n      var newid = 1;\n      this.tileset.setTileId(14,3,1,newid);\n      this.tileset.setTileId(15,3,1,newid);\n      this.tileset.setTileId(16,3,1,newid);\n      this.tileset.setTileId(17,3,1,newid);\n    }\n  }\n  updateIce(player) {\n    var tile = this.tileset.getTile(player.x,player.y);\n    //Don't do anything if the player hasn't moved.\n    if (this.lastX == player.x && this.lastY == player.y) {\n      return;\n    }\n    //Check if the player has moved onto ice.\n    if (tile && tile[\"ice\"] === true && !tile[\"cracked\"]) {\n      var id = 17 + ((player.y % player.x) % 2);\n      this.tileset.setTileId(player.x,player.y,1,id);\n      this.checkPuzzles();\n    }\n    //If the ice is already cracked, the player will 'fall' and reset.\n    else if (tile && tile[\"ice\"] === true && tile[\"cracked\"] === true) {\n      this.tileset.setTileId(player.x,player.y,1,19);\n      player.movePlayerToSpawn();\n    }\n    //If the player hits the button, all ice tiles are reset.\n    else if (tile && tile.id == 33) {\n      for (var i = 0; i < this.tileset.width; i++) {\n        for (var j = 0; j < this.tileset.height; j++) {\n          if (this.tileset.getTile(i,j)[\"ice\"] === true) {\n            this.tileset.setTileId(i,j,1,15);\n          }\n        }\n      }\n    }\n  }\n\n  updateLights(player,elapsedTime) {\n    var tile = this.tileset.getTile(player.x, player.y);\n    if (this.lastX == player.x && this.lastY == player.y) {\n      return;\n    }\n    if (tile && tile[\"lightable\"] == true) {\n      //Update chktile tile\n      var chktile = this.tileset.getTile(player.x-1,player.y);\n      if (chktile[\"lightable\"]) {\n        var newid = chktile[\"lighted\"] ? 15 : 39;\n        this.lighting_tiles.push({sx: player.x-1,sy: player.y, dur: 0, final: newid});\n      } \n      //Update right tile\n      var chktile = this.tileset.getTile(player.x+1,player.y);\n      if (chktile[\"lightable\"]) {\n        var newid = chktile[\"lighted\"] ? 15 : 39;\n        this.lighting_tiles.push({sx: player.x+1,sy: player.y, dur: 0, final: newid});\n      } \n      //Update top tile\n      var chktile = this.tileset.getTile(player.x,player.y-1);\n      if (chktile[\"lightable\"]) {\n        var newid = chktile[\"lighted\"] ? 15 : 39;\n        this.lighting_tiles.push({sx: player.x,sy: player.y-1, dur: 0, final: newid});\n      } \n      //Update bottom tile\n      var chktile = this.tileset.getTile(player.x,player.y+1);\n      if (chktile[\"lightable\"]) {\n        var newid = chktile[\"lighted\"] ? 15 : 39;\n        this.lighting_tiles.push({sx: player.x,sy: player.y+1, dur: 0, final: newid});\n      } \n      //Update player tile\n      var chktile = this.tileset.getTile(player.x,player.y);\n      if (chktile[\"lightable\"]) {\n        var newid = chktile[\"lighted\"] ? 15 : 39;\n        this.lighting_tiles.push({sx: player.x,sy: player.y, dur: 0, final: newid});\n        this.tileset.setTileId(player.x, player.y,1,newid);\n      } \n    }\n    else if (tile && tile.id == 33) {\n      for (var i = 0; i < this.tileset.width; i++) {\n        for (var j = 0; j < this.tileset.height; j++) {\n          if (this.tileset.getTile(i,j)[\"lightable\"] === true) {\n            this.tileset.setTileId(i,j,1,15);\n          }\n        }\n      }\n      this.lighting_tiles = [\n        {sx: 23, sy: 7, dur: 0, final: 39},\n        {sx: 14, sy: 11, dur: 0, final: 39},\n        {sx: 13, sy: 12, dur: 0, final: 39},\n        {sx: 17, sy: 7, dur: 0, final: 39},\n        {sx: 17, sy: 12, dur: 0, final: 39},\n        {sx: 8, sy: 6, dur: 0, final: 39},\n        {sx: 8, sy: 7, dur: 0, final: 39},\n        {sx: 8, sy: 8, dur: 0, final: 39},\n        {sx: 7, sy: 7, dur: 0, final: 39},\n        {sx: 9, sy: 7, dur: 0, final: 39},\n        {sx: 13, sy: 6, dur: 0, final: 39}\n      ]\n    }\n    this.checkLights();\n    \n  }\n\n\n  updateRoom(player) {\n    if (this.room == 1 && player.x == 11 && player.y == 6) {\n      this.room = 2;\n      this.tileset.loadNewTilemap(__webpack_require__(/*! ../../../dist/resources/planet_tilesets/ice_walker_level/room_2.json */ \"./dist/resources/planet_tilesets/ice_walker_level/room_2.json\"));\n      this.playerSpawnX = 15;\n      this.playerSpawnY = 14;\n      player.movePlayerToSpawn();\n      this.roomtutorial = 0;\n    }\n    if (this.room == 2 && player.x == 16 && player.y == 14) {\n      this.room = 1;\n      this.tileset.loadNewTilemap(__webpack_require__(/*! ../../../dist/resources/planet_tilesets/ice_walker_level/room_1.json */ \"./dist/resources/planet_tilesets/ice_walker_level/room_1.json\"));\n      this.playerSpawnX = 28;\n      this.playerSpawnY = 2;\n      player.x = 11;\n      player.y = 7;\n    }\n    if (this.room == 2 && player.x == 16 && player.y == 1) {\n      this.room = 3;\n      this.tileset.loadNewTilemap(__webpack_require__(/*! ../../../dist/resources/planet_tilesets/ice_walker_level/room_3.json */ \"./dist/resources/planet_tilesets/ice_walker_level/room_3.json\"));\n      this.playerSpawnX = 15;\n      this.playerSpawnY = 11;\n      player.movePlayerToSpawn();\n      this.success = true;\n    }\n    if (this.room == 3 && player.x == 16 && player.y == 11) {\n      this.room = 2;\n      this.tileset.loadNewTilemap(__webpack_require__(/*! ../../../dist/resources/planet_tilesets/ice_walker_level/room_2.json */ \"./dist/resources/planet_tilesets/ice_walker_level/room_2.json\"));\n      this.playerSpawnX = 16;\n      this.playerSpawnY = 14;\n      player.x = 16;\n      player.y = 2;\n    }\n    if (this.room == 1 && player.x == 29 && player.y == 2) {\n      this.finished = true;\n    }\n  }\n  flicker(elapsedTime) {\n    for (var i = 0; i < this.lighting_tiles.length; i++) {\n      var light_tile = this.lighting_tiles[i];\n      if (light_tile.dur > 500) {\n        this.tileset.setTileId(light_tile.sx,light_tile.sy,1,light_tile.final);\n        this.lighting_tiles.splice(i,1);\n        i--;\n      } else {\n        var newid = this.tileset.getTile(light_tile.sx,light_tile.sy)[\"lighted\"] ? 15 : 39;\n        this.tileset.setTileId(light_tile.sx,light_tile.sy,1,newid);\n        this.lighting_tiles[i].dur += elapsedTime;\n      }\n    }\n    this.gatetime += elapsedTime;\n    if (this.gatetime > 200 && this.all_lights === false) {\n      this.gatetime = 0;\n      var newid = this.tileset.getTile(14,3).id == 52 ? 53 : 52;\n      this.tileset.setTileId(14,3,1,newid);\n      this.tileset.setTileId(15,3,1,newid);\n      this.tileset.setTileId(16,3,1,newid);\n      this.tileset.setTileId(17,3,1,newid);\n    }\n  }\n\n  renderTreasure(elapsedTime,context) {\n    this.treasure += elapsedTime;\n    this.treasureY = Math.max(6 - this.treasure*.002, 3);\n    this.tileset.drawTile(15, (this.treasureY),64,context);\n  }\n\n  /** @method\n   * Update any entities within this planet level, including the player.\n   * @param {DOMHighResTimeStamp} elaspedTime - the amount of time elapsed this frame\n   * @param {Input} input - the input from this and the prior frame\n   * @param {Game} game - the game object\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  update(elaspedTime, input, game, player) {\n    player.update(elaspedTime, input, game);\n    if (this.room == 1) {\n      this.updateIce(player);\n    }\n    if (this.room == 2) {\n      this.updateLights(player);\n      this.flicker(elaspedTime);\n    }\n    this.updateRoom(player);\n    this.lastX = player.x;\n    this.lastY = player.y;\n    this.roomtutorial += elaspedTime;\n  }\n  renderTutorial(elapsedTime, context) {\n    if (this.room == 1 && this.roomtutorial < 4000) {\n      context.fillStyle = \"rgba(0, 0, 0, 0.9)\";\n      context.strokeStyle = \"rgba(0, 0, 255, 1)\";\n      context.fillRect(256,160,550,100);\n      context.strokeRect(256,160,550,100);\n      context.fillStyle = \"white\";\n      context.strokeStyle = \"white\";\n      context.font = \"20px 'Courier New'\";\n      context.fillText(\"The ice is a bit thin here. Crack the ice,\",280, 200);\n      context.fillText(\" but don't fall through!\",350,230);\n    }\n    if (this.room == 2 && this.roomtutorial < 2000) {\n      context.fillStyle = \"rgba(0, 0, 0, 0.9)\";\n      context.strokeStyle = \"rgba(0, 0, 255, 1)\";\n      context.fillRect(256,160,550,100);\n      context.strokeRect(256,160,550,100);\n      context.fillStyle = \"white\";\n      context.strokeStyle = \"white\";\n      context.font = \"20px 'Courier New'\";\n      context.fillText(\"Get lit.\",430, 215);\n    }\n  }\n\n  /** @method\n   * Render the tileset, the player, and any other custom entities to the provided context.\n   * Draw here as if your visible grid is infinite, scrolling within a viewport is done by the PlanetLevelManager.\n   * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n   * @param {CanvasRenderingContext2D} context - the rendering context\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  render(elapsedTime, context, player) {\n    this.tileset.render(elapsedTime, context);\n    player.render(elapsedTime, context);\n    this.renderTutorial(elapsedTime, context);\n    if (this.treasure < 3000 && this.success) {\n      this.renderTreasure(elapsedTime,context);\n    }\n  }\n}\n\n//# sourceURL=webpack:///./src/planet_levels/IceWalkerLevel/IceWalkerLevel.js?");

/***/ }),

/***/ "./src/planet_levels/IceWireLevel/IceWires.js":
/*!****************************************************!*\
  !*** ./src/planet_levels/IceWireLevel/IceWires.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IceWireLevel; });\n/* harmony import */ var _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BasePlanetLevel */ \"./src/planet_levels/BasePlanetLevel.js\");\n/* harmony import */ var _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../PlanetTileset */ \"./src/PlanetTileset.js\");\n\n\nvar electricity = true;\nvar electricAnimationCounter = 0;\nvar wiresStart = false;\nvar gunPowderStart = false;\nvar tntset = 0;\n\n/**\n * Example SamplePlanetLevel which extends the base planet class functionality.\n * ** DO NOT MODIFY THIS CLASS. **\n *\n * To start your own planet, copy this file and rename the class to your own level name, then customize the various\n * methods to tailor it to your game.\n */\nclass IceWireLevel extends _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n  /**\n   * Called when the level is being created.\n   * Be sure to call super() first (before anything else) to ensure the basic planet structure is in place.\n   */\n  constructor() {\n    super();\n\n    this.playerSpawnX = 10;\n    this.playerSpawnY = 10;\n    this.playerSpawnFaceDirection = 1;\n\n\n    // This loads your own tileset created from Tiled.\n    // You'll need the tileset.json, tilemap.json, and image.png. Look at the PlanetTileset class for more details.\n\n    // First two arguments (tileset and tilemap) are relative to the current folder (wherever this file is).\n    // Third argument (image) is relative to the dist folder.\n    this.tileset = new _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/IceWireLevel/tileset.json */ \"./dist/resources/planet_tilesets/IceWireLevel/tileset.json\"),\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/IceWireLevel/tilemap.json */ \"./dist/resources/planet_tilesets/IceWireLevel/tilemap.json\"),\n      \"resources/planet_tilesets/IceWireLevel/tiles.png\");\n\n    this.icon = new Image(32, 32);  // Could be taken from your tileset, this is just a sample blank image.\n    this.name = \"IceWires\";\n  }\n\n  /** @method\n   * Called when the player interacts with a tile.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the interacted tile (in front of player).\n   * @param y Y grid coordinate of the interacted tile (in front of player).\n   */\n  playerInteracted(player, x, y) {\n    console.log(\"Player interacted with \" + x + \",\" + y);\n    if(this.map === undefined) {\n      this.map = 0;\n    }\n    this.map++;\n    this.map %= 3;\n    switch(this.map) {\n      case 0:\n        this.tileset.loadNewTilemap(__webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../../dist/resources/planet_tilesets/IceWirelevel/tilemap.json'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())));\n        break;\n    }\n    player.movePlayerToSpawn();\n  }\n\n  /**\n   * Called when the player moves.\n   * @param player Representation of the player.\n   */\n  playerMoved(player) {\n    console.log(\"Player at \" + player.x + \",\" + player.y);\n    this.wirerunCheck(player);\n    this.gunPowderCheck(player);\n    this.tntcheck(player);\n    this.finalBatteryCheck(player);\n    this.checkReset(player);\n  }\n\n  /**\n   * Called when the player fires a weapon.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the tile the player fires into (in front of player).\n   * @param y Y grid coordinate of the tile the player fires into (in front of player).\n   */\n  playerFired(player, x, y) {\n    console.log(\"Player fired at \" + x + \",\" + y);\n  }\n\n  /**\n   * Called when the player attempts to move into tile at the given coordinates.\n   * @param x The X coordinate of the attempted move.\n   * @param y The Y coordinate of the attempted move.\n   * @return True if the player may pass, false if the requested tile is \"blocked\".\n   */\n  tilePassable(x, y) {\n    return this.tileset.getTile(x, y)[\"passable\"] === true;\n  }\n\n  /** @method\n   * Update any entities within this planet level, including the player.\n   * @param {DOMHighResTimeStamp} elaspedTime - the amount of time elapsed this frame\n   * @param {Input} input - the input from this and the prior frame\n   * @param {Game} game - the game object\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  update(elaspedTime, input, game, player) {\n    //update electricity animations while on\n    this.electricityAnimations();\n    if(gunPowderStart == true)this.runGunPowder(player);\n    if(wiresStart == true)this.runWire(player);\n    player.update(elaspedTime, input, game);\n  }\n\n  //check if you are on reset button\n  checkReset(player){\n   if(player.x == 10 && player.y == 20){\n     this.clearField();\n   }\n  }\n\n  //check if player walks over wire kit\n  wirerunCheck(player){\n    if(player.x == 11 && player.y == 18){\n     wiresStart = true;\n   }\n  }\n  //check if player walks over gun powder kit\n  gunPowderCheck(player){\n    if(player.x == 12 && player.y == 19){\n     gunPowderStart = true;\n   }\n  }\n  //start dropping gunpowder\n  runGunPowder(player){\n  this.tileset.setTileId(player.x,player.y,0,66);\n  }\n  //start dropping wire\n  runWire(player){\n  this.tileset.setTileId(player.x,player.y,0,50);\n  }\n\n  //check final battery\n  finalBatteryCheck(player){\n    if(player.x == 30 && player.y == 16 && wiresStart == true){\n      this.tileset.setTileId(31,16,0,48);\n      //extend extendBridge\n      this.tileset.setTileId(200,0,0,51);\n      this.tileset.setTileId(199,0,0,51);\n      this.tileset.setTileId(198,0,0,51);\n      this.tileset.setTileId(230,0,0,51);\n      this.tileset.setTileId(231,0,0,51);\n      this.tileset.setTileId(232,0,0,51);\n      this.tileset.setTileId(262,0,0,51);\n      this.tileset.setTileId(263,0,0,51);\n      this.tileset.setTileId(264,0,0,51);\n      this.tileset.setTileId(168,0,0,51);\n      this.tileset.setTileId(167,0,0,51);\n      this.tileset.setTileId(166,0,0,51);\n      this.tileset.setTileId(134,0,0,51);\n      this.tileset.setTileId(135,0,0,51);\n      this.tileset.setTileId(136,0,0,51);\n      //turn off wires\n      wiresStart = false;\n    }\n  }\n\n  //check tnt puzzle\n  tntcheck(player){\n    if(player.x == 23 && player.y == 12){//set 6\n      tntset = 1;\n    }\n    if(player.x == 19 && player.y == 12 && tntset == 1){//set 5\n      tntset = 2;\n    }\n    if(player.x == 13 && player.y == 12 && tntset == 2){//set 4\n      tntset = 3;\n    }\n    if(player.x == 15 && player.y == 19 && tntset == 3){//set 3\n      tntset = 4;\n    }\n    if(player.x == 19 && player.y == 19 && tntset == 4){//set 2\n      tntset = 5;\n    }\n    if(player.x == 25 && player.y == 19 && tntset == 5){//set 1\n      tntset = 6;\n    }\n    //finally hit the switch to check answers\n    if(player.x == 11 && player.y == 21 && tntset == 6 && gunPowderStart == true){//set 1\n      //stop dropping gunpowder\n      gunPowderStart = false;\n      //pull down lever animation\n      this.tileset.setTileId(11,20,0,72);\n      this.detonateAnimation();\n\n\n      //unlock wires\n      this.tileset.setTileId(11,18,0,49);\n      //turn off electric gates\n      electricity = false;\n      electricAnimationCounter = 0;\n      this.tileset.setTileId(444,0,0,1);\n      this.tileset.setTileId(445,0,0,1);\n      this.tileset.setTileId(446,0,0,1);\n      this.tileset.setTileId(539,0,0,1);\n      this.tileset.setTileId(507,0,0,1);\n      this.tileset.setTileId(475,0,0,1);\n      this.tileset.setTileId(571,0,0,1);\n      this.tileset.setTileId(603,0,0,1);\n      this.tileset.setTileId(638,0,0,1);\n      this.tileset.setTileId(637,0,0,1);\n      this.tileset.setTileId(636,0,0,1);\n    }\n  }\n\n  clearField(){\n    for(var i = 0; i < 750; i++){\n      //clears gunPowder\n      if(this.tileset.getTile(i, 0).id == 66){\n        this.tileset.setTileId(i,0,0,1);\n      }\n      //clears wires\n      if(this.tileset.getTile(i, 0).id == 50){\n        this.tileset.setTileId(i,0,0,1);\n      }\n    }\n  }\n\n  electricityAnimations(){\n    //electric animations\n  if(electricity == true){electricAnimationCounter++;}\n  if(electricity == true){\n  if(electricAnimationCounter < 10){\n  this.tileset.setTileId(444,0,0,53);\n  this.tileset.setTileId(445,0,0,53);\n  this.tileset.setTileId(446,0,0,53);\n  this.tileset.setTileId(539,0,0,56);\n  this.tileset.setTileId(507,0,0,56);\n  this.tileset.setTileId(475,0,0,56);\n  this.tileset.setTileId(571,0,0,56);\n  this.tileset.setTileId(603,0,0,56);\n  this.tileset.setTileId(638,0,0,53);\n  this.tileset.setTileId(637,0,0,53);\n  this.tileset.setTileId(636,0,0,53);\n}\n if(electricAnimationCounter > 10){\n  this.tileset.setTileId(444,0,0,52);\n  this.tileset.setTileId(445,0,0,52);\n  this.tileset.setTileId(446,0,0,52);\n  this.tileset.setTileId(539,0,0,55);\n  this.tileset.setTileId(507,0,0,55);\n  this.tileset.setTileId(475,0,0,55);\n  this.tileset.setTileId(571,0,0,55);\n  this.tileset.setTileId(603,0,0,55);\n  this.tileset.setTileId(638,0,0,52);\n  this.tileset.setTileId(637,0,0,52);\n  this.tileset.setTileId(636,0,0,52);\n  }\n   if(electricAnimationCounter > 20){\n    this.tileset.setTileId(444,0,0,53);\n    this.tileset.setTileId(445,0,0,53);\n    this.tileset.setTileId(446,0,0,53);\n    this.tileset.setTileId(539,0,0,56);\n    this.tileset.setTileId(507,0,0,56);\n    this.tileset.setTileId(475,0,0,56);\n    this.tileset.setTileId(571,0,0,56);\n    this.tileset.setTileId(603,0,0,56);\n    this.tileset.setTileId(638,0,0,52);\n    this.tileset.setTileId(637,0,0,53);\n    this.tileset.setTileId(636,0,0,53);\n    electricAnimationCounter = 0;\n  }\n}\n}\n\ndetonateAnimation(){\n  for(var i = 300; i < 750; i++){\n    //initial blast\n    if(this.tileset.getTile(i, 0).id == 66){\n      this.tileset.setTileId(i,0,0,36);\n    }\n    if(this.tileset.getTile(i, 0).id == 68){\n      this.tileset.setTileId(i,0,0,1);\n    }\n    if(this.tileset.getTile(i, 0).id == 69){\n      this.tileset.setTileId(i,0,0,1);\n    }\n    if(this.tileset.getTile(i, 0).id == 48){\n      this.tileset.setTileId(i,0,0,54);\n    }\n\n    if(this.tileset.getTile(i, 0).id == 36){\n      this.tileset.setTileId(i,0,0,1);\n    }\n}\n\n\n}\n\ngetRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\n\n\n  /** @method\n   * Render the tileset, the player, and any other custom entities to the provided context.\n   * Draw here as if your visible grid is infinite, scrolling within a viewport is done by the PlanetLevelManager.\n   * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n   * @param {CanvasRenderingContext2D} context - the rendering context\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  render(elapsedTime, context, player) {\n    this.tileset.render(elapsedTime, context);\n    player.render(elapsedTime, context);\n  }\n}\n\n\n//# sourceURL=webpack:///./src/planet_levels/IceWireLevel/IceWires.js?");

/***/ }),

/***/ "./src/planet_levels/JungleArenaLevel/ArenaEnemy.js":
/*!**********************************************************!*\
  !*** ./src/planet_levels/JungleArenaLevel/ArenaEnemy.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ArenaEnemy; });\n/* harmony import */ var _FireBall__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FireBall */ \"./src/planet_levels/JungleArenaLevel/FireBall.js\");\n\n\n/**\n * Class for the enemies that are fought in the jungle arena\n */\nclass ArenaEnemy{\n\n  /**\n   * Create a new enemy at the given x and y position\n   */\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.direction = 'S';\n    this.fireballs = [];\n    this.spritesheet = new Image();\n    this.sprites = [];\n    this.spawning = true;\n    this.explosionX = 0;\n    this.explosionY = 30;\n    this.explosionIncreasing = true;\n    this.alive = true;\n    this.dying = false;\n    this.dead = false\n    this.spritesheet.src = \"resources/planet_tilesets/jungle_arena_level/jungletileset.png\";\n    this.sprites.push({\n        image: this.spritesheet,\n        sx: 9 * 32,\n        sy: 32\n      });\n\n    for(var i = 0; i < 3; i++) {\n        var sprite = {\n          image: this.spritesheet,\n          sx: (i % 10) * 32,\n          sy: 64\n        }\n        this.sprites.push(sprite);\n      }\n  }\n\n\n  /** @method\n   * Update the enemies: determine what direction to face, whether to fire or not, and update ellipse size for the spawn/death \"explosion\"\n   * @param {DOMHighResTimeStamp} elaspedTime - the amount of time elapsed this frame\n   * @param {tileset} tileset - the tileset\n   * @param {PlanetPlayer} player - representation of the player\n   * @param {number} shieldTime - the amount of time the player's shield has been active\n   */\n  update(elapsedTime, player, tileset, shieldTime) {\n    if(this.spawning || this.dying){\n        if(this.explosionIncreasing){\n            if(this.explosionX >= 20){\n                this.explosionIncreasing = false\n            }\n            else{\n               this.explosionX += elapsedTime * 0.10; \n            }\n        }\n        else{\n            this.explosionX -= elapsedTime * 0.10; \n            if(this.explosionX <= 10){\n                this.spawning = false;\n                if(this.dying){\n                    this.dying = false;\n                    this.dead = true;\n                }\n                this.explosionIncreasing = true;\n                this.explosionX = 0;\n            }\n        }\n    }\n    else{\n        var shootChance = Math.floor(Math.random() * 101);\n        var xDiff = Math.abs(player.x - this.x);\n        var yDiff = Math.abs(player.y - this.y);\n\n        if(xDiff > yDiff && player.x < this.x){\n            this.direction = \"W\";\n        }\n        else if(xDiff > yDiff && player.x > this.x){\n            this.direction = \"E\";\n        }\n        else if(xDiff < yDiff && player.y < this.y){\n            this.direction = \"N\";\n        }\n        else if(xDiff < yDiff && player.y > this.y){\n            this.direction = \"S\";\n        }\n        if(shootChance >=99 && this.fireballs.length < 1){\n            this.fireballs.push(new _FireBall__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.x, this.y, player.x, player.y));\n        } \n    }\n    this.fireballs.forEach((fireball, index) => {\n        var fireballXRounded = Math.round(fireball.x + fireball.velocityX * 0.25);\n        var fireballYRounded = Math.round(fireball.y + fireball.velocityY * 0.25);\n        if(!isNaN(fireballXRounded) && !isNaN(fireballYRounded)){\n            if(tileset.getTile(fireballXRounded, fireballYRounded)[\"passable\"] === false){\n                this.fireballs.splice(index, 1);\n            }\n            else{\n                if(shieldTime > 0){\n                    if(fireballXRounded === player.x || fireballXRounded === player.x + 1 || fireballXRounded === player.x - 1){\n                    if(fireballYRounded === player.y || fireballYRounded === player.y + 1 || fireballYRounded === player.y - 1){\n                        if(shieldTime < 300){\n                            fireball.reflect();\n                        }\n                        else{\n                            this.fireballs.splice(index, 1);\n                        }\n                    }\n                    }\n                }\n                fireball.update(elapsedTime, player);\n            }\n        }\n        \n    });\n  }\n\n  /** @method\n   * Render the enemy depending on the direction it should be facing and whether it is spawing/dying or not\n   * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n   * @param {CanvasRenderingContext2D} context - the rendering context\n   */\n  render(elapsedTime, context) {\n    context.beginPath();\n    if(this.spawning){\n        context.fillStyle = \"#ff7cc4\";\n        context.ellipse(this.x*32+15, this.y*32+10, this.explosionX, this.explosionY, 0, 0, 2 * Math.PI);\n        context.fill();\n    }\n    else if(this.dying){\n        context.fillStyle = \"#70e4ff\";\n        context.ellipse(this.x*32, this.y*32, this.explosionX, this.explosionY, 0, 0, 2 * Math.PI);\n        context.fill();\n    }\n    else{\n        switch(this.direction) {\n            case 'N':\n                context.drawImage(\n                  this.spritesheet,\n                  this.sprites[3].sx, this.sprites[3].sy, 32, 32, \n                  this.x *32, this.y*32, 32, 32\n                );\n                break;\n            case 'E':\n                context.drawImage(\n                  this.spritesheet,\n                  this.sprites[1].sx, this.sprites[1].sy, 32, 32,\n                  this.x *32, this.y*32, 32, 32 \n                );\n                break;\n            case 'W':\n                context.drawImage(\n                  this.spritesheet,\n                  this.sprites[0].sx, this.sprites[0].sy, 32, 32,\n                  this.x *32, this.y*32, 32, 32\n                );\n                break;\n            default:\n                context.drawImage(\n                  this.spritesheet,\n                  this.sprites[2].sx, this.sprites[2].sy, 32, 32,\n                  this.x *32, this.y*32, 32, 32\n                );\n          }\n    }\n    this.fireballs.forEach(fireball => fireball.render(elapsedTime, context));   \n  }\n}\n\n//# sourceURL=webpack:///./src/planet_levels/JungleArenaLevel/ArenaEnemy.js?");

/***/ }),

/***/ "./src/planet_levels/JungleArenaLevel/FireBall.js":
/*!********************************************************!*\
  !*** ./src/planet_levels/JungleArenaLevel/FireBall.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return FireBall; });\n/**\n * Class for the projectiles that the enemies fire in the jungle arena level\n */\nclass FireBall{\n\n    /**\n     * create a fireball at the given startx and starty that is directed toward the given targetx and targety\n     */\n    constructor(startx, starty, targetx, targety) {\n        this.x = startx;\n        this.y = starty;\n\n        var dx = (targetx - startx);\n        var dy = (targety - starty);\n        var mag = Math.sqrt(dx * dx + dy * dy);\n\n        this.velocityX = (dx / mag) * 1;\n        this.velocityY = (dy / mag) * 1;\n        this.reflected = false;\n      \n    }\n\n    /** @method\n     * Set reflected to true and reverse the direction of the projectile\n     */\n    reflect() {\n      this.reflected = true;\n      this.velocityX = this.velocityX*(-1);\n      this.velocityY = this.velocityY*(-1);\n    }\n  \n    /** @method\n     * Update the projectile's position, projectile moves faster if it has been reflected\n     * @param {DOMHighResTimeStamp} elaspedTime - the amount of time elapsed this frame\n     * @param {PlanetPlayer} player - representation of the player\n     */\n    update(elaspedTime, player) {\n      if(!this.reflected){\n        this.x += this.velocityX * 0.10;\n        this.y += this.velocityY * 0.10;\n      }\n      else{\n        this.x += this.velocityX * 0.50;\n        this.y += this.velocityY * 0.50;\n      }\n      \n    }\n  \n    /** @method\n     * Render the projectile, color depends on whether it has been reflected or not\n     * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n     * @param {CanvasRenderingContext2D} context - the rendering context\n     */\n    render(elapsedTime, context) {\n        if(!this.reflected){\n            context.fillStyle = \"#ff7cc4\";\n        }\n        else{\n            context.fillStyle = \"#70e4ff\";\n        }\n        context.beginPath();\n        context.arc(this.x * 32 + 16, this.y * 32 + 16, 16, 0, 2*Math.PI);\n        context.fill();  \n    }\n  }\n\n//# sourceURL=webpack:///./src/planet_levels/JungleArenaLevel/FireBall.js?");

/***/ }),

/***/ "./src/planet_levels/JungleArenaLevel/JungleArenaLevel.js":
/*!****************************************************************!*\
  !*** ./src/planet_levels/JungleArenaLevel/JungleArenaLevel.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return JungleArenaLevel; });\n/* harmony import */ var _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BasePlanetLevel */ \"./src/planet_levels/BasePlanetLevel.js\");\n/* harmony import */ var _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../PlanetTileset */ \"./src/PlanetTileset.js\");\n/* harmony import */ var _ArenaEnemy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ArenaEnemy */ \"./src/planet_levels/JungleArenaLevel/ArenaEnemy.js\");\n\n\n\n\n/**\n * Jungle Arena Level\n * Player has a shield that activates with the space bar\n * Objective is to defeat waves of enemies by reflecting their projectiles back at them\n * -Tyler Smith\n */\nclass JungleArenaLevel extends _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n  constructor() {\n    super();\n\n    this.playerSpawnX = 15;\n    this.playerSpawnY = 20;\n    this.playerSpawnFaceDirection = 1;\n    this.shieldActivated = false;\n    this.shieldTime = 0;\n    this.shieldRecharging = false;\n    this.shieldRechargeTime = 0;\n    this.enemyCount = 2;\n    this.currentwave = 1;\n    this.waves = 5;\n    this.activeEnemies = [];\n    this.loadingEnemies = false;\n    this.gameover = '';\n    this.message = [];\n    this.message.push('You must overcome all foes to obtain the treasure');\n    this.message.push('Press and hold fire to activate shield');\n    this.message.push('When the shield is blue shots can be reflected and enemies defeated');\n    this.renderingText = true;\n\n    //Treasure Info\n    this.spritesheet = new Image();\n    this.success = false;\n    this.finished = false;\n    this.spritesheet.src = \"resources/planet_tilesets/jungle_arena_level/jungletileset.png\";\n    this.treasureSprite = {\n        image: this.spritesheet,\n        sx: 5 * 32,\n        sy: 64,\n        x: 15,\n        y: 6\n      };\n    \n    //First 2 enemies always spawn in same place\n    this.activeEnemies.push(new _ArenaEnemy__WEBPACK_IMPORTED_MODULE_2__[\"default\"](11,4));\n    this.activeEnemies.push(new _ArenaEnemy__WEBPACK_IMPORTED_MODULE_2__[\"default\"](20,4));\n\n    // Load Tileset\n    this.tileset = new _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/jungle_arena_level/jungletileset.json */ \"./dist/resources/planet_tilesets/jungle_arena_level/jungletileset.json\"),\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/jungle_arena_level/tilemap.json */ \"./dist/resources/planet_tilesets/jungle_arena_level/tilemap.json\"),\n      \"resources/planet_tilesets/jungle_arena_level/jungletileset.png\");\n\n    this.icon = new Image(32, 32);  // Could be taken from your tileset, this is just a sample blank image.\n    this.name = \"Jungle Arena Level\";\n  }\n\n  /** @method\n   * Called when the player interacts with a tile.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the interacted tile (in front of player).\n   * @param y Y grid coordinate of the interacted tile (in front of player).\n   */\n  playerInteracted(player, x, y) {\n    if(x === this.treasureSprite.x && y === this.treasureSprite.y){\n      this.success = true;\n      this.finished = true;\n    }\n    if(this.gameover === 'lose'){\n      player.movePlayerToSpawn()\n            this.enemyCount = 2;\n            this.waves = 5;\n            this.currentwave = 1\n            this.activeEnemies = [];\n            this.loadingEnemies = false;\n            this.gameover = '';\n            this.activeEnemies.push(new _ArenaEnemy__WEBPACK_IMPORTED_MODULE_2__[\"default\"](11,4));\n            this.activeEnemies.push(new _ArenaEnemy__WEBPACK_IMPORTED_MODULE_2__[\"default\"](20,4));\n    }\n    this.message = [];\n    this.renderingText = false;\n  }\n\n  /**\n   * Called when the player moves.\n   * @param player Representation of the player.\n   */\n  playerMoved(player) {\n  }\n\n  /**\n   * Called when the player fires a weapon.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the tile the player fires into (in front of player).\n   * @param y Y grid coordinate of the tile the player fires into (in front of player).\n   */\n  playerFired(player, x, y) {\n    \n  }\n\n  /**\n   * Called when the player attempts to move into tile at the given coordinates.\n   * @param x The X coordinate of the attempted move.\n   * @param y The Y coordinate of the attempted move.\n   * @return True if the player may pass, false if the requested tile is \"blocked\".\n   */\n  tilePassable(x, y) {\n    return this.tileset.getTile(x, y)[\"passable\"] === true;\n  }\n\n  /** @method\n   * Update any entities within this planet level, including the player.\n   * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n   * @param {Input} input - the input from this and the prior frame\n   * @param {Game} game - the game object\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  update(elapsedTime, input, game, player) {\n      player.update(elapsedTime, input, game);\n      if(!this.renderingText){\n        if(this.gameover === 'lose'){\n          this.message.push('Game Over');\n          this.renderingText = true;\n        }\n        if(input.keyUp(' ') && !this.shieldRecharging){\n          this.shieldRecharging = true;\n          this.shieldRechargeTime = 0;\n        }\n        else if(input.keyDown(' ')){\n          if(this.gameover === 'lose'){\n            player.movePlayerToSpawn()\n            this.enemyCount = 2;\n            this.waves = 5;\n            this.currentwave = 1\n            this.activeEnemies = [];\n            this.loadingEnemies = false;\n            this.gameover = '';\n            this.activeEnemies.push(new _ArenaEnemy__WEBPACK_IMPORTED_MODULE_2__[\"default\"](11,4));\n            this.activeEnemies.push(new _ArenaEnemy__WEBPACK_IMPORTED_MODULE_2__[\"default\"](20,4));\n          }\n          else if(!this.shieldRecharging){\n            this.shieldActivated = true;\n            this.shieldTime += elapsedTime;\n          }\n        }\n        else if(input.keyPressed(' ') && !this.shieldRecharging){\n            this.shieldActivated = true;\n            this.shieldTime += elapsedTime;\n        }\n        else{\n          this.shieldActivated = false;\n          this.shieldTime = 0;\n        }\n        if(this.shieldRecharging){\n          this.shieldRechargeTime += elapsedTime;\n          if(this.shieldRechargeTime > 1000){\n            this.shieldRecharging = false;\n            this.shieldRechargeTime = 0;\n          }\n  \n        }\n  \n        //Update enemies or start next wave if they are all dead. Spawn treasure if all waves completed\n        if(this.activeEnemies.length === 0 && !this.loadingEnemies){\n          if(this.waves > 0){\n            this.loadingEnemies = true;\n            setTimeout(() => {\n              this.waves--;\n              this.currentwave++;\n              this.enemyCount++;\n              for(var i=0; i < this.enemyCount; i++){\n                var randx = Math.round(Math.random() * (23 - 8) + 8);\n                var randy = Math.round(Math.random() * (22 - 1) + 1);\n                do{\n                  randx = Math.round(Math.random() * (23 - 8) + 8);\n                  randy = Math.round(Math.random() * (22 - 1) + 1);\n                }\n                while(randx === player.x && randy === player.y);\n                this.activeEnemies.push(new _ArenaEnemy__WEBPACK_IMPORTED_MODULE_2__[\"default\"](randx,randy));\n              }\n              this.loadingEnemies = false;    \n            }, 3000);\n          }\n          else{\n            if(this.gameover !== 'win'){\n              this.gameover = 'win';\n              this.message.push('You have proven yourself worthy!');\n              this.message.push('Now claim your treasure and leave');\n              this.renderingText = true;\n            }\n          }\n        }\n        else{\n          this.activeEnemies.forEach((enemy, index) => {\n              if(this.shieldActivated && this.shieldTime < 300){\n                if(enemy.x === player.x || enemy.x === player.x + 1 || enemy.x === player.x - 1){\n                  if(enemy.y === player.y || enemy.y === player.y + 1 || enemy.y === player.y - 1){\n                    enemy.dying = true;\n                  }\n                }\n              }\n              if(enemy.dead){\n                this.activeEnemies.splice(index, 1);\n              }\n              this.checkFireballCollision(enemy, player);\n              enemy.update(elapsedTime, player, this.tileset, this.shieldTime);\n          });\n        }\n      }\n      \n  }\n\n  /** @method\n   * Checks if projectiles are colliding with the player or enemies if it has been reflected\n   * @param {ArenaEnemy} currentenemy - the enemy who 'owns' the projectiles we are checking\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  checkFireballCollision(currentenemy, player){\n    currentenemy.fireballs.forEach((fireball, index) => {\n      var fireballXRounded = Math.round(fireball.x);\n      var fireballYRounded = Math.round(fireball.y);\n      if(fireball.reflected){\n        this.activeEnemies.forEach((enemy, key) => {\n          if(enemy.x === fireballXRounded && enemy.y === fireballYRounded ){\n            enemy.dying = true;\n          }\n        });\n      }\n      else{\n        if(player.x === fireballXRounded && player.y === fireballYRounded){\n          this.gameover = 'lose';\n        }\n      }\n      \n    });\n  }\n\n  /** @method\n   * Render the tileset, the player, and any other custom entities to the provided context.\n   * Draw here as if your visible grid is infinite, scrolling within a viewport is done by the PlanetLevelManager.\n   * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n   * @param {CanvasRenderingContext2D} context - the rendering context\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  render(elapsedTime, context, player) {\n    if(this.gameover !== 'lose' && !this.renderingText){\n      this.tileset.render(elapsedTime, context);\n      player.render(elapsedTime, context);\n  \n      if(this.shieldActivated){\n        if(this.shieldTime < 300){\n          context.strokeStyle = \"#70e4ff\";\n        }\n        else{\n          context.strokeStyle = \"#ff7cc4\";\n        }\n        context.beginPath();\n        context.arc(player.x * 32 + 16, player.y * 32 + 16, 32, 0, 2*Math.PI);\n        context.lineWidth=10;\n        context.stroke();\n      }\n      this.activeEnemies.forEach(enemy => enemy.render(elapsedTime, context));\n\n      if(this.gameover === 'win' && !this.success){\n        context.drawImage(\n          this.spritesheet,\n          this.treasureSprite.sx, this.treasureSprite.sy, 32, 32,\n          this.treasureSprite.x *32, this.treasureSprite.y*32, 32, 32\n        );\n      }\n    }\n    else{\n      //show game over message\n    }\n  }\n\n  /** @method\n   * Draw text using the static context (after scrolling).\n   * Only use this for drawing items on top of the screen.\n   * @param staticContext - The context to draw on top of the screen and scrolling elements.\n   */\n  renderStatic(elapsedTime, staticContext, player) {\n    if (this.message.length > 0) {\n      staticContext.fillStyle = 'black';\n      staticContext.fillRect(0, 576, 1024, 256);\n      staticContext.fillStyle = 'white';\n      staticContext.font = '24px Arial';\n      for (var i = 0; i < this.message.length; i++) {\n        staticContext.fillText(this.message[i], 60, 630+40*i);\n      }\n      staticContext.font = '18px Arial';\n      staticContext.fillText('Press F to continue', 800, 730);\n    }\n    else {\n      staticContext.fillStyle = 'transparent';\n    }\n  }\n}\n\n//# sourceURL=webpack:///./src/planet_levels/JungleArenaLevel/JungleArenaLevel.js?");

/***/ }),

/***/ "./src/planet_levels/LavaPlanetLevel/LavaPlanetLevel.js":
/*!**************************************************************!*\
  !*** ./src/planet_levels/LavaPlanetLevel/LavaPlanetLevel.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return LavaPlanetLevel; });\n/* harmony import */ var _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BasePlanetLevel */ \"./src/planet_levels/BasePlanetLevel.js\");\n/* harmony import */ var _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../PlanetTileset */ \"./src/PlanetTileset.js\");\n/* harmony import */ var _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Bullets */ \"./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Bullets.js\");\n/* harmony import */ var _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Entity */ \"./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Entity.js\");\n/* harmony import */ var _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Altar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Altar */ \"./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/Altar.js\");\n\n\n\n\n\n\n\n//everything that is interactable is spwaned using this class not the tilemap. \n\n//Global Variables for Lava Planet\nvar bullets = [];\nvar altars = [];\nvar entities = [];\nconst colors = [\"black\",\"red\",\"yellow\",\"white\",\"pink\",\"brown\"]\n\nvar timePassed = 0;\n/**\n * Example SamplePlanetLevel which extends the base planet class functionality.\n * ** DO NOT MODIFY THIS CLASS. **\n *\n * To start your own planet, copy this file and rename the class to your own level name, then customize the various\n * methods to tailor it to your game.\n */\nclass LavaPlanetLevel extends _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n  /**\n   * Called when the level is being created.\n   * Be sure to call super() first (before anything else) to ensure the basic planet structure is in place.\n   */\n  constructor() {\n    super();\n\n    this.playerSpawnX = 3;\n    this.playerSpawnY = 3;\n    this.playerSpawnFaceDirection = 1;\n    this.playerHealth = 1; \n    // This loads your own tileset created from Tiled.\n    // You'll need the tileset.json, tilemap.json, and image.png. Look at the PlanetTileset class for more details.\n\n    // First two arguments (tileset and tilemap) are relative to the current folder (wherever this file is).\n    // Third argument (image) is relative to the dist folder.\n    this.tileset = new _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/tileset.json */ \"./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/tileset.json\"),\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/tilemap.json */ \"./dist/resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/tilemap.json\"),\n      \"resources/planet_tilesets/lavaPlanetLevel/lava_planet_level/tiles.png\");\n    this.timePassed = 0;\t\n\tthis.GolemBulletTime = 0 ;\n\tthis.VolcanoBulletTime = 0;\n\t\n    this.spawnAltar();\n\t  \n\t  \n    this.icon = new Image(32, 32);  // Could be taken from your tileset, this is just a sample blank image.\n    this.name = \"Lava Planet Level\";\n     \n    //TO DISPLAY TEXT ADD THIS TO YOUR CLASS\n    //You'll have changes in playerInteracted, tilePassable, and renderStatic.\n    //MAKE SURE YOU GET THEM ALL \n    //If you need more reference, feel free to look at the implementation in LizardJungleLevel\n    this.message = [];\n    this.message.push('Destroy all the Altars to get the Treasure, Altars are durable so dont give up');\n\t\n    //push each line individually\n    //you'll have to check if something goes off the screen and adjust for that by breaking\n    //it into multiple push statements\n  }\n\n  /** @method\n   * Called when the player interacts with a tile.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the interacted tile (in front of player).\n   * @param y Y grid coordinate of the interacted tile (in front of player).\n   */\n  playerInteracted(player, x, y) {\n    console.log(\"Player interacted with \" + x + \",\" + y);\n   this.startNewGame(player);\n    //This code handles interacting with things and properly clearing the box\n    //I would suggest copying this exactly and then changing the if to whatever you need\n    var message = '';\n    if (x == 5) {\n      message = \"wow!\";\n    }\n    if (this.message.length !== 0 && message !== '') this.message.length = 0;\n    else if (message === '') {\n      this.message.length = 0;\n    }\n    else this.message.push(message);\n\n  }\n\n  /**\n   * Called when the player moves.\n   * @param player Representation of the player.\n   */\n  playerMoved(player) {\n    console.log(\"Player at \" + player.x + \",\" + player.y);\n  }\n\n  /**\n   * Called when the player fires a weapon.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the tile the player fires into (in front of player).\n   * @param y Y grid coordinate of the tile the player fires into (in front of player).\n   */\n  playerFired(player, x, y) {\n    console.log(\"Player fired at \" + x + \",\" + y);\n\t\tswitch(player.faceDirection)\n\t{\n\t\tcase 0 : \n\t\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (player.x*32+16,player.y*32+16,\"north\",0.3,\"magenta\",\"player\") ); \n\t\t//bullets.push (new Bullet (Math.floor (player.x /32),Math.floor (player.y / 32),\"north\",0.3,\"magenta\",\"player\") ); \n\t\tbreak;\n\t\tcase 1 : \n\t\t bullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (player.x*32+16,player.y*32+16,\"west\",0.3,\"magenta\",\"player\") ); \n\t\tbreak;\n\t\tcase 2 :\n\t\t  bullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (player.x*32+16,player.y*32+16,\"south\",0.3,\"magenta\",\"player\") ); \n\t\t  break;\n\t\t  case 3 : \n\t\t  bullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (player.x*32+16,player.y*32+16,\"east\",0.3,\"magenta\",\"player\") ); \n\t\t  break;\n\t}\n  }\n\n \n  \n  /**\n   * Called when the player attempts to move into tile at the given coordinates.\n   * @param x The X coordinate of the attempted move.\n   * @param y The Y coordinate of the attempted move.\n   * @return True if the player may pass, false if the requested tile is \"blocked\".\n   */\n  tilePassable(x, y) {\n    if (this.message.length > 0) return false; //Add this line so you can't move when the text box is there\n    return this.tileset.getTile(x, y)[\"passable\"] === true;\n  }\n\n  \n// reset the game to back to the begining.     \n   startNewGame(player){\n\t  altars = [];\n\t  bullets = [];\n\t  entities = [];\n\t  this.playerHealth = 1; \n\t  this.spawnAltar();\n\t  player.movePlayerToSpawn();\n  }\n  \n \n \n     /**\n   * create all altars in game\n   */\n   spawnAltar (){\n\t   \taltars.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Altar__WEBPACK_IMPORTED_MODULE_4__[\"default\"](5,2,this.tileset));\n\t\taltars.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Altar__WEBPACK_IMPORTED_MODULE_4__[\"default\"](17,5,this.tileset));\n\t\taltars.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Altar__WEBPACK_IMPORTED_MODULE_4__[\"default\"](29,29,this.tileset));\n\t\taltars.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Altar__WEBPACK_IMPORTED_MODULE_4__[\"default\"](10,28,this.tileset));\n\t\taltars.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Altar__WEBPACK_IMPORTED_MODULE_4__[\"default\"](2,29,this.tileset));\n\t\taltars.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Altar__WEBPACK_IMPORTED_MODULE_4__[\"default\"](23,29,this.tileset));\n\t\taltars.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Altar__WEBPACK_IMPORTED_MODULE_4__[\"default\"](13,3,this.tileset));\n\t\taltars.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Altar__WEBPACK_IMPORTED_MODULE_4__[\"default\"](17,5,this.tileset));\n\t\taltars.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Altar__WEBPACK_IMPORTED_MODULE_4__[\"default\"](25,2,this.tileset));\n\t\taltars.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Altar__WEBPACK_IMPORTED_MODULE_4__[\"default\"](29,2,this.tileset));\n\t\taltars.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Altar__WEBPACK_IMPORTED_MODULE_4__[\"default\"](16,20,this.tileset));\n   }\n  \n spwanGolems () {\n\t    entities.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Entity__WEBPACK_IMPORTED_MODULE_3__[\"default\"](12, 9 , this.tileset));\n        entities.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Entity__WEBPACK_IMPORTED_MODULE_3__[\"default\"](10, 15, this.tileset));\n        entities.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Entity__WEBPACK_IMPORTED_MODULE_3__[\"default\"](7, 23, this.tileset));\n        entities.push(new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Entity__WEBPACK_IMPORTED_MODULE_3__[\"default\"](24 , 13, this.tileset));\t\n  }\n  \n  VolcanoFired() {\n\t  //Volcano at 22,0 tile\t  \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (22*32+16,0*32+16,\"south\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (22*32+16,0*32+16,\"north\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (22*32+16,0*32+16,\"west\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (22*32+16,0*32+16,\"east\",0.1,\"red\",\"volcano\") ); \n\t//Volcano at 23,0 tile\t  \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (23*32+16,0*32+16,\"south\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (23*32+16,0*32+16,\"north\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (23*32+16,0*32+16,\"west\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (23*32+16,0*32+16,\"east\",0.1,\"red\",\"volcano\") );\n\t//Volcano at 3,15 tile\t\t\t\n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (3*32+16,15*32+16,\"south\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (3*32+16,15*32+16,\"north\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (3*32+16,15*32+16,\"west\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (3*32+16,15*32+16,\"east\",0.1,\"red\",\"volcano\") ); \n\t//Volcano at 18,26 tile\t\n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (18*32+16,26*32+16,\"south\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (18*32+16,26*32+16,\"north\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (18*32+16,26*32+16,\"west\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (18*32+16,26*32+16,\"east\",0.1,\"red\",\"volcano\") ); \n\t//Volcano at 17,26 tile\t\n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (17*32+16,26*32+16,\"south\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (17*32+16,26*32+16,\"north\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (17*32+16,26*32+16,\"west\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (17*32+16,26*32+16,\"east\",0.1,\"red\",\"volcano\") ); \n\t//Volcano at 4,15 tile\t\n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (4*32+16,15*32+16,\"south\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (4*32+16,15*32+16,\"north\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (4*32+16,15*32+16,\"west\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (4*32+16,15*32+16,\"east\",0.1,\"red\",\"volcano\") ); \n\t//Volcano at 27 15 \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (27*32+16,15*32+16,\"south\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (27*32+16,15*32+16,\"north\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (27*32+16,15*32+16,\"west\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (27*32+16,15*32+16,\"east\",0.1,\"red\",\"volcano\") );\n\t//volcano at 28 16\n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (28*32+16,15*32+16,\"south\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (28*32+16,15*32+16,\"north\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (28*32+16,15*32+16,\"west\",0.1,\"red\",\"volcano\") ); \n\tbullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (28*32+16,15*32+16,\"east\",0.1,\"red\",\"volcano\") );\t  \n  }\n\t    enemyFired () {\t\t\t\t\n\t    entities.forEach(function(enemy){\n\t\t\tlet colorRandom1  = Math.floor((Math.random() * 6) + 1);\n\t\t    let colorRandom2  = Math.floor((Math.random() * 6) + 1);\n\t\t    let colorRandom3  = Math.floor((Math.random() * 6) + 1);\n\t\t\tlet colorRandom4  = Math.floor((Math.random() * 6) + 1);\n\t\t  bullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (enemy.x*32+16,enemy.y*32+16,\"north\",0.2,colors[colorRandom1],\"enemy\") ); \n\t\t  bullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (enemy.x*32+16,enemy.y*32+16,\"west\" ,0.2,colors[colorRandom2],\"enemy\") ); \n\t\t  bullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (enemy.x*32+16,enemy.y*32+16,\"east\" ,0.2,colors[colorRandom3],\"enemy\") );\n          bullets.push (new _dist_resources_planet_tilesets_lavaPlanetLevel_lava_planet_level_Bullets__WEBPACK_IMPORTED_MODULE_2__[\"default\"] (enemy.x*32+16,enemy.y*32+16,\"south\",0.2,colors[colorRandom4],\"enemy\") );\t\t  \n\t  });\n   }\n  \n\n  /** @method\n   * Render the tileset, the player, and any other custom entities to the provided context.\n   * Draw here as if your visible grid is infinite, scrolling within a viewport is done by the PlanetLevelManager.\n   * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n   * @param {CanvasRenderingContext2D} context - the rendering context\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  render(elapsedTime, context, player){\n   \n    \n  this.tileset.render(elapsedTime, context);\n    player.render(elapsedTime, context);\n\t\tentities.forEach( function(entity){ entity.render(elapsedTime, context);});\t\t\t// Draws entities on map other than player\n\t\t \tbullets.forEach(function(bullet){ \n\t\tbullet.render(context); // render all the bullets\n\t});\n\n\taltars.forEach(function(altar){\n\t\taltar.render(context);\n\t});\n\t \n   if (altars.length == 0){\n\t      //entities.push();\n\t\t  this.tileset.drawTile(13,11,22,context);\n\t  }\n\t\n  }\n\n \n \n \n \n \n  /** @method\n   * Update any entities within this planet level, including the player.\n   * @param {DOMHighResTimeStamp} elaspedTime - the amount of time elapsed this frame\n   * @param {Input} input - the input from this and the prior frame\n   * @param {Game} game - the game object\n   * @param {PlanetPlayer} player - representation of the player\n   */\n    update(elaspedTime, input, game, player) {\n    player.update(elaspedTime, input, game);\n\t\ttimePassed += elaspedTime;\t\t\t\t\t\t\t\t\t\t//used to track time between calls\n\tthis.GolemBulletTime  += elaspedTime;\n\tthis.VolcanoBulletTime += elaspedTime;\n\tif(timePassed >= 3750 && entities.length <= 10){\t\t\t\t//Edit this to lower spawn time and increase/decrease limit of entities\n  \n        this.spwanGolems();\t\t\n\t\ttimePassed = 0 ;\n\t}\t\n\tif (this.GolemBulletTime  >= 1500){\n\t\t\tthis.enemyFired ();\n\t\t\tthis.GolemBulletTime = 0 ;\n\t}\n\tif (this.VolcanoBulletTime >= 4500 ) {\n\t\tthis.VolcanoFired ();\t    \n\t}\n\t\n\t\t\tif ( this.VolcanoBulletTime >= 5500) {\n\t\t\tthis.VolcanoFired ();\n\t\t\tthis.VolcanoBulletTime = 0 ;\n\t\t}\n\tentities.forEach( function(entity){ entity.update(elaspedTime, player.x, player.y);});  //updates entities on level other than player\n     \n\t\t\t\t \tbullets.forEach(function(bullet){\n\t\tbullet.update(elaspedTime); // update function for all the bullets\n\t});\n\n\t//a loop to check for collision for when player hit or get hit by bullets. \n\tfor ( var q = 0 ; q < bullets.length; q++ ) \n\t{\t\n       if( bullets[q].owner==\"player\"){\n\t\t      //loop for checking with golems entities. \n\t\t\t  for(var i =0; i < entities.length; i++ ) {\t\t             \n\t\t\t\t   if(Math.floor( bullets[q].x /32)== entities[i].x && Math.floor ( bullets[q].y/32) == entities[i].y )\n\t\t\t\t   { \n\t\t\t   \t   bullets.splice(q,1);\n\t\t\t   entities.splice(i,1);\t\t\t   \n\t\t\t   break;\n\t\t\t   }\n\t\t\t  }\n              \tif (bullets[q] == undefined ) { break;}\t\n\t\t\t\t\n\t\t\t\t//loop for  altars checking. \n\t\t\t  for(var i =0; i < altars.length; i++ ) {          \n                if (altars[i].health == 0){ \n\t\t\t\taltars.splice(i,1);\n\t\t\t\tthis.playerHealth ++;\n\t\t\t\tbreak;\n\t\t\t\t}\t\t  \n\t\t\t\t  else if(Math.floor( bullets[q].x /32) == altars[i].x && Math.floor ( bullets[q].y/32) == altars[i].y) \n\t\t\t\t{\n\t\t\t\t\t   bullets.splice(q,1);\t\n\t\t\t\t\t   altars[i].health -- ;\n\t\t\t        break;\t\t\t   \n\t\t\t   }\n\t  }\n\t\t}\n\t\n\t\telse if (bullets[q].owner == \"enemy\" || bullets[q].owner == \"volcano\"){\n\t\t\tif ( Math.floor (bullets[q].x /32) == player.x && Math.floor(bullets[q].y /32 ) == player.y )\n\t\t\t{\t\t\t\t\n\t\t\t\tthis.playerHealth -= 1; \n\t\t\t\t//console.log(\"player got hit, his current healh is : \"+ this.playerHealth);\n\t\t\t\tbullets.splice(q,1);\n\t\t\t\tif (this.playerHealth <= 0) \n\t\t\t\t{\n\t\t\t\tthis.startNewGame(player);\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n  } //end for collision checking \n\t\n\t// loop for making bullets stays for short distance.\n\t   for (var i = 0 ; i < bullets.length; i ++ ) {\t\n\t   if (bullets[i].owner == \"player\" ) {\n\t\t   if (bullets[i].travelDistance >= (5*32) ) {\n\t\t\t   bullets.splice(i,1);\t\t\n  \t\t\t   \n\t\t   }\n\t   }\n\t\t  \t   else if (bullets[i].owner == \"enemy\"  ) {\n\t\t   if (bullets[i].travelDistance >= (10*32) ) {\n\t\t\t   bullets.splice(i,1);\t\t\t   \n\t\t   }\n\t   }\n\t   else if (bullets[i].owner == \"volcano\" ){\n\t\t     if (bullets[i].travelDistance >= (5*32) ) {\n\t\t\t   bullets.splice(i,1);\t\t\t   \n\t\t   }\n\t   }\n    }\n\t//winning check. \n\tif(altars.length == 0 ){\n\t\t\n\t\tif(player.x == 13 && player.y == 11){\n\t\t\tthis.success = true;\n\t\t\tthis.finished = true;\n\t\t\tconsole.log(\"Win\");\n\t\t}\n\t}\n  }//update\n\t\n\t\n\t\n\t\n  /** @method\n   * Draw items using the static context (after scrolling).\n   * Only use this for drawing items on top of the screen.\n   * @param staticContext - The context to draw on top of the screen and scrolling elements.\n   */\n  renderStatic(elapsedTime, staticContext, player) {\n    //just copy and paste all of this\n      if (this.message.length > 0) {\n        staticContext.fillStyle = 'white';\n        staticContext.fillRect(0, 576, 1024, 256);\n        staticContext.fillStyle = 'black';\n        staticContext.font = '24px Arial';\n        for (var i = 0; i < this.message.length; i++) {\n          staticContext.fillText(this.message[i], 60, 630+40*i);\n        }\n        staticContext.font = '18px Arial';\n        staticContext.fillText('Press F to continue', 800, 730);  \n      }\n      else {\n        staticContext.fillStyle = 'transparent';\n      }\n\t  \t\tstaticContext.fillStyle = 'white';\n\t  staticContext.font = '18px Arial';\n\t  staticContext.fillText('Heatlth: ' +this.playerHealth, 900, 750);\n\t  if (altars.length > 0 ) {  \n\t  staticContext.fillText('Remaining Altars: ' +altars.length, 50, 750);\n\t  }\n\t  else {\n\t\t  staticContext.fillText('Take the Treasure' , 50, 750);\n\t  }\t\n    }\n  }\n\n\n//# sourceURL=webpack:///./src/planet_levels/LavaPlanetLevel/LavaPlanetLevel.js?");

/***/ }),

/***/ "./src/planet_levels/LizardJungleLevel/LizardJungleLevel.js":
/*!******************************************************************!*\
  !*** ./src/planet_levels/LizardJungleLevel/LizardJungleLevel.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return LizardJungleLevel; });\n/* harmony import */ var _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BasePlanetLevel */ \"./src/planet_levels/BasePlanetLevel.js\");\n/* harmony import */ var _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../PlanetTileset */ \"./src/PlanetTileset.js\");\n/* harmony import */ var _LizardPeople__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LizardPeople */ \"./src/planet_levels/LizardJungleLevel/LizardPeople.js\");\n\n\n\n\n\n\nclass LizardJungleLevel extends _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n  /**\n   * Called when the level is being created.\n   * Be sure to call super() first (before anything else) to ensure the basic planet structure is in place.\n   */\n  constructor() {\n    super();\n\n    this.playerSpawnX = 15;\n    this.playerSpawnY = 18;\n    this.playerSpawnFaceDirection = 1;\n\n\n    // This loads your own tileset created from Tiled.\n    // You'll need the tileset.json, tilemap.json, and image.png. Look at the PlanetTileset class for more details.\n\n    // First two arguments (tileset and tilemap) are relative to the current folder (wherever this file is).\n    // Third argument (image) is relative to the dist folder.\n    this.tileset = new _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/LizardJungleLevel/jungle_tileset.json */ \"./dist/resources/planet_tilesets/LizardJungleLevel/jungle_tileset.json\"),\n      __webpack_require__(/*! ../../../dist/resources/planet_tilesets/LizardJungleLevel/lizard_jungle_planet_tilemap.json */ \"./dist/resources/planet_tilesets/LizardJungleLevel/lizard_jungle_planet_tilemap.json\"),\n      \"resources/planet_tilesets/LizardJungleLevel/jungle tileset.png\");\n\n    this.icon = new Image(32, 32);  // Could be taken from your tileset, this is just a sample blank image.\n    this.name = \"Lizard Jungle Level\";\n    this.message = [];\n    this.final = false;\n\n    this.message.push(\"Welcome to hurgerbluger. The legends say that there's treasure hidden in these trees.\");\n    this.message.push(\"Maybe talking to the locals will give some clues as to its location!\");\n\n    this.lizards = [];\n    this.lizards.push(new _LizardPeople__WEBPACK_IMPORTED_MODULE_2__[\"default\"](2, 2, 4, this.tileset,\n      \"I heard the treasure was in the part of the forest that's shaped sort of like a 5.\"));\n    this.lizards.push(new _LizardPeople__WEBPACK_IMPORTED_MODULE_2__[\"default\"](21, 9, 2, this.tileset,\n      \"I thought the treasure was on the south side of a tree.\"));\n    this.lizards.push(new _LizardPeople__WEBPACK_IMPORTED_MODULE_2__[\"default\"](23, 20, 3, this.tileset,\n      \"Supposedly, the treasure is hidden in a tree somewhere!\"));\n    this.lizards.push(new _LizardPeople__WEBPACK_IMPORTED_MODULE_2__[\"default\"](12, 14, 1, this.tileset,\n      \"The stories say that the treasure is close to the western edge of the forest.\"));\n    this.lizards.push(new _LizardPeople__WEBPACK_IMPORTED_MODULE_2__[\"default\"](4, 7, 1, this.tileset,\n      \"A friend told me that if you get to the grove with three trees, you've gone too far.\"));\n    this.lizards.push(new _LizardPeople__WEBPACK_IMPORTED_MODULE_2__[\"default\"](22, 1, 3, this.tileset,\n      \"There's treasure somewhere??\"));\n    this.lizards.push(new _LizardPeople__WEBPACK_IMPORTED_MODULE_2__[\"default\"](29, 5, 3, this.tileset,\n      \"Have you seen Rathalgus lately? I swear he's gone crazy muttering about some treasure.\"));\n    this.lizards.push(new _LizardPeople__WEBPACK_IMPORTED_MODULE_2__[\"default\"](29, 6, 4, this.tileset,\n      \"I thought Rathalgus was just always like that...\"));\n    this.lizards.push(new _LizardPeople__WEBPACK_IMPORTED_MODULE_2__[\"default\"](7, 17, 3, this.tileset,\n      \"Rathalgus knows. Rathalgus knows treasure is here somewhere. Rathalgus KNOWS.\"));\n  }\n\n  /** @method\n   * Called when the player interacts with a tile.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the interacted tile (in front of player).\n   * @param y Y grid coordinate of the interacted tile (in front of player).\n   */\n  playerInteracted(player, x, y) {\n    //console.log(\"Player interacted with \" + x + \",\" + y);\n    if (!this.final && x === 2 && y === 14 && player.y === 15) {\n      this.message.push('Nestled in a hole in a tree trunk you find a small statue of a lizard.');\n      this.message.push(\"It looks painstakingly hand carved. This must be the treasure!\");\n      this.final = true;\n      return;\n    }\n    var message = '';\n    this.lizards.forEach(function(lizard){\n      if (x == lizard.x && y == lizard.y) {\n        message = lizard.text;\n      }\n    });\n    if (this.message.length !== 0 && message !== '') this.message.length = 0;\n    else if (message === '') {\n      this.message.length = 0;\n      if (this.final) {\n        this.finished = true;\n        this.success = true;\n      }\n    }\n    else this.message.push(message);\n  }\n\n  /**\n   * Called when the player moves.\n   * @param player Representation of the player.\n   */\n  playerMoved(player) {\n  }\n\n  /**\n   * Called when the player fires a weapon.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the tile the player fires into (in front of player).\n   * @param y Y grid coordinate of the tile the player fires into (in front of player).\n   */\n  playerFired(player, x, y) {\n  }\n\n  /**\n   * Called when the player attempts to move into tile at the given coordinates.\n   * @param x The X coordinate of the attempted move.\n   * @param y The Y coordinate of the attempted move.\n   * @return True if the player may pass, false if the requested tile is \"blocked\".\n   */\n  tilePassable(x, y) {\n    if (this.message.length > 0) return false;\n    var flag = false;\n    this.lizards.forEach(function(lizard) {\n      if (x === lizard.x && y === lizard.y) {\n        flag = true;\n      }\n    });\n    if (flag) return false;\n    return this.tileset.getTile(x, y)[\"passable\"] !== \"false\";\n  }\n\n  /** @method\n   * Update any entities within this planet level, including the player.\n   * @param {DOMHighResTimeStamp} elaspedTime - the amount of time elapsed this frame\n   * @param {Input} input - the input from this and the prior frame\n   * @param {Game} game - the game object\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  update(elaspedTime, input, game, player) {\n    player.update(elaspedTime, input, game);\n    this.lizards.forEach(function(lizard) {\n      lizard.update(elaspedTime);\n    })\n  }\n\n  /** @method\n   * Render the tileset, the player, and any other custom entities to the provided context.\n   * Draw here as if your visible grid is infinite, scrolling within a viewport is done by the PlanetLevelManager.\n   * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n   * @param {CanvasRenderingContext2D} context - the rendering context\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  render(elapsedTime, context, player) {\n    this.tileset.render(elapsedTime, context);\n    player.render(elapsedTime, context);\n    this.lizards.forEach(function(lizard) {\n      lizard.render(context);\n    })\n  }\n\n  /** @method\n   * Draw text using the static context (after scrolling).\n   * Only use this for drawing items on top of the screen.\n   * @param staticContext - The context to draw on top of the screen and scrolling elements.\n   */\n  renderStatic(elapsedTime, staticContext, player) {\n    if (this.message.length > 0) {\n      staticContext.fillStyle = 'white';\n      staticContext.fillRect(0, 576, 1024, 256);\n      staticContext.fillStyle = 'black';\n      staticContext.font = '24px Arial';\n      for (var i = 0; i < this.message.length; i++) {\n        staticContext.fillText(this.message[i], 60, 630+40*i);\n      }\n      staticContext.font = '18px Arial';\n      staticContext.fillText('Press F to continue', 800, 730);\n    }\n    else {\n      staticContext.fillStyle = 'transparent';\n    }\n  }\n}\n\n\n//# sourceURL=webpack:///./src/planet_levels/LizardJungleLevel/LizardJungleLevel.js?");

/***/ }),

/***/ "./src/planet_levels/LizardJungleLevel/LizardPeople.js":
/*!*************************************************************!*\
  !*** ./src/planet_levels/LizardJungleLevel/LizardPeople.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return LizardPeople; });\nclass LizardPeople {\n  constructor(x, y, direction, tileset, text) {\n    this.x = x;\n    this.y = y;\n    this.direction = direction;\n    this.text = text;\n    this.tileset = tileset;\n    this.count = 1;\n  }\n\n  update(elapsedTime) {\n    this.count++;\n    if ((this.count % 45 === 0) && (this.x === 7)) {\n      this.direction = Math.floor(Math.random()*3)+1;\n      this.count = 0;\n    }\n    else if ((this.count % 75 === 0) && (this.x === 12)) {\n      this.direction = Math.floor(Math.random()*3)+1;\n      this.count = 0;\n    }\n    else if ((this.count % 90 === 0) && (this.x === 21)) {\n      this.direction = Math.floor(Math.random()*3)+1;\n      this.count = 0;\n    }\n  }\n\n  render(ctx) {\n    switch (this.direction) {\n      case 1:\n        this.tileset.drawTile(this.x, this.y, 15, ctx);\n        break;\n      case 2:\n        this.tileset.drawTile(this.x, this.y, 16, ctx);\n        break;\n      case 3:\n        this.tileset.drawTile(this.x, this.y, 17, ctx);\n        break;\n      case 4:\n        this.tileset.drawTile(this.x, this.y, 18, ctx);\n        break;\n    }\n  }\n}\n\n\n//# sourceURL=webpack:///./src/planet_levels/LizardJungleLevel/LizardPeople.js?");

/***/ }),

/***/ "./src/planet_levels/SamplePlanetLevel.js":
/*!************************************************!*\
  !*** ./src/planet_levels/SamplePlanetLevel.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SamplePlanetLevel; });\n/* harmony import */ var _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BasePlanetLevel */ \"./src/planet_levels/BasePlanetLevel.js\");\n/* harmony import */ var _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../PlanetTileset */ \"./src/PlanetTileset.js\");\n\n\n\n/**\n * Example SamplePlanetLevel which extends the base planet class functionality.\n * ** DO NOT MODIFY THIS CLASS. **\n *\n * To start your own planet, copy this file and rename the class to your own level name, then customize the various\n * methods to tailor it to your game.\n */\nclass SamplePlanetLevel extends _BasePlanetLevel__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n  /**\n   * Called when the level is being created.\n   * Be sure to call super() first (before anything else) to ensure the basic planet structure is in place.\n   */\n  constructor() {\n    super();\n\n    this.playerSpawnX = 10;\n    this.playerSpawnY = 10;\n    this.playerSpawnFaceDirection = 1;\n\n    // This loads your own tileset created from Tiled.\n    // You'll need the tileset.json, tilemap.json, and image.png. Look at the PlanetTileset class for more details.\n\n    // First two arguments (tileset and tilemap) are relative to the current folder (wherever this file is).\n    // Third argument (image) is relative to the dist folder.\n    this.tileset = new _PlanetTileset__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n      __webpack_require__(/*! ../../dist/resources/planet_tilesets/sample_planet_level/tileset.json */ \"./dist/resources/planet_tilesets/sample_planet_level/tileset.json\"),\n      __webpack_require__(/*! ../../dist/resources/planet_tilesets/sample_planet_level/tilemap.json */ \"./dist/resources/planet_tilesets/sample_planet_level/tilemap.json\"),\n      \"resources/planet_tilesets/sample_planet_level/tiles.png\");\n\n    this.icon = new Image(32, 32);  // Could be taken from your tileset, this is just a sample blank image.\n    this.name = \"Sample Planet Level\";\n\n    //TO DISPLAY TEXT ADD THIS TO YOUR CLASS\n    //You'll have changes in playerInteracted, tilePassable, and renderStatic.\n    //MAKE SURE YOU GET THEM ALL \n    //If you need more reference, feel free to look at the implementation in LizardJungleLevel\n    this.message = [];\n    this.message.push('starting text');\n    //push each line individually\n    //you'll have to check if something goes off the screen and adjust for that by breaking\n    //it into multiple push statements\n  }\n\n  /** @method\n   * Called when the player interacts with a tile.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the interacted tile (in front of player).\n   * @param y Y grid coordinate of the interacted tile (in front of player).\n   */\n  playerInteracted(player, x, y) {\n    console.log(\"Player interacted with \" + x + \",\" + y);\n\n    //This code handles interacting with things and properly clearing the box\n    //I would suggest copying this exactly and then changing the if to whatever you need\n    var message = '';\n    if (x == 5) {\n      message = \"wow!\";\n    }\n    if (this.message.length !== 0 && message !== '') this.message.length = 0;\n    else if (message === '') {\n      this.message.length = 0;\n    }\n    else this.message.push(message);\n\n    // if(this.map === undefined) {\n    //   this.map = 0;\n    // }\n    // this.map++;\n    // this.map %= 3;\n    // switch(this.map) {\n    //   case 0:\n    //     this.tileset.loadNewTilemap(require(\"../../dist/resources/planet_tilesets/sample_planet_level/tilemap.json\"));\n    //     break;\n    //   case 1:\n    //     this.tileset.loadNewTilemap(require(\"../../dist/resources/planet_tilesets/sample_planet_level/tilemap_large.json\"));\n    //     break;\n    //   case 2:\n    //     this.tileset.loadNewTilemap(require(\"../../dist/resources/planet_tilesets/sample_planet_level/tilemap_small.json\"));\n    //     break;\n    // }\n    // player.movePlayerToSpawn();\n  }\n\n  /**\n   * Called when the player moves.\n   * @param player Representation of the player.\n   */\n  playerMoved(player) {\n    console.log(\"Player at \" + player.x + \",\" + player.y);\n  }\n\n  /**\n   * Called when the player fires a weapon.\n   * @param player Representation of the player.\n   * @param x X grid coordinate of the tile the player fires into (in front of player).\n   * @param y Y grid coordinate of the tile the player fires into (in front of player).\n   */\n  playerFired(player, x, y) {\n    console.log(\"Player fired at \" + x + \",\" + y);\n  }\n\n  /**\n   * Called when the player attempts to move into tile at the given coordinates.\n   * @param x The X coordinate of the attempted move.\n   * @param y The Y coordinate of the attempted move.\n   * @return True if the player may pass, false if the requested tile is \"blocked\".\n   */\n  tilePassable(x, y) {\n    if (this.message.length > 0) return false; //Add this line so you can't move when the text box is there\n    return this.tileset.getTile(x, y)[\"passable\"] === true;\n  }\n\n  /** @method\n   * Update any entities within this planet level, including the player.\n   * @param {DOMHighResTimeStamp} elaspedTime - the amount of time elapsed this frame\n   * @param {Input} input - the input from this and the prior frame\n   * @param {Game} game - the game object\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  update(elaspedTime, input, game, player) {\n    player.update(elaspedTime, input, game);\n  }\n\n  /** @method\n   * Render the tileset, the player, and any other custom entities to the provided context.\n   * Draw here as if your visible grid is infinite, scrolling within a viewport is done by the PlanetLevelManager.\n   * @param {DOMHighResTimeStamp} elapsedTime - the amount of time elapsed this frame\n   * @param {CanvasRenderingContext2D} context - the rendering context\n   * @param {PlanetPlayer} player - representation of the player\n   */\n  render(elapsedTime, context, player) {\n    this.tileset.render(elapsedTime, context);\n    player.render(elapsedTime, context);\n  }\n\n  /** @method\n   * Draw items using the static context (after scrolling).\n   * Only use this for drawing items on top of the screen.\n   * @param staticContext - The context to draw on top of the screen and scrolling elements.\n   */\n  renderStatic(elapsedTime, staticContext, player) {\n    //just copy and paste all of this\n      if (this.message.length > 0) {\n        staticContext.fillStyle = 'white';\n        staticContext.fillRect(0, 576, 1024, 256);\n        staticContext.fillStyle = 'black';\n        staticContext.font = '24px Arial';\n        for (var i = 0; i < this.message.length; i++) {\n          staticContext.fillText(this.message[i], 60, 630+40*i);\n        }\n        staticContext.font = '18px Arial';\n        staticContext.fillText('Press F to continue', 800, 730);\n      }\n      else {\n        staticContext.fillStyle = 'transparent';\n      }\n    }\n  }\n\n\n//# sourceURL=webpack:///./src/planet_levels/SamplePlanetLevel.js?");

/***/ })

/******/ });